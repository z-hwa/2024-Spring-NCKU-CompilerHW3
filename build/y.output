Terminals unused in grammar

    CONTINUE


State 11 conflicts: 1 shift/reduce
State 17 conflicts: 1 shift/reduce
State 30 conflicts: 1 shift/reduce
State 49 conflicts: 2 shift/reduce
State 119 conflicts: 15 reduce/reduce
State 125 conflicts: 2 reduce/reduce
State 132 conflicts: 1 shift/reduce, 10 reduce/reduce
State 137 conflicts: 1 shift/reduce
State 153 conflicts: 2 shift/reduce
State 186 conflicts: 10 reduce/reduce
State 217 conflicts: 8 shift/reduce


Grammar

    0 $accept: Program $end

    1 $@1: ε

    2 Program: $@1 GlobalStmtList
    3        | ε

    4 GlobalStmtList: GlobalStmtList GlobalStmt
    5               | GlobalStmt

    6 GlobalStmt: DefineVariableStmt
    7           | FunctionDefStmt
    8           | CoutStmt
    9           | ReturnStmt
   10           | AssignStmt
   11           | SelectionStmt
   12           | IterationStmt
   13           | JumpStmt
   14           | FunctionCallStmt

   15 FunctionCallStmt: FunctionCall ';'

   16 JumpStmt: BREAK ';'

   17 $@2: ε

   18 $@3: ε

   19 IterationStmt: WHILE $@2 '(' Expression ')' $@3 CompoundStmt

   20 $@4: ε

   21 $@5: ε

   22 IterationStmt: FOR $@4 '(' ForCondition ')' $@5 CompoundStmt

   23 $@6: ε

   24 $@7: ε

   25 ForCondition: ExpressionStmt $@6 ExpressionStmt $@7 ExpressionStmt
   26             | VARIABLE_T IDENT ':' IDENT

   27 ExpressionStmt: Expression ';'
   28               | DefineVariableStmt
   29               | AssignBody
   30               | Expression
   31               | ';'

   32 CompoundStmt: '{' GlobalStmtList '}'
   33             | GlobalStmtList

   34 $@8: ε

   35 SelectionStmt: IF '(' Expression ')' $@8 Selection

   36 $@9: ε

   37 SelectionStmt: SelectionStmt ELSE $@9 Selection

   38 Selection: GlobalStmt

   39 $@10: ε

   40 $@11: ε

   41 Selection: '{' $@10 GlobalStmtList $@11 '}'

   42 AssignStmt: AssignBody ';'

   43 $@12: ε

   44 AssignBody: IDENT $@12 Assign

   45 @13: ε

   46 AssignBody: IDENT '[' @13 AssignList

   47 $@14: ε

   48 AssignList: Expression ']' $@14 Assign

   49 $@15: ε

   50 AssignList: Expression ']' '[' Expression ']' $@15 Assign

   51 Assign: Assignable
   52       | VAL_ASSIGN Assign
   53       | ADD_ASSIGN Assign
   54       | SUB_ASSIGN Assign
   55       | MUL_ASSIGN Assign
   56       | DIV_ASSIGN Assign
   57       | REM_ASSIGN Assign
   58       | BAN_ASSIGN Assign
   59       | BOR_ASSIGN Assign
   60       | BXO_ASSIGN Assign
   61       | SHR_ASSIGN Assign
   62       | SHL_ASSIGN Assign

   63 Assignable: STR_LIT
   64           | Expression

   65 DefineVariableStmt: VARIABLE_T DeclaratorList ';'

   66 DeclaratorList: Declarator
   67               | DeclaratorList ',' Declarator

   68 Declarator: IDENT
   69           | IDENT VAL_ASSIGN Assignable
   70           | IDENT '[' Expression ']'
   71           | IDENT '[' Expression ']' '[' Expression ']'

   72 $@16: ε

   73 Declarator: IDENT '[' Expression ']' $@16 VAL_ASSIGN '{' ArrayEles '}'

   74 @17: ε

   75 ArrayEles: @17 Assignable

   76 @18: ε

   77 ArrayEles: ArrayEles ',' @18 Assignable
   78          | ε

   79 ReturnStmt: RETURN Expression ';'
   80           | RETURN ';'

   81 $@19: ε

   82 CoutStmt: COUT $@19 SHL PrintableList ';'

   83 PrintableList: Printable
   84              | PrintableList SHL Printable

   85 Printable: STR_LIT
   86          | ENDL
   87          | Expression

   88 Expression: Or
   89           | STR_LIT

   90 Or: And
   91   | Or LOR And

   92 And: BitwiseOr
   93    | And LAN BitwiseOr

   94 BitwiseOr: BitwiseXor
   95          | BitwiseOr BOR BitwiseXor

   96 BitwiseXor: BitwiseAnd
   97           | BitwiseXor BXO BitwiseAnd

   98 BitwiseAnd: Equality
   99           | BitwiseAnd BAN Equality

  100 Equality: Relational
  101         | Equality EQL Relational
  102         | Equality NEQ Relational

  103 Relational: Shift
  104           | Relational LES Shift
  105           | Relational GTR Shift
  106           | Relational LEQ Shift
  107           | Relational GEQ Shift

  108 Shift: Additive
  109      | Shift SHR Additive

  110 Additive: Multiplicative
  111         | Additive ADD Multiplicative
  112         | Additive SUB Multiplicative

  113 Multiplicative: TypeCast
  114               | Multiplicative MUL TypeCast
  115               | Multiplicative DIV TypeCast
  116               | Multiplicative REM TypeCast

  117 TypeCast: Unary
  118         | '(' VARIABLE_T ')' Unary

  119 Unary: BNT Unary
  120      | ADD Unary
  121      | SUB Unary
  122      | NOT Unary
  123      | Post

  124 Post: Primary
  125     | Primary INC_ASSIGN
  126     | Primary DEC_ASSIGN

  127 Primary: INT_LIT
  128        | FLOAT_LIT
  129        | '(' Expression ')'
  130        | BOOL_LIT
  131        | IDENT
  132        | FunctionCall

  133 @20: ε

  134 Primary: IDENT '[' @20 List

  135 List: Expression ']'
  136     | Expression ']' '[' Expression ']'

  137 FunctionCall: IDENT '(' ArgumentList ')'

  138 ArgumentList: ArgumentListNonEmpty

  139 ArgumentListNonEmpty: Expression
  140                     | ArgumentListNonEmpty ',' Expression

  141 $@21: ε

  142 $@22: ε

  143 $@23: ε

  144 FunctionDefStmt: VARIABLE_T IDENT $@21 '(' $@22 FunctionParameterStmtList ')' $@23 '{' GlobalStmtList '}'

  145 FunctionParameterStmtList: FunctionParameterStmtList ',' FunctionParameterStmt
  146                          | FunctionParameterStmt
  147                          | ε

  148 FunctionParameterStmt: VARIABLE_T IDENT

  149 $@24: ε

  150 FunctionParameterStmt: VARIABLE_T IDENT $@24 '[' ']'


Terminals, with rules where they appear

    $end (0) 0
    '(' <object_val> (40) 19 22 35 118 129 137 144
    ')' (41) 19 22 35 118 129 137 144
    ',' (44) 67 77 140 145
    ':' (58) 26
    ';' (59) 15 16 27 31 42 65 79 80 82
    '[' (91) 46 50 70 71 73 134 136 150
    ']' (93) 48 50 70 71 73 135 136 150
    '{' (123) 32 41 73 144
    '}' (125) 32 41 73 144
    error (256)
    COUT (258) 82
    SHR (259) 109
    SHL (260) 82 84
    BAN (261) 99
    BOR (262) 95
    BXO (263) 97
    MUL (264) 114
    DIV (265) 115
    REM (266) 116
    GTR (267) 105
    LES (268) 104
    GEQ (269) 107
    LEQ (270) 106
    EQL (271) 101
    NEQ (272) 102
    LAN (273) 93
    LOR (274) 91
    VAL_ASSIGN (275) 52 69 73
    ADD_ASSIGN (276) 53
    SUB_ASSIGN (277) 54
    MUL_ASSIGN (278) 55
    DIV_ASSIGN (279) 56
    REM_ASSIGN (280) 57
    BAN_ASSIGN (281) 58
    BOR_ASSIGN (282) 59
    BXO_ASSIGN (283) 60
    SHR_ASSIGN (284) 61
    SHL_ASSIGN (285) 62
    INC_ASSIGN (286) 125
    DEC_ASSIGN (287) 126
    IF (288) 35
    ELSE (289) 37
    FOR (290) 22
    WHILE (291) 19
    RETURN (292) 79 80
    BREAK (293) 16
    CONTINUE (294)
    ENDL (295) 86
    VARIABLE_T <var_type> (296) 26 65 118 144 148 150
    IDENT <s_val> (297) 26 44 46 68 69 70 71 73 131 134 137 144 148 150
    BOOL_LIT <b_var> (298) 130
    INT_LIT <i_var> (299) 127
    FLOAT_LIT <f_var> (300) 128
    STR_LIT <s_var> (301) 63 85 89
    SUB <object_val> (302) 112 121
    NOT <object_val> (303) 122
    BNT <object_val> (304) 119
    ADD <object_val> (305) 111 120


Nonterminals, with rules where they appear

    $accept (60)
        on left: 0
    Program (61)
        on left: 2 3
        on right: 0
    $@1 (62)
        on left: 1
        on right: 2
    GlobalStmtList (63)
        on left: 4 5
        on right: 2 4 32 33 41 144
    GlobalStmt (64)
        on left: 6 7 8 9 10 11 12 13 14
        on right: 4 5 38
    FunctionCallStmt (65)
        on left: 15
        on right: 14
    JumpStmt (66)
        on left: 16
        on right: 13
    IterationStmt (67)
        on left: 19 22
        on right: 12
    $@2 (68)
        on left: 17
        on right: 19
    $@3 (69)
        on left: 18
        on right: 19
    $@4 (70)
        on left: 20
        on right: 22
    $@5 (71)
        on left: 21
        on right: 22
    ForCondition (72)
        on left: 25 26
        on right: 22
    $@6 (73)
        on left: 23
        on right: 25
    $@7 (74)
        on left: 24
        on right: 25
    ExpressionStmt (75)
        on left: 27 28 29 30 31
        on right: 25
    CompoundStmt (76)
        on left: 32 33
        on right: 19 22
    SelectionStmt (77)
        on left: 35 37
        on right: 11 37
    $@8 (78)
        on left: 34
        on right: 35
    $@9 (79)
        on left: 36
        on right: 37
    Selection (80)
        on left: 38 41
        on right: 35 37
    $@10 (81)
        on left: 39
        on right: 41
    $@11 (82)
        on left: 40
        on right: 41
    AssignStmt (83)
        on left: 42
        on right: 10
    AssignBody <object_val> (84)
        on left: 44 46
        on right: 29 42
    $@12 (85)
        on left: 43
        on right: 44
    @13 (86)
        on left: 45
        on right: 46
    AssignList <object_val> (87)
        on left: 48 50
        on right: 46
    $@14 (88)
        on left: 47
        on right: 48
    $@15 (89)
        on left: 49
        on right: 50
    Assign (90)
        on left: 51 52 53 54 55 56 57 58 59 60 61 62
        on right: 44 48 50 52 53 54 55 56 57 58 59 60 61 62
    Assignable <object_val> (91)
        on left: 63 64
        on right: 51 69 75 77
    DefineVariableStmt (92)
        on left: 65
        on right: 6 28
    DeclaratorList (93)
        on left: 66 67
        on right: 65 67
    Declarator (94)
        on left: 68 69 70 71 73
        on right: 66 67
    $@16 (95)
        on left: 72
        on right: 73
    ArrayEles (96)
        on left: 75 77 78
        on right: 73 77
    @17 (97)
        on left: 74
        on right: 75
    @18 (98)
        on left: 76
        on right: 77
    ReturnStmt (99)
        on left: 79 80
        on right: 9
    CoutStmt (100)
        on left: 82
        on right: 8
    $@19 (101)
        on left: 81
        on right: 82
    PrintableList <object_val> (102)
        on left: 83 84
        on right: 82 84
    Printable <object_val> (103)
        on left: 85 86 87
        on right: 83 84
    Expression <object_val> (104)
        on left: 88 89
        on right: 19 27 30 35 48 50 64 70 71 73 79 87 129 135 136 139 140
    Or <object_val> (105)
        on left: 90 91
        on right: 88 91
    And <object_val> (106)
        on left: 92 93
        on right: 90 91 93
    BitwiseOr <object_val> (107)
        on left: 94 95
        on right: 92 93 95
    BitwiseXor <object_val> (108)
        on left: 96 97
        on right: 94 95 97
    BitwiseAnd <object_val> (109)
        on left: 98 99
        on right: 96 97 99
    Equality <object_val> (110)
        on left: 100 101 102
        on right: 98 99 101 102
    Relational <object_val> (111)
        on left: 103 104 105 106 107
        on right: 100 101 102 104 105 106 107
    Shift <object_val> (112)
        on left: 108 109
        on right: 103 104 105 106 107 109
    Additive <object_val> (113)
        on left: 110 111 112
        on right: 108 109 111 112
    Multiplicative <object_val> (114)
        on left: 113 114 115 116
        on right: 110 111 112 114 115 116
    TypeCast <object_val> (115)
        on left: 117 118
        on right: 113 114 115 116
    Unary <object_val> (116)
        on left: 119 120 121 122 123
        on right: 117 118 119 120 121 122
    Post <object_val> (117)
        on left: 124 125 126
        on right: 123
    Primary <object_val> (118)
        on left: 127 128 129 130 131 132 134
        on right: 124 125 126
    @20 (119)
        on left: 133
        on right: 134
    List <object_val> (120)
        on left: 135 136
        on right: 134
    FunctionCall <object_val> (121)
        on left: 137
        on right: 15 132
    ArgumentList <object_val> (122)
        on left: 138
        on right: 137
    ArgumentListNonEmpty <object_val> (123)
        on left: 139 140
        on right: 138 140
    FunctionDefStmt (124)
        on left: 144
        on right: 7
    $@21 (125)
        on left: 141
        on right: 144
    $@22 (126)
        on left: 142
        on right: 144
    $@23 (127)
        on left: 143
        on right: 144
    FunctionParameterStmtList (128)
        on left: 145 146 147
        on right: 144 145
    FunctionParameterStmt (129)
        on left: 148 150
        on right: 145 146
    $@24 (130)
        on left: 149
        on right: 150


State 0

    0 $accept: • Program $end

    $end      reduce using rule 3 (Program)
    $default  reduce using rule 1 ($@1)

    Program  go to state 1
    $@1      go to state 2


State 1

    0 $accept: Program • $end

    $end  shift, and go to state 3


State 2

    2 Program: $@1 • GlobalStmtList

    COUT        shift, and go to state 4
    IF          shift, and go to state 5
    FOR         shift, and go to state 6
    WHILE       shift, and go to state 7
    RETURN      shift, and go to state 8
    BREAK       shift, and go to state 9
    VARIABLE_T  shift, and go to state 10
    IDENT       shift, and go to state 11

    GlobalStmtList      go to state 12
    GlobalStmt          go to state 13
    FunctionCallStmt    go to state 14
    JumpStmt            go to state 15
    IterationStmt       go to state 16
    SelectionStmt       go to state 17
    AssignStmt          go to state 18
    AssignBody          go to state 19
    DefineVariableStmt  go to state 20
    ReturnStmt          go to state 21
    CoutStmt            go to state 22
    FunctionCall        go to state 23
    FunctionDefStmt     go to state 24


State 3

    0 $accept: Program $end •

    $default  accept


State 4

   82 CoutStmt: COUT • $@19 SHL PrintableList ';'

    $default  reduce using rule 81 ($@19)

    $@19  go to state 25


State 5

   35 SelectionStmt: IF • '(' Expression ')' $@8 Selection

    '('  shift, and go to state 26


State 6

   22 IterationStmt: FOR • $@4 '(' ForCondition ')' $@5 CompoundStmt

    $default  reduce using rule 20 ($@4)

    $@4  go to state 27


State 7

   19 IterationStmt: WHILE • $@2 '(' Expression ')' $@3 CompoundStmt

    $default  reduce using rule 17 ($@2)

    $@2  go to state 28


State 8

   79 ReturnStmt: RETURN • Expression ';'
   80           | RETURN • ';'

    ';'        shift, and go to state 29
    IDENT      shift, and go to state 30
    BOOL_LIT   shift, and go to state 31
    INT_LIT    shift, and go to state 32
    FLOAT_LIT  shift, and go to state 33
    STR_LIT    shift, and go to state 34
    '('        shift, and go to state 35
    SUB        shift, and go to state 36
    NOT        shift, and go to state 37
    BNT        shift, and go to state 38
    ADD        shift, and go to state 39

    Expression      go to state 40
    Or              go to state 41
    And             go to state 42
    BitwiseOr       go to state 43
    BitwiseXor      go to state 44
    BitwiseAnd      go to state 45
    Equality        go to state 46
    Relational      go to state 47
    Shift           go to state 48
    Additive        go to state 49
    Multiplicative  go to state 50
    TypeCast        go to state 51
    Unary           go to state 52
    Post            go to state 53
    Primary         go to state 54
    FunctionCall    go to state 55


State 9

   16 JumpStmt: BREAK • ';'

    ';'  shift, and go to state 56


State 10

   65 DefineVariableStmt: VARIABLE_T • DeclaratorList ';'
  144 FunctionDefStmt: VARIABLE_T • IDENT $@21 '(' $@22 FunctionParameterStmtList ')' $@23 '{' GlobalStmtList '}'

    IDENT  shift, and go to state 57

    DeclaratorList  go to state 58
    Declarator      go to state 59


State 11

   44 AssignBody: IDENT • $@12 Assign
   46           | IDENT • '[' @13 AssignList
  137 FunctionCall: IDENT • '(' ArgumentList ')'

    '('  shift, and go to state 60
    '['  shift, and go to state 61

    '('       [reduce using rule 43 ($@12)]
    $default  reduce using rule 43 ($@12)

    $@12  go to state 62


State 12

    2 Program: $@1 GlobalStmtList •
    4 GlobalStmtList: GlobalStmtList • GlobalStmt

    COUT        shift, and go to state 4
    IF          shift, and go to state 5
    FOR         shift, and go to state 6
    WHILE       shift, and go to state 7
    RETURN      shift, and go to state 8
    BREAK       shift, and go to state 9
    VARIABLE_T  shift, and go to state 10
    IDENT       shift, and go to state 11

    $default  reduce using rule 2 (Program)

    GlobalStmt          go to state 63
    FunctionCallStmt    go to state 14
    JumpStmt            go to state 15
    IterationStmt       go to state 16
    SelectionStmt       go to state 17
    AssignStmt          go to state 18
    AssignBody          go to state 19
    DefineVariableStmt  go to state 20
    ReturnStmt          go to state 21
    CoutStmt            go to state 22
    FunctionCall        go to state 23
    FunctionDefStmt     go to state 24


State 13

    5 GlobalStmtList: GlobalStmt •

    $default  reduce using rule 5 (GlobalStmtList)


State 14

   14 GlobalStmt: FunctionCallStmt •

    $default  reduce using rule 14 (GlobalStmt)


State 15

   13 GlobalStmt: JumpStmt •

    $default  reduce using rule 13 (GlobalStmt)


State 16

   12 GlobalStmt: IterationStmt •

    $default  reduce using rule 12 (GlobalStmt)


State 17

   11 GlobalStmt: SelectionStmt •
   37 SelectionStmt: SelectionStmt • ELSE $@9 Selection

    ELSE  shift, and go to state 64

    ELSE      [reduce using rule 11 (GlobalStmt)]
    $default  reduce using rule 11 (GlobalStmt)


State 18

   10 GlobalStmt: AssignStmt •

    $default  reduce using rule 10 (GlobalStmt)


State 19

   42 AssignStmt: AssignBody • ';'

    ';'  shift, and go to state 65


State 20

    6 GlobalStmt: DefineVariableStmt •

    $default  reduce using rule 6 (GlobalStmt)


State 21

    9 GlobalStmt: ReturnStmt •

    $default  reduce using rule 9 (GlobalStmt)


State 22

    8 GlobalStmt: CoutStmt •

    $default  reduce using rule 8 (GlobalStmt)


State 23

   15 FunctionCallStmt: FunctionCall • ';'

    ';'  shift, and go to state 66


State 24

    7 GlobalStmt: FunctionDefStmt •

    $default  reduce using rule 7 (GlobalStmt)


State 25

   82 CoutStmt: COUT $@19 • SHL PrintableList ';'

    SHL  shift, and go to state 67


State 26

   35 SelectionStmt: IF '(' • Expression ')' $@8 Selection

    IDENT      shift, and go to state 30
    BOOL_LIT   shift, and go to state 31
    INT_LIT    shift, and go to state 32
    FLOAT_LIT  shift, and go to state 33
    STR_LIT    shift, and go to state 34
    '('        shift, and go to state 35
    SUB        shift, and go to state 36
    NOT        shift, and go to state 37
    BNT        shift, and go to state 38
    ADD        shift, and go to state 39

    Expression      go to state 68
    Or              go to state 41
    And             go to state 42
    BitwiseOr       go to state 43
    BitwiseXor      go to state 44
    BitwiseAnd      go to state 45
    Equality        go to state 46
    Relational      go to state 47
    Shift           go to state 48
    Additive        go to state 49
    Multiplicative  go to state 50
    TypeCast        go to state 51
    Unary           go to state 52
    Post            go to state 53
    Primary         go to state 54
    FunctionCall    go to state 55


State 27

   22 IterationStmt: FOR $@4 • '(' ForCondition ')' $@5 CompoundStmt

    '('  shift, and go to state 69


State 28

   19 IterationStmt: WHILE $@2 • '(' Expression ')' $@3 CompoundStmt

    '('  shift, and go to state 70


State 29

   80 ReturnStmt: RETURN ';' •

    $default  reduce using rule 80 (ReturnStmt)


State 30

  131 Primary: IDENT •
  134        | IDENT • '[' @20 List
  137 FunctionCall: IDENT • '(' ArgumentList ')'

    '('  shift, and go to state 60
    '['  shift, and go to state 71

    '('       [reduce using rule 131 (Primary)]
    $default  reduce using rule 131 (Primary)


State 31

  130 Primary: BOOL_LIT •

    $default  reduce using rule 130 (Primary)


State 32

  127 Primary: INT_LIT •

    $default  reduce using rule 127 (Primary)


State 33

  128 Primary: FLOAT_LIT •

    $default  reduce using rule 128 (Primary)


State 34

   89 Expression: STR_LIT •

    $default  reduce using rule 89 (Expression)


State 35

  118 TypeCast: '(' • VARIABLE_T ')' Unary
  129 Primary: '(' • Expression ')'

    VARIABLE_T  shift, and go to state 72
    IDENT       shift, and go to state 30
    BOOL_LIT    shift, and go to state 31
    INT_LIT     shift, and go to state 32
    FLOAT_LIT   shift, and go to state 33
    STR_LIT     shift, and go to state 34
    '('         shift, and go to state 35
    SUB         shift, and go to state 36
    NOT         shift, and go to state 37
    BNT         shift, and go to state 38
    ADD         shift, and go to state 39

    Expression      go to state 73
    Or              go to state 41
    And             go to state 42
    BitwiseOr       go to state 43
    BitwiseXor      go to state 44
    BitwiseAnd      go to state 45
    Equality        go to state 46
    Relational      go to state 47
    Shift           go to state 48
    Additive        go to state 49
    Multiplicative  go to state 50
    TypeCast        go to state 51
    Unary           go to state 52
    Post            go to state 53
    Primary         go to state 54
    FunctionCall    go to state 55


State 36

  121 Unary: SUB • Unary

    IDENT      shift, and go to state 30
    BOOL_LIT   shift, and go to state 31
    INT_LIT    shift, and go to state 32
    FLOAT_LIT  shift, and go to state 33
    '('        shift, and go to state 74
    SUB        shift, and go to state 36
    NOT        shift, and go to state 37
    BNT        shift, and go to state 38
    ADD        shift, and go to state 39

    Unary         go to state 75
    Post          go to state 53
    Primary       go to state 54
    FunctionCall  go to state 55


State 37

  122 Unary: NOT • Unary

    IDENT      shift, and go to state 30
    BOOL_LIT   shift, and go to state 31
    INT_LIT    shift, and go to state 32
    FLOAT_LIT  shift, and go to state 33
    '('        shift, and go to state 74
    SUB        shift, and go to state 36
    NOT        shift, and go to state 37
    BNT        shift, and go to state 38
    ADD        shift, and go to state 39

    Unary         go to state 76
    Post          go to state 53
    Primary       go to state 54
    FunctionCall  go to state 55


State 38

  119 Unary: BNT • Unary

    IDENT      shift, and go to state 30
    BOOL_LIT   shift, and go to state 31
    INT_LIT    shift, and go to state 32
    FLOAT_LIT  shift, and go to state 33
    '('        shift, and go to state 74
    SUB        shift, and go to state 36
    NOT        shift, and go to state 37
    BNT        shift, and go to state 38
    ADD        shift, and go to state 39

    Unary         go to state 77
    Post          go to state 53
    Primary       go to state 54
    FunctionCall  go to state 55


State 39

  120 Unary: ADD • Unary

    IDENT      shift, and go to state 30
    BOOL_LIT   shift, and go to state 31
    INT_LIT    shift, and go to state 32
    FLOAT_LIT  shift, and go to state 33
    '('        shift, and go to state 74
    SUB        shift, and go to state 36
    NOT        shift, and go to state 37
    BNT        shift, and go to state 38
    ADD        shift, and go to state 39

    Unary         go to state 78
    Post          go to state 53
    Primary       go to state 54
    FunctionCall  go to state 55


State 40

   79 ReturnStmt: RETURN Expression • ';'

    ';'  shift, and go to state 79


State 41

   88 Expression: Or •
   91 Or: Or • LOR And

    LOR  shift, and go to state 80

    $default  reduce using rule 88 (Expression)


State 42

   90 Or: And •
   93 And: And • LAN BitwiseOr

    LAN  shift, and go to state 81

    $default  reduce using rule 90 (Or)


State 43

   92 And: BitwiseOr •
   95 BitwiseOr: BitwiseOr • BOR BitwiseXor

    BOR  shift, and go to state 82

    $default  reduce using rule 92 (And)


State 44

   94 BitwiseOr: BitwiseXor •
   97 BitwiseXor: BitwiseXor • BXO BitwiseAnd

    BXO  shift, and go to state 83

    $default  reduce using rule 94 (BitwiseOr)


State 45

   96 BitwiseXor: BitwiseAnd •
   99 BitwiseAnd: BitwiseAnd • BAN Equality

    BAN  shift, and go to state 84

    $default  reduce using rule 96 (BitwiseXor)


State 46

   98 BitwiseAnd: Equality •
  101 Equality: Equality • EQL Relational
  102         | Equality • NEQ Relational

    EQL  shift, and go to state 85
    NEQ  shift, and go to state 86

    $default  reduce using rule 98 (BitwiseAnd)


State 47

  100 Equality: Relational •
  104 Relational: Relational • LES Shift
  105           | Relational • GTR Shift
  106           | Relational • LEQ Shift
  107           | Relational • GEQ Shift

    GTR  shift, and go to state 87
    LES  shift, and go to state 88
    GEQ  shift, and go to state 89
    LEQ  shift, and go to state 90

    $default  reduce using rule 100 (Equality)


State 48

  103 Relational: Shift •
  109 Shift: Shift • SHR Additive

    SHR  shift, and go to state 91

    $default  reduce using rule 103 (Relational)


State 49

  108 Shift: Additive •
  111 Additive: Additive • ADD Multiplicative
  112         | Additive • SUB Multiplicative

    SUB  shift, and go to state 92
    ADD  shift, and go to state 93

    SUB       [reduce using rule 108 (Shift)]
    ADD       [reduce using rule 108 (Shift)]
    $default  reduce using rule 108 (Shift)


State 50

  110 Additive: Multiplicative •
  114 Multiplicative: Multiplicative • MUL TypeCast
  115               | Multiplicative • DIV TypeCast
  116               | Multiplicative • REM TypeCast

    MUL  shift, and go to state 94
    DIV  shift, and go to state 95
    REM  shift, and go to state 96

    $default  reduce using rule 110 (Additive)


State 51

  113 Multiplicative: TypeCast •

    $default  reduce using rule 113 (Multiplicative)


State 52

  117 TypeCast: Unary •

    $default  reduce using rule 117 (TypeCast)


State 53

  123 Unary: Post •

    $default  reduce using rule 123 (Unary)


State 54

  124 Post: Primary •
  125     | Primary • INC_ASSIGN
  126     | Primary • DEC_ASSIGN

    INC_ASSIGN  shift, and go to state 97
    DEC_ASSIGN  shift, and go to state 98

    $default  reduce using rule 124 (Post)


State 55

  132 Primary: FunctionCall •

    $default  reduce using rule 132 (Primary)


State 56

   16 JumpStmt: BREAK ';' •

    $default  reduce using rule 16 (JumpStmt)


State 57

   68 Declarator: IDENT •
   69           | IDENT • VAL_ASSIGN Assignable
   70           | IDENT • '[' Expression ']'
   71           | IDENT • '[' Expression ']' '[' Expression ']'
   73           | IDENT • '[' Expression ']' $@16 VAL_ASSIGN '{' ArrayEles '}'
  144 FunctionDefStmt: VARIABLE_T IDENT • $@21 '(' $@22 FunctionParameterStmtList ')' $@23 '{' GlobalStmtList '}'

    VAL_ASSIGN  shift, and go to state 99
    '['         shift, and go to state 100

    '('       reduce using rule 141 ($@21)
    $default  reduce using rule 68 (Declarator)

    $@21  go to state 101


State 58

   65 DefineVariableStmt: VARIABLE_T DeclaratorList • ';'
   67 DeclaratorList: DeclaratorList • ',' Declarator

    ';'  shift, and go to state 102
    ','  shift, and go to state 103


State 59

   66 DeclaratorList: Declarator •

    $default  reduce using rule 66 (DeclaratorList)


State 60

  137 FunctionCall: IDENT '(' • ArgumentList ')'

    IDENT      shift, and go to state 30
    BOOL_LIT   shift, and go to state 31
    INT_LIT    shift, and go to state 32
    FLOAT_LIT  shift, and go to state 33
    STR_LIT    shift, and go to state 34
    '('        shift, and go to state 35
    SUB        shift, and go to state 36
    NOT        shift, and go to state 37
    BNT        shift, and go to state 38
    ADD        shift, and go to state 39

    Expression            go to state 104
    Or                    go to state 41
    And                   go to state 42
    BitwiseOr             go to state 43
    BitwiseXor            go to state 44
    BitwiseAnd            go to state 45
    Equality              go to state 46
    Relational            go to state 47
    Shift                 go to state 48
    Additive              go to state 49
    Multiplicative        go to state 50
    TypeCast              go to state 51
    Unary                 go to state 52
    Post                  go to state 53
    Primary               go to state 54
    FunctionCall          go to state 55
    ArgumentList          go to state 105
    ArgumentListNonEmpty  go to state 106


State 61

   46 AssignBody: IDENT '[' • @13 AssignList

    $default  reduce using rule 45 (@13)

    @13  go to state 107


State 62

   44 AssignBody: IDENT $@12 • Assign

    VAL_ASSIGN  shift, and go to state 108
    ADD_ASSIGN  shift, and go to state 109
    SUB_ASSIGN  shift, and go to state 110
    MUL_ASSIGN  shift, and go to state 111
    DIV_ASSIGN  shift, and go to state 112
    REM_ASSIGN  shift, and go to state 113
    BAN_ASSIGN  shift, and go to state 114
    BOR_ASSIGN  shift, and go to state 115
    BXO_ASSIGN  shift, and go to state 116
    SHR_ASSIGN  shift, and go to state 117
    SHL_ASSIGN  shift, and go to state 118
    IDENT       shift, and go to state 30
    BOOL_LIT    shift, and go to state 31
    INT_LIT     shift, and go to state 32
    FLOAT_LIT   shift, and go to state 33
    STR_LIT     shift, and go to state 119
    '('         shift, and go to state 35
    SUB         shift, and go to state 36
    NOT         shift, and go to state 37
    BNT         shift, and go to state 38
    ADD         shift, and go to state 39

    Assign          go to state 120
    Assignable      go to state 121
    Expression      go to state 122
    Or              go to state 41
    And             go to state 42
    BitwiseOr       go to state 43
    BitwiseXor      go to state 44
    BitwiseAnd      go to state 45
    Equality        go to state 46
    Relational      go to state 47
    Shift           go to state 48
    Additive        go to state 49
    Multiplicative  go to state 50
    TypeCast        go to state 51
    Unary           go to state 52
    Post            go to state 53
    Primary         go to state 54
    FunctionCall    go to state 55


State 63

    4 GlobalStmtList: GlobalStmtList GlobalStmt •

    $default  reduce using rule 4 (GlobalStmtList)


State 64

   37 SelectionStmt: SelectionStmt ELSE • $@9 Selection

    $default  reduce using rule 36 ($@9)

    $@9  go to state 123


State 65

   42 AssignStmt: AssignBody ';' •

    $default  reduce using rule 42 (AssignStmt)


State 66

   15 FunctionCallStmt: FunctionCall ';' •

    $default  reduce using rule 15 (FunctionCallStmt)


State 67

   82 CoutStmt: COUT $@19 SHL • PrintableList ';'

    ENDL       shift, and go to state 124
    IDENT      shift, and go to state 30
    BOOL_LIT   shift, and go to state 31
    INT_LIT    shift, and go to state 32
    FLOAT_LIT  shift, and go to state 33
    STR_LIT    shift, and go to state 125
    '('        shift, and go to state 35
    SUB        shift, and go to state 36
    NOT        shift, and go to state 37
    BNT        shift, and go to state 38
    ADD        shift, and go to state 39

    PrintableList   go to state 126
    Printable       go to state 127
    Expression      go to state 128
    Or              go to state 41
    And             go to state 42
    BitwiseOr       go to state 43
    BitwiseXor      go to state 44
    BitwiseAnd      go to state 45
    Equality        go to state 46
    Relational      go to state 47
    Shift           go to state 48
    Additive        go to state 49
    Multiplicative  go to state 50
    TypeCast        go to state 51
    Unary           go to state 52
    Post            go to state 53
    Primary         go to state 54
    FunctionCall    go to state 55


State 68

   35 SelectionStmt: IF '(' Expression • ')' $@8 Selection

    ')'  shift, and go to state 129


State 69

   22 IterationStmt: FOR $@4 '(' • ForCondition ')' $@5 CompoundStmt

    ';'         shift, and go to state 130
    VARIABLE_T  shift, and go to state 131
    IDENT       shift, and go to state 132
    BOOL_LIT    shift, and go to state 31
    INT_LIT     shift, and go to state 32
    FLOAT_LIT   shift, and go to state 33
    STR_LIT     shift, and go to state 34
    '('         shift, and go to state 35
    SUB         shift, and go to state 36
    NOT         shift, and go to state 37
    BNT         shift, and go to state 38
    ADD         shift, and go to state 39

    ForCondition        go to state 133
    ExpressionStmt      go to state 134
    AssignBody          go to state 135
    DefineVariableStmt  go to state 136
    Expression          go to state 137
    Or                  go to state 41
    And                 go to state 42
    BitwiseOr           go to state 43
    BitwiseXor          go to state 44
    BitwiseAnd          go to state 45
    Equality            go to state 46
    Relational          go to state 47
    Shift               go to state 48
    Additive            go to state 49
    Multiplicative      go to state 50
    TypeCast            go to state 51
    Unary               go to state 52
    Post                go to state 53
    Primary             go to state 54
    FunctionCall        go to state 55


State 70

   19 IterationStmt: WHILE $@2 '(' • Expression ')' $@3 CompoundStmt

    IDENT      shift, and go to state 30
    BOOL_LIT   shift, and go to state 31
    INT_LIT    shift, and go to state 32
    FLOAT_LIT  shift, and go to state 33
    STR_LIT    shift, and go to state 34
    '('        shift, and go to state 35
    SUB        shift, and go to state 36
    NOT        shift, and go to state 37
    BNT        shift, and go to state 38
    ADD        shift, and go to state 39

    Expression      go to state 138
    Or              go to state 41
    And             go to state 42
    BitwiseOr       go to state 43
    BitwiseXor      go to state 44
    BitwiseAnd      go to state 45
    Equality        go to state 46
    Relational      go to state 47
    Shift           go to state 48
    Additive        go to state 49
    Multiplicative  go to state 50
    TypeCast        go to state 51
    Unary           go to state 52
    Post            go to state 53
    Primary         go to state 54
    FunctionCall    go to state 55


State 71

  134 Primary: IDENT '[' • @20 List

    $default  reduce using rule 133 (@20)

    @20  go to state 139


State 72

  118 TypeCast: '(' VARIABLE_T • ')' Unary

    ')'  shift, and go to state 140


State 73

  129 Primary: '(' Expression • ')'

    ')'  shift, and go to state 141


State 74

  129 Primary: '(' • Expression ')'

    IDENT      shift, and go to state 30
    BOOL_LIT   shift, and go to state 31
    INT_LIT    shift, and go to state 32
    FLOAT_LIT  shift, and go to state 33
    STR_LIT    shift, and go to state 34
    '('        shift, and go to state 35
    SUB        shift, and go to state 36
    NOT        shift, and go to state 37
    BNT        shift, and go to state 38
    ADD        shift, and go to state 39

    Expression      go to state 73
    Or              go to state 41
    And             go to state 42
    BitwiseOr       go to state 43
    BitwiseXor      go to state 44
    BitwiseAnd      go to state 45
    Equality        go to state 46
    Relational      go to state 47
    Shift           go to state 48
    Additive        go to state 49
    Multiplicative  go to state 50
    TypeCast        go to state 51
    Unary           go to state 52
    Post            go to state 53
    Primary         go to state 54
    FunctionCall    go to state 55


State 75

  121 Unary: SUB Unary •

    $default  reduce using rule 121 (Unary)


State 76

  122 Unary: NOT Unary •

    $default  reduce using rule 122 (Unary)


State 77

  119 Unary: BNT Unary •

    $default  reduce using rule 119 (Unary)


State 78

  120 Unary: ADD Unary •

    $default  reduce using rule 120 (Unary)


State 79

   79 ReturnStmt: RETURN Expression ';' •

    $default  reduce using rule 79 (ReturnStmt)


State 80

   91 Or: Or LOR • And

    IDENT      shift, and go to state 30
    BOOL_LIT   shift, and go to state 31
    INT_LIT    shift, and go to state 32
    FLOAT_LIT  shift, and go to state 33
    '('        shift, and go to state 35
    SUB        shift, and go to state 36
    NOT        shift, and go to state 37
    BNT        shift, and go to state 38
    ADD        shift, and go to state 39

    And             go to state 142
    BitwiseOr       go to state 43
    BitwiseXor      go to state 44
    BitwiseAnd      go to state 45
    Equality        go to state 46
    Relational      go to state 47
    Shift           go to state 48
    Additive        go to state 49
    Multiplicative  go to state 50
    TypeCast        go to state 51
    Unary           go to state 52
    Post            go to state 53
    Primary         go to state 54
    FunctionCall    go to state 55


State 81

   93 And: And LAN • BitwiseOr

    IDENT      shift, and go to state 30
    BOOL_LIT   shift, and go to state 31
    INT_LIT    shift, and go to state 32
    FLOAT_LIT  shift, and go to state 33
    '('        shift, and go to state 35
    SUB        shift, and go to state 36
    NOT        shift, and go to state 37
    BNT        shift, and go to state 38
    ADD        shift, and go to state 39

    BitwiseOr       go to state 143
    BitwiseXor      go to state 44
    BitwiseAnd      go to state 45
    Equality        go to state 46
    Relational      go to state 47
    Shift           go to state 48
    Additive        go to state 49
    Multiplicative  go to state 50
    TypeCast        go to state 51
    Unary           go to state 52
    Post            go to state 53
    Primary         go to state 54
    FunctionCall    go to state 55


State 82

   95 BitwiseOr: BitwiseOr BOR • BitwiseXor

    IDENT      shift, and go to state 30
    BOOL_LIT   shift, and go to state 31
    INT_LIT    shift, and go to state 32
    FLOAT_LIT  shift, and go to state 33
    '('        shift, and go to state 35
    SUB        shift, and go to state 36
    NOT        shift, and go to state 37
    BNT        shift, and go to state 38
    ADD        shift, and go to state 39

    BitwiseXor      go to state 144
    BitwiseAnd      go to state 45
    Equality        go to state 46
    Relational      go to state 47
    Shift           go to state 48
    Additive        go to state 49
    Multiplicative  go to state 50
    TypeCast        go to state 51
    Unary           go to state 52
    Post            go to state 53
    Primary         go to state 54
    FunctionCall    go to state 55


State 83

   97 BitwiseXor: BitwiseXor BXO • BitwiseAnd

    IDENT      shift, and go to state 30
    BOOL_LIT   shift, and go to state 31
    INT_LIT    shift, and go to state 32
    FLOAT_LIT  shift, and go to state 33
    '('        shift, and go to state 35
    SUB        shift, and go to state 36
    NOT        shift, and go to state 37
    BNT        shift, and go to state 38
    ADD        shift, and go to state 39

    BitwiseAnd      go to state 145
    Equality        go to state 46
    Relational      go to state 47
    Shift           go to state 48
    Additive        go to state 49
    Multiplicative  go to state 50
    TypeCast        go to state 51
    Unary           go to state 52
    Post            go to state 53
    Primary         go to state 54
    FunctionCall    go to state 55


State 84

   99 BitwiseAnd: BitwiseAnd BAN • Equality

    IDENT      shift, and go to state 30
    BOOL_LIT   shift, and go to state 31
    INT_LIT    shift, and go to state 32
    FLOAT_LIT  shift, and go to state 33
    '('        shift, and go to state 35
    SUB        shift, and go to state 36
    NOT        shift, and go to state 37
    BNT        shift, and go to state 38
    ADD        shift, and go to state 39

    Equality        go to state 146
    Relational      go to state 47
    Shift           go to state 48
    Additive        go to state 49
    Multiplicative  go to state 50
    TypeCast        go to state 51
    Unary           go to state 52
    Post            go to state 53
    Primary         go to state 54
    FunctionCall    go to state 55


State 85

  101 Equality: Equality EQL • Relational

    IDENT      shift, and go to state 30
    BOOL_LIT   shift, and go to state 31
    INT_LIT    shift, and go to state 32
    FLOAT_LIT  shift, and go to state 33
    '('        shift, and go to state 35
    SUB        shift, and go to state 36
    NOT        shift, and go to state 37
    BNT        shift, and go to state 38
    ADD        shift, and go to state 39

    Relational      go to state 147
    Shift           go to state 48
    Additive        go to state 49
    Multiplicative  go to state 50
    TypeCast        go to state 51
    Unary           go to state 52
    Post            go to state 53
    Primary         go to state 54
    FunctionCall    go to state 55


State 86

  102 Equality: Equality NEQ • Relational

    IDENT      shift, and go to state 30
    BOOL_LIT   shift, and go to state 31
    INT_LIT    shift, and go to state 32
    FLOAT_LIT  shift, and go to state 33
    '('        shift, and go to state 35
    SUB        shift, and go to state 36
    NOT        shift, and go to state 37
    BNT        shift, and go to state 38
    ADD        shift, and go to state 39

    Relational      go to state 148
    Shift           go to state 48
    Additive        go to state 49
    Multiplicative  go to state 50
    TypeCast        go to state 51
    Unary           go to state 52
    Post            go to state 53
    Primary         go to state 54
    FunctionCall    go to state 55


State 87

  105 Relational: Relational GTR • Shift

    IDENT      shift, and go to state 30
    BOOL_LIT   shift, and go to state 31
    INT_LIT    shift, and go to state 32
    FLOAT_LIT  shift, and go to state 33
    '('        shift, and go to state 35
    SUB        shift, and go to state 36
    NOT        shift, and go to state 37
    BNT        shift, and go to state 38
    ADD        shift, and go to state 39

    Shift           go to state 149
    Additive        go to state 49
    Multiplicative  go to state 50
    TypeCast        go to state 51
    Unary           go to state 52
    Post            go to state 53
    Primary         go to state 54
    FunctionCall    go to state 55


State 88

  104 Relational: Relational LES • Shift

    IDENT      shift, and go to state 30
    BOOL_LIT   shift, and go to state 31
    INT_LIT    shift, and go to state 32
    FLOAT_LIT  shift, and go to state 33
    '('        shift, and go to state 35
    SUB        shift, and go to state 36
    NOT        shift, and go to state 37
    BNT        shift, and go to state 38
    ADD        shift, and go to state 39

    Shift           go to state 150
    Additive        go to state 49
    Multiplicative  go to state 50
    TypeCast        go to state 51
    Unary           go to state 52
    Post            go to state 53
    Primary         go to state 54
    FunctionCall    go to state 55


State 89

  107 Relational: Relational GEQ • Shift

    IDENT      shift, and go to state 30
    BOOL_LIT   shift, and go to state 31
    INT_LIT    shift, and go to state 32
    FLOAT_LIT  shift, and go to state 33
    '('        shift, and go to state 35
    SUB        shift, and go to state 36
    NOT        shift, and go to state 37
    BNT        shift, and go to state 38
    ADD        shift, and go to state 39

    Shift           go to state 151
    Additive        go to state 49
    Multiplicative  go to state 50
    TypeCast        go to state 51
    Unary           go to state 52
    Post            go to state 53
    Primary         go to state 54
    FunctionCall    go to state 55


State 90

  106 Relational: Relational LEQ • Shift

    IDENT      shift, and go to state 30
    BOOL_LIT   shift, and go to state 31
    INT_LIT    shift, and go to state 32
    FLOAT_LIT  shift, and go to state 33
    '('        shift, and go to state 35
    SUB        shift, and go to state 36
    NOT        shift, and go to state 37
    BNT        shift, and go to state 38
    ADD        shift, and go to state 39

    Shift           go to state 152
    Additive        go to state 49
    Multiplicative  go to state 50
    TypeCast        go to state 51
    Unary           go to state 52
    Post            go to state 53
    Primary         go to state 54
    FunctionCall    go to state 55


State 91

  109 Shift: Shift SHR • Additive

    IDENT      shift, and go to state 30
    BOOL_LIT   shift, and go to state 31
    INT_LIT    shift, and go to state 32
    FLOAT_LIT  shift, and go to state 33
    '('        shift, and go to state 35
    SUB        shift, and go to state 36
    NOT        shift, and go to state 37
    BNT        shift, and go to state 38
    ADD        shift, and go to state 39

    Additive        go to state 153
    Multiplicative  go to state 50
    TypeCast        go to state 51
    Unary           go to state 52
    Post            go to state 53
    Primary         go to state 54
    FunctionCall    go to state 55


State 92

  112 Additive: Additive SUB • Multiplicative

    IDENT      shift, and go to state 30
    BOOL_LIT   shift, and go to state 31
    INT_LIT    shift, and go to state 32
    FLOAT_LIT  shift, and go to state 33
    '('        shift, and go to state 35
    SUB        shift, and go to state 36
    NOT        shift, and go to state 37
    BNT        shift, and go to state 38
    ADD        shift, and go to state 39

    Multiplicative  go to state 154
    TypeCast        go to state 51
    Unary           go to state 52
    Post            go to state 53
    Primary         go to state 54
    FunctionCall    go to state 55


State 93

  111 Additive: Additive ADD • Multiplicative

    IDENT      shift, and go to state 30
    BOOL_LIT   shift, and go to state 31
    INT_LIT    shift, and go to state 32
    FLOAT_LIT  shift, and go to state 33
    '('        shift, and go to state 35
    SUB        shift, and go to state 36
    NOT        shift, and go to state 37
    BNT        shift, and go to state 38
    ADD        shift, and go to state 39

    Multiplicative  go to state 155
    TypeCast        go to state 51
    Unary           go to state 52
    Post            go to state 53
    Primary         go to state 54
    FunctionCall    go to state 55


State 94

  114 Multiplicative: Multiplicative MUL • TypeCast

    IDENT      shift, and go to state 30
    BOOL_LIT   shift, and go to state 31
    INT_LIT    shift, and go to state 32
    FLOAT_LIT  shift, and go to state 33
    '('        shift, and go to state 35
    SUB        shift, and go to state 36
    NOT        shift, and go to state 37
    BNT        shift, and go to state 38
    ADD        shift, and go to state 39

    TypeCast      go to state 156
    Unary         go to state 52
    Post          go to state 53
    Primary       go to state 54
    FunctionCall  go to state 55


State 95

  115 Multiplicative: Multiplicative DIV • TypeCast

    IDENT      shift, and go to state 30
    BOOL_LIT   shift, and go to state 31
    INT_LIT    shift, and go to state 32
    FLOAT_LIT  shift, and go to state 33
    '('        shift, and go to state 35
    SUB        shift, and go to state 36
    NOT        shift, and go to state 37
    BNT        shift, and go to state 38
    ADD        shift, and go to state 39

    TypeCast      go to state 157
    Unary         go to state 52
    Post          go to state 53
    Primary       go to state 54
    FunctionCall  go to state 55


State 96

  116 Multiplicative: Multiplicative REM • TypeCast

    IDENT      shift, and go to state 30
    BOOL_LIT   shift, and go to state 31
    INT_LIT    shift, and go to state 32
    FLOAT_LIT  shift, and go to state 33
    '('        shift, and go to state 35
    SUB        shift, and go to state 36
    NOT        shift, and go to state 37
    BNT        shift, and go to state 38
    ADD        shift, and go to state 39

    TypeCast      go to state 158
    Unary         go to state 52
    Post          go to state 53
    Primary       go to state 54
    FunctionCall  go to state 55


State 97

  125 Post: Primary INC_ASSIGN •

    $default  reduce using rule 125 (Post)


State 98

  126 Post: Primary DEC_ASSIGN •

    $default  reduce using rule 126 (Post)


State 99

   69 Declarator: IDENT VAL_ASSIGN • Assignable

    IDENT      shift, and go to state 30
    BOOL_LIT   shift, and go to state 31
    INT_LIT    shift, and go to state 32
    FLOAT_LIT  shift, and go to state 33
    STR_LIT    shift, and go to state 119
    '('        shift, and go to state 35
    SUB        shift, and go to state 36
    NOT        shift, and go to state 37
    BNT        shift, and go to state 38
    ADD        shift, and go to state 39

    Assignable      go to state 159
    Expression      go to state 122
    Or              go to state 41
    And             go to state 42
    BitwiseOr       go to state 43
    BitwiseXor      go to state 44
    BitwiseAnd      go to state 45
    Equality        go to state 46
    Relational      go to state 47
    Shift           go to state 48
    Additive        go to state 49
    Multiplicative  go to state 50
    TypeCast        go to state 51
    Unary           go to state 52
    Post            go to state 53
    Primary         go to state 54
    FunctionCall    go to state 55


State 100

   70 Declarator: IDENT '[' • Expression ']'
   71           | IDENT '[' • Expression ']' '[' Expression ']'
   73           | IDENT '[' • Expression ']' $@16 VAL_ASSIGN '{' ArrayEles '}'

    IDENT      shift, and go to state 30
    BOOL_LIT   shift, and go to state 31
    INT_LIT    shift, and go to state 32
    FLOAT_LIT  shift, and go to state 33
    STR_LIT    shift, and go to state 34
    '('        shift, and go to state 35
    SUB        shift, and go to state 36
    NOT        shift, and go to state 37
    BNT        shift, and go to state 38
    ADD        shift, and go to state 39

    Expression      go to state 160
    Or              go to state 41
    And             go to state 42
    BitwiseOr       go to state 43
    BitwiseXor      go to state 44
    BitwiseAnd      go to state 45
    Equality        go to state 46
    Relational      go to state 47
    Shift           go to state 48
    Additive        go to state 49
    Multiplicative  go to state 50
    TypeCast        go to state 51
    Unary           go to state 52
    Post            go to state 53
    Primary         go to state 54
    FunctionCall    go to state 55


State 101

  144 FunctionDefStmt: VARIABLE_T IDENT $@21 • '(' $@22 FunctionParameterStmtList ')' $@23 '{' GlobalStmtList '}'

    '('  shift, and go to state 161


State 102

   65 DefineVariableStmt: VARIABLE_T DeclaratorList ';' •

    $default  reduce using rule 65 (DefineVariableStmt)


State 103

   67 DeclaratorList: DeclaratorList ',' • Declarator

    IDENT  shift, and go to state 162

    Declarator  go to state 163


State 104

  139 ArgumentListNonEmpty: Expression •

    $default  reduce using rule 139 (ArgumentListNonEmpty)


State 105

  137 FunctionCall: IDENT '(' ArgumentList • ')'

    ')'  shift, and go to state 164


State 106

  138 ArgumentList: ArgumentListNonEmpty •
  140 ArgumentListNonEmpty: ArgumentListNonEmpty • ',' Expression

    ','  shift, and go to state 165

    $default  reduce using rule 138 (ArgumentList)


State 107

   46 AssignBody: IDENT '[' @13 • AssignList

    IDENT      shift, and go to state 30
    BOOL_LIT   shift, and go to state 31
    INT_LIT    shift, and go to state 32
    FLOAT_LIT  shift, and go to state 33
    STR_LIT    shift, and go to state 34
    '('        shift, and go to state 35
    SUB        shift, and go to state 36
    NOT        shift, and go to state 37
    BNT        shift, and go to state 38
    ADD        shift, and go to state 39

    AssignList      go to state 166
    Expression      go to state 167
    Or              go to state 41
    And             go to state 42
    BitwiseOr       go to state 43
    BitwiseXor      go to state 44
    BitwiseAnd      go to state 45
    Equality        go to state 46
    Relational      go to state 47
    Shift           go to state 48
    Additive        go to state 49
    Multiplicative  go to state 50
    TypeCast        go to state 51
    Unary           go to state 52
    Post            go to state 53
    Primary         go to state 54
    FunctionCall    go to state 55


State 108

   52 Assign: VAL_ASSIGN • Assign

    VAL_ASSIGN  shift, and go to state 108
    ADD_ASSIGN  shift, and go to state 109
    SUB_ASSIGN  shift, and go to state 110
    MUL_ASSIGN  shift, and go to state 111
    DIV_ASSIGN  shift, and go to state 112
    REM_ASSIGN  shift, and go to state 113
    BAN_ASSIGN  shift, and go to state 114
    BOR_ASSIGN  shift, and go to state 115
    BXO_ASSIGN  shift, and go to state 116
    SHR_ASSIGN  shift, and go to state 117
    SHL_ASSIGN  shift, and go to state 118
    IDENT       shift, and go to state 30
    BOOL_LIT    shift, and go to state 31
    INT_LIT     shift, and go to state 32
    FLOAT_LIT   shift, and go to state 33
    STR_LIT     shift, and go to state 119
    '('         shift, and go to state 35
    SUB         shift, and go to state 36
    NOT         shift, and go to state 37
    BNT         shift, and go to state 38
    ADD         shift, and go to state 39

    Assign          go to state 168
    Assignable      go to state 121
    Expression      go to state 122
    Or              go to state 41
    And             go to state 42
    BitwiseOr       go to state 43
    BitwiseXor      go to state 44
    BitwiseAnd      go to state 45
    Equality        go to state 46
    Relational      go to state 47
    Shift           go to state 48
    Additive        go to state 49
    Multiplicative  go to state 50
    TypeCast        go to state 51
    Unary           go to state 52
    Post            go to state 53
    Primary         go to state 54
    FunctionCall    go to state 55


State 109

   53 Assign: ADD_ASSIGN • Assign

    VAL_ASSIGN  shift, and go to state 108
    ADD_ASSIGN  shift, and go to state 109
    SUB_ASSIGN  shift, and go to state 110
    MUL_ASSIGN  shift, and go to state 111
    DIV_ASSIGN  shift, and go to state 112
    REM_ASSIGN  shift, and go to state 113
    BAN_ASSIGN  shift, and go to state 114
    BOR_ASSIGN  shift, and go to state 115
    BXO_ASSIGN  shift, and go to state 116
    SHR_ASSIGN  shift, and go to state 117
    SHL_ASSIGN  shift, and go to state 118
    IDENT       shift, and go to state 30
    BOOL_LIT    shift, and go to state 31
    INT_LIT     shift, and go to state 32
    FLOAT_LIT   shift, and go to state 33
    STR_LIT     shift, and go to state 119
    '('         shift, and go to state 35
    SUB         shift, and go to state 36
    NOT         shift, and go to state 37
    BNT         shift, and go to state 38
    ADD         shift, and go to state 39

    Assign          go to state 169
    Assignable      go to state 121
    Expression      go to state 122
    Or              go to state 41
    And             go to state 42
    BitwiseOr       go to state 43
    BitwiseXor      go to state 44
    BitwiseAnd      go to state 45
    Equality        go to state 46
    Relational      go to state 47
    Shift           go to state 48
    Additive        go to state 49
    Multiplicative  go to state 50
    TypeCast        go to state 51
    Unary           go to state 52
    Post            go to state 53
    Primary         go to state 54
    FunctionCall    go to state 55


State 110

   54 Assign: SUB_ASSIGN • Assign

    VAL_ASSIGN  shift, and go to state 108
    ADD_ASSIGN  shift, and go to state 109
    SUB_ASSIGN  shift, and go to state 110
    MUL_ASSIGN  shift, and go to state 111
    DIV_ASSIGN  shift, and go to state 112
    REM_ASSIGN  shift, and go to state 113
    BAN_ASSIGN  shift, and go to state 114
    BOR_ASSIGN  shift, and go to state 115
    BXO_ASSIGN  shift, and go to state 116
    SHR_ASSIGN  shift, and go to state 117
    SHL_ASSIGN  shift, and go to state 118
    IDENT       shift, and go to state 30
    BOOL_LIT    shift, and go to state 31
    INT_LIT     shift, and go to state 32
    FLOAT_LIT   shift, and go to state 33
    STR_LIT     shift, and go to state 119
    '('         shift, and go to state 35
    SUB         shift, and go to state 36
    NOT         shift, and go to state 37
    BNT         shift, and go to state 38
    ADD         shift, and go to state 39

    Assign          go to state 170
    Assignable      go to state 121
    Expression      go to state 122
    Or              go to state 41
    And             go to state 42
    BitwiseOr       go to state 43
    BitwiseXor      go to state 44
    BitwiseAnd      go to state 45
    Equality        go to state 46
    Relational      go to state 47
    Shift           go to state 48
    Additive        go to state 49
    Multiplicative  go to state 50
    TypeCast        go to state 51
    Unary           go to state 52
    Post            go to state 53
    Primary         go to state 54
    FunctionCall    go to state 55


State 111

   55 Assign: MUL_ASSIGN • Assign

    VAL_ASSIGN  shift, and go to state 108
    ADD_ASSIGN  shift, and go to state 109
    SUB_ASSIGN  shift, and go to state 110
    MUL_ASSIGN  shift, and go to state 111
    DIV_ASSIGN  shift, and go to state 112
    REM_ASSIGN  shift, and go to state 113
    BAN_ASSIGN  shift, and go to state 114
    BOR_ASSIGN  shift, and go to state 115
    BXO_ASSIGN  shift, and go to state 116
    SHR_ASSIGN  shift, and go to state 117
    SHL_ASSIGN  shift, and go to state 118
    IDENT       shift, and go to state 30
    BOOL_LIT    shift, and go to state 31
    INT_LIT     shift, and go to state 32
    FLOAT_LIT   shift, and go to state 33
    STR_LIT     shift, and go to state 119
    '('         shift, and go to state 35
    SUB         shift, and go to state 36
    NOT         shift, and go to state 37
    BNT         shift, and go to state 38
    ADD         shift, and go to state 39

    Assign          go to state 171
    Assignable      go to state 121
    Expression      go to state 122
    Or              go to state 41
    And             go to state 42
    BitwiseOr       go to state 43
    BitwiseXor      go to state 44
    BitwiseAnd      go to state 45
    Equality        go to state 46
    Relational      go to state 47
    Shift           go to state 48
    Additive        go to state 49
    Multiplicative  go to state 50
    TypeCast        go to state 51
    Unary           go to state 52
    Post            go to state 53
    Primary         go to state 54
    FunctionCall    go to state 55


State 112

   56 Assign: DIV_ASSIGN • Assign

    VAL_ASSIGN  shift, and go to state 108
    ADD_ASSIGN  shift, and go to state 109
    SUB_ASSIGN  shift, and go to state 110
    MUL_ASSIGN  shift, and go to state 111
    DIV_ASSIGN  shift, and go to state 112
    REM_ASSIGN  shift, and go to state 113
    BAN_ASSIGN  shift, and go to state 114
    BOR_ASSIGN  shift, and go to state 115
    BXO_ASSIGN  shift, and go to state 116
    SHR_ASSIGN  shift, and go to state 117
    SHL_ASSIGN  shift, and go to state 118
    IDENT       shift, and go to state 30
    BOOL_LIT    shift, and go to state 31
    INT_LIT     shift, and go to state 32
    FLOAT_LIT   shift, and go to state 33
    STR_LIT     shift, and go to state 119
    '('         shift, and go to state 35
    SUB         shift, and go to state 36
    NOT         shift, and go to state 37
    BNT         shift, and go to state 38
    ADD         shift, and go to state 39

    Assign          go to state 172
    Assignable      go to state 121
    Expression      go to state 122
    Or              go to state 41
    And             go to state 42
    BitwiseOr       go to state 43
    BitwiseXor      go to state 44
    BitwiseAnd      go to state 45
    Equality        go to state 46
    Relational      go to state 47
    Shift           go to state 48
    Additive        go to state 49
    Multiplicative  go to state 50
    TypeCast        go to state 51
    Unary           go to state 52
    Post            go to state 53
    Primary         go to state 54
    FunctionCall    go to state 55


State 113

   57 Assign: REM_ASSIGN • Assign

    VAL_ASSIGN  shift, and go to state 108
    ADD_ASSIGN  shift, and go to state 109
    SUB_ASSIGN  shift, and go to state 110
    MUL_ASSIGN  shift, and go to state 111
    DIV_ASSIGN  shift, and go to state 112
    REM_ASSIGN  shift, and go to state 113
    BAN_ASSIGN  shift, and go to state 114
    BOR_ASSIGN  shift, and go to state 115
    BXO_ASSIGN  shift, and go to state 116
    SHR_ASSIGN  shift, and go to state 117
    SHL_ASSIGN  shift, and go to state 118
    IDENT       shift, and go to state 30
    BOOL_LIT    shift, and go to state 31
    INT_LIT     shift, and go to state 32
    FLOAT_LIT   shift, and go to state 33
    STR_LIT     shift, and go to state 119
    '('         shift, and go to state 35
    SUB         shift, and go to state 36
    NOT         shift, and go to state 37
    BNT         shift, and go to state 38
    ADD         shift, and go to state 39

    Assign          go to state 173
    Assignable      go to state 121
    Expression      go to state 122
    Or              go to state 41
    And             go to state 42
    BitwiseOr       go to state 43
    BitwiseXor      go to state 44
    BitwiseAnd      go to state 45
    Equality        go to state 46
    Relational      go to state 47
    Shift           go to state 48
    Additive        go to state 49
    Multiplicative  go to state 50
    TypeCast        go to state 51
    Unary           go to state 52
    Post            go to state 53
    Primary         go to state 54
    FunctionCall    go to state 55


State 114

   58 Assign: BAN_ASSIGN • Assign

    VAL_ASSIGN  shift, and go to state 108
    ADD_ASSIGN  shift, and go to state 109
    SUB_ASSIGN  shift, and go to state 110
    MUL_ASSIGN  shift, and go to state 111
    DIV_ASSIGN  shift, and go to state 112
    REM_ASSIGN  shift, and go to state 113
    BAN_ASSIGN  shift, and go to state 114
    BOR_ASSIGN  shift, and go to state 115
    BXO_ASSIGN  shift, and go to state 116
    SHR_ASSIGN  shift, and go to state 117
    SHL_ASSIGN  shift, and go to state 118
    IDENT       shift, and go to state 30
    BOOL_LIT    shift, and go to state 31
    INT_LIT     shift, and go to state 32
    FLOAT_LIT   shift, and go to state 33
    STR_LIT     shift, and go to state 119
    '('         shift, and go to state 35
    SUB         shift, and go to state 36
    NOT         shift, and go to state 37
    BNT         shift, and go to state 38
    ADD         shift, and go to state 39

    Assign          go to state 174
    Assignable      go to state 121
    Expression      go to state 122
    Or              go to state 41
    And             go to state 42
    BitwiseOr       go to state 43
    BitwiseXor      go to state 44
    BitwiseAnd      go to state 45
    Equality        go to state 46
    Relational      go to state 47
    Shift           go to state 48
    Additive        go to state 49
    Multiplicative  go to state 50
    TypeCast        go to state 51
    Unary           go to state 52
    Post            go to state 53
    Primary         go to state 54
    FunctionCall    go to state 55


State 115

   59 Assign: BOR_ASSIGN • Assign

    VAL_ASSIGN  shift, and go to state 108
    ADD_ASSIGN  shift, and go to state 109
    SUB_ASSIGN  shift, and go to state 110
    MUL_ASSIGN  shift, and go to state 111
    DIV_ASSIGN  shift, and go to state 112
    REM_ASSIGN  shift, and go to state 113
    BAN_ASSIGN  shift, and go to state 114
    BOR_ASSIGN  shift, and go to state 115
    BXO_ASSIGN  shift, and go to state 116
    SHR_ASSIGN  shift, and go to state 117
    SHL_ASSIGN  shift, and go to state 118
    IDENT       shift, and go to state 30
    BOOL_LIT    shift, and go to state 31
    INT_LIT     shift, and go to state 32
    FLOAT_LIT   shift, and go to state 33
    STR_LIT     shift, and go to state 119
    '('         shift, and go to state 35
    SUB         shift, and go to state 36
    NOT         shift, and go to state 37
    BNT         shift, and go to state 38
    ADD         shift, and go to state 39

    Assign          go to state 175
    Assignable      go to state 121
    Expression      go to state 122
    Or              go to state 41
    And             go to state 42
    BitwiseOr       go to state 43
    BitwiseXor      go to state 44
    BitwiseAnd      go to state 45
    Equality        go to state 46
    Relational      go to state 47
    Shift           go to state 48
    Additive        go to state 49
    Multiplicative  go to state 50
    TypeCast        go to state 51
    Unary           go to state 52
    Post            go to state 53
    Primary         go to state 54
    FunctionCall    go to state 55


State 116

   60 Assign: BXO_ASSIGN • Assign

    VAL_ASSIGN  shift, and go to state 108
    ADD_ASSIGN  shift, and go to state 109
    SUB_ASSIGN  shift, and go to state 110
    MUL_ASSIGN  shift, and go to state 111
    DIV_ASSIGN  shift, and go to state 112
    REM_ASSIGN  shift, and go to state 113
    BAN_ASSIGN  shift, and go to state 114
    BOR_ASSIGN  shift, and go to state 115
    BXO_ASSIGN  shift, and go to state 116
    SHR_ASSIGN  shift, and go to state 117
    SHL_ASSIGN  shift, and go to state 118
    IDENT       shift, and go to state 30
    BOOL_LIT    shift, and go to state 31
    INT_LIT     shift, and go to state 32
    FLOAT_LIT   shift, and go to state 33
    STR_LIT     shift, and go to state 119
    '('         shift, and go to state 35
    SUB         shift, and go to state 36
    NOT         shift, and go to state 37
    BNT         shift, and go to state 38
    ADD         shift, and go to state 39

    Assign          go to state 176
    Assignable      go to state 121
    Expression      go to state 122
    Or              go to state 41
    And             go to state 42
    BitwiseOr       go to state 43
    BitwiseXor      go to state 44
    BitwiseAnd      go to state 45
    Equality        go to state 46
    Relational      go to state 47
    Shift           go to state 48
    Additive        go to state 49
    Multiplicative  go to state 50
    TypeCast        go to state 51
    Unary           go to state 52
    Post            go to state 53
    Primary         go to state 54
    FunctionCall    go to state 55


State 117

   61 Assign: SHR_ASSIGN • Assign

    VAL_ASSIGN  shift, and go to state 108
    ADD_ASSIGN  shift, and go to state 109
    SUB_ASSIGN  shift, and go to state 110
    MUL_ASSIGN  shift, and go to state 111
    DIV_ASSIGN  shift, and go to state 112
    REM_ASSIGN  shift, and go to state 113
    BAN_ASSIGN  shift, and go to state 114
    BOR_ASSIGN  shift, and go to state 115
    BXO_ASSIGN  shift, and go to state 116
    SHR_ASSIGN  shift, and go to state 117
    SHL_ASSIGN  shift, and go to state 118
    IDENT       shift, and go to state 30
    BOOL_LIT    shift, and go to state 31
    INT_LIT     shift, and go to state 32
    FLOAT_LIT   shift, and go to state 33
    STR_LIT     shift, and go to state 119
    '('         shift, and go to state 35
    SUB         shift, and go to state 36
    NOT         shift, and go to state 37
    BNT         shift, and go to state 38
    ADD         shift, and go to state 39

    Assign          go to state 177
    Assignable      go to state 121
    Expression      go to state 122
    Or              go to state 41
    And             go to state 42
    BitwiseOr       go to state 43
    BitwiseXor      go to state 44
    BitwiseAnd      go to state 45
    Equality        go to state 46
    Relational      go to state 47
    Shift           go to state 48
    Additive        go to state 49
    Multiplicative  go to state 50
    TypeCast        go to state 51
    Unary           go to state 52
    Post            go to state 53
    Primary         go to state 54
    FunctionCall    go to state 55


State 118

   62 Assign: SHL_ASSIGN • Assign

    VAL_ASSIGN  shift, and go to state 108
    ADD_ASSIGN  shift, and go to state 109
    SUB_ASSIGN  shift, and go to state 110
    MUL_ASSIGN  shift, and go to state 111
    DIV_ASSIGN  shift, and go to state 112
    REM_ASSIGN  shift, and go to state 113
    BAN_ASSIGN  shift, and go to state 114
    BOR_ASSIGN  shift, and go to state 115
    BXO_ASSIGN  shift, and go to state 116
    SHR_ASSIGN  shift, and go to state 117
    SHL_ASSIGN  shift, and go to state 118
    IDENT       shift, and go to state 30
    BOOL_LIT    shift, and go to state 31
    INT_LIT     shift, and go to state 32
    FLOAT_LIT   shift, and go to state 33
    STR_LIT     shift, and go to state 119
    '('         shift, and go to state 35
    SUB         shift, and go to state 36
    NOT         shift, and go to state 37
    BNT         shift, and go to state 38
    ADD         shift, and go to state 39

    Assign          go to state 178
    Assignable      go to state 121
    Expression      go to state 122
    Or              go to state 41
    And             go to state 42
    BitwiseOr       go to state 43
    BitwiseXor      go to state 44
    BitwiseAnd      go to state 45
    Equality        go to state 46
    Relational      go to state 47
    Shift           go to state 48
    Additive        go to state 49
    Multiplicative  go to state 50
    TypeCast        go to state 51
    Unary           go to state 52
    Post            go to state 53
    Primary         go to state 54
    FunctionCall    go to state 55


State 119

   63 Assignable: STR_LIT •
   89 Expression: STR_LIT •

    ')'         reduce using rule 63 (Assignable)
    ')'         [reduce using rule 89 (Expression)]
    ';'         reduce using rule 63 (Assignable)
    ';'         [reduce using rule 89 (Expression)]
    '}'         reduce using rule 63 (Assignable)
    '}'         [reduce using rule 89 (Expression)]
    VARIABLE_T  reduce using rule 63 (Assignable)
    VARIABLE_T  [reduce using rule 89 (Expression)]
    IDENT       reduce using rule 63 (Assignable)
    IDENT       [reduce using rule 89 (Expression)]
    BOOL_LIT    reduce using rule 63 (Assignable)
    BOOL_LIT    [reduce using rule 89 (Expression)]
    INT_LIT     reduce using rule 63 (Assignable)
    INT_LIT     [reduce using rule 89 (Expression)]
    FLOAT_LIT   reduce using rule 63 (Assignable)
    FLOAT_LIT   [reduce using rule 89 (Expression)]
    STR_LIT     reduce using rule 63 (Assignable)
    STR_LIT     [reduce using rule 89 (Expression)]
    '('         reduce using rule 63 (Assignable)
    '('         [reduce using rule 89 (Expression)]
    SUB         reduce using rule 63 (Assignable)
    SUB         [reduce using rule 89 (Expression)]
    NOT         reduce using rule 63 (Assignable)
    NOT         [reduce using rule 89 (Expression)]
    BNT         reduce using rule 63 (Assignable)
    BNT         [reduce using rule 89 (Expression)]
    ADD         reduce using rule 63 (Assignable)
    ADD         [reduce using rule 89 (Expression)]
    ','         reduce using rule 63 (Assignable)
    ','         [reduce using rule 89 (Expression)]
    $default    reduce using rule 63 (Assignable)


State 120

   44 AssignBody: IDENT $@12 Assign •

    $default  reduce using rule 44 (AssignBody)


State 121

   51 Assign: Assignable •

    $default  reduce using rule 51 (Assign)


State 122

   64 Assignable: Expression •

    $default  reduce using rule 64 (Assignable)


State 123

   37 SelectionStmt: SelectionStmt ELSE $@9 • Selection

    COUT        shift, and go to state 4
    IF          shift, and go to state 5
    FOR         shift, and go to state 6
    WHILE       shift, and go to state 7
    RETURN      shift, and go to state 8
    BREAK       shift, and go to state 9
    '{'         shift, and go to state 179
    VARIABLE_T  shift, and go to state 10
    IDENT       shift, and go to state 11

    GlobalStmt          go to state 180
    FunctionCallStmt    go to state 14
    JumpStmt            go to state 15
    IterationStmt       go to state 16
    SelectionStmt       go to state 17
    Selection           go to state 181
    AssignStmt          go to state 18
    AssignBody          go to state 19
    DefineVariableStmt  go to state 20
    ReturnStmt          go to state 21
    CoutStmt            go to state 22
    FunctionCall        go to state 23
    FunctionDefStmt     go to state 24


State 124

   86 Printable: ENDL •

    $default  reduce using rule 86 (Printable)


State 125

   85 Printable: STR_LIT •
   89 Expression: STR_LIT •

    SHL       reduce using rule 85 (Printable)
    SHL       [reduce using rule 89 (Expression)]
    ';'       reduce using rule 85 (Printable)
    ';'       [reduce using rule 89 (Expression)]
    $default  reduce using rule 85 (Printable)


State 126

   82 CoutStmt: COUT $@19 SHL PrintableList • ';'
   84 PrintableList: PrintableList • SHL Printable

    SHL  shift, and go to state 182
    ';'  shift, and go to state 183


State 127

   83 PrintableList: Printable •

    $default  reduce using rule 83 (PrintableList)


State 128

   87 Printable: Expression •

    $default  reduce using rule 87 (Printable)


State 129

   35 SelectionStmt: IF '(' Expression ')' • $@8 Selection

    $default  reduce using rule 34 ($@8)

    $@8  go to state 184


State 130

   31 ExpressionStmt: ';' •

    $default  reduce using rule 31 (ExpressionStmt)


State 131

   26 ForCondition: VARIABLE_T • IDENT ':' IDENT
   65 DefineVariableStmt: VARIABLE_T • DeclaratorList ';'

    IDENT  shift, and go to state 185

    DeclaratorList  go to state 58
    Declarator      go to state 59


State 132

   44 AssignBody: IDENT • $@12 Assign
   46           | IDENT • '[' @13 AssignList
  131 Primary: IDENT •
  134        | IDENT • '[' @20 List
  137 FunctionCall: IDENT • '(' ArgumentList ')'

    '('  shift, and go to state 60
    '['  shift, and go to state 186

    SHR         reduce using rule 131 (Primary)
    BAN         reduce using rule 131 (Primary)
    BOR         reduce using rule 131 (Primary)
    BXO         reduce using rule 131 (Primary)
    MUL         reduce using rule 131 (Primary)
    DIV         reduce using rule 131 (Primary)
    REM         reduce using rule 131 (Primary)
    GTR         reduce using rule 131 (Primary)
    LES         reduce using rule 131 (Primary)
    GEQ         reduce using rule 131 (Primary)
    LEQ         reduce using rule 131 (Primary)
    EQL         reduce using rule 131 (Primary)
    NEQ         reduce using rule 131 (Primary)
    LAN         reduce using rule 131 (Primary)
    LOR         reduce using rule 131 (Primary)
    INC_ASSIGN  reduce using rule 131 (Primary)
    DEC_ASSIGN  reduce using rule 131 (Primary)
    ')'         reduce using rule 131 (Primary)
    ';'         reduce using rule 131 (Primary)
    VARIABLE_T  reduce using rule 131 (Primary)
    IDENT       reduce using rule 43 ($@12)
    IDENT       [reduce using rule 131 (Primary)]
    BOOL_LIT    reduce using rule 43 ($@12)
    BOOL_LIT    [reduce using rule 131 (Primary)]
    INT_LIT     reduce using rule 43 ($@12)
    INT_LIT     [reduce using rule 131 (Primary)]
    FLOAT_LIT   reduce using rule 43 ($@12)
    FLOAT_LIT   [reduce using rule 131 (Primary)]
    STR_LIT     reduce using rule 43 ($@12)
    STR_LIT     [reduce using rule 131 (Primary)]
    '('         [reduce using rule 43 ($@12)]
    '('         [reduce using rule 131 (Primary)]
    SUB         reduce using rule 43 ($@12)
    SUB         [reduce using rule 131 (Primary)]
    NOT         reduce using rule 43 ($@12)
    NOT         [reduce using rule 131 (Primary)]
    BNT         reduce using rule 43 ($@12)
    BNT         [reduce using rule 131 (Primary)]
    ADD         reduce using rule 43 ($@12)
    ADD         [reduce using rule 131 (Primary)]
    $default    reduce using rule 43 ($@12)

    $@12  go to state 62


State 133

   22 IterationStmt: FOR $@4 '(' ForCondition • ')' $@5 CompoundStmt

    ')'  shift, and go to state 187


State 134

   25 ForCondition: ExpressionStmt • $@6 ExpressionStmt $@7 ExpressionStmt

    $default  reduce using rule 23 ($@6)

    $@6  go to state 188


State 135

   29 ExpressionStmt: AssignBody •

    $default  reduce using rule 29 (ExpressionStmt)


State 136

   28 ExpressionStmt: DefineVariableStmt •

    $default  reduce using rule 28 (ExpressionStmt)


State 137

   27 ExpressionStmt: Expression • ';'
   30               | Expression •

    ';'  shift, and go to state 189

    ';'       [reduce using rule 30 (ExpressionStmt)]
    $default  reduce using rule 30 (ExpressionStmt)


State 138

   19 IterationStmt: WHILE $@2 '(' Expression • ')' $@3 CompoundStmt

    ')'  shift, and go to state 190


State 139

  134 Primary: IDENT '[' @20 • List

    IDENT      shift, and go to state 30
    BOOL_LIT   shift, and go to state 31
    INT_LIT    shift, and go to state 32
    FLOAT_LIT  shift, and go to state 33
    STR_LIT    shift, and go to state 34
    '('        shift, and go to state 35
    SUB        shift, and go to state 36
    NOT        shift, and go to state 37
    BNT        shift, and go to state 38
    ADD        shift, and go to state 39

    Expression      go to state 191
    Or              go to state 41
    And             go to state 42
    BitwiseOr       go to state 43
    BitwiseXor      go to state 44
    BitwiseAnd      go to state 45
    Equality        go to state 46
    Relational      go to state 47
    Shift           go to state 48
    Additive        go to state 49
    Multiplicative  go to state 50
    TypeCast        go to state 51
    Unary           go to state 52
    Post            go to state 53
    Primary         go to state 54
    List            go to state 192
    FunctionCall    go to state 55


State 140

  118 TypeCast: '(' VARIABLE_T ')' • Unary

    IDENT      shift, and go to state 30
    BOOL_LIT   shift, and go to state 31
    INT_LIT    shift, and go to state 32
    FLOAT_LIT  shift, and go to state 33
    '('        shift, and go to state 74
    SUB        shift, and go to state 36
    NOT        shift, and go to state 37
    BNT        shift, and go to state 38
    ADD        shift, and go to state 39

    Unary         go to state 193
    Post          go to state 53
    Primary       go to state 54
    FunctionCall  go to state 55


State 141

  129 Primary: '(' Expression ')' •

    $default  reduce using rule 129 (Primary)


State 142

   91 Or: Or LOR And •
   93 And: And • LAN BitwiseOr

    LAN  shift, and go to state 81

    $default  reduce using rule 91 (Or)


State 143

   93 And: And LAN BitwiseOr •
   95 BitwiseOr: BitwiseOr • BOR BitwiseXor

    BOR  shift, and go to state 82

    $default  reduce using rule 93 (And)


State 144

   95 BitwiseOr: BitwiseOr BOR BitwiseXor •
   97 BitwiseXor: BitwiseXor • BXO BitwiseAnd

    BXO  shift, and go to state 83

    $default  reduce using rule 95 (BitwiseOr)


State 145

   97 BitwiseXor: BitwiseXor BXO BitwiseAnd •
   99 BitwiseAnd: BitwiseAnd • BAN Equality

    BAN  shift, and go to state 84

    $default  reduce using rule 97 (BitwiseXor)


State 146

   99 BitwiseAnd: BitwiseAnd BAN Equality •
  101 Equality: Equality • EQL Relational
  102         | Equality • NEQ Relational

    EQL  shift, and go to state 85
    NEQ  shift, and go to state 86

    $default  reduce using rule 99 (BitwiseAnd)


State 147

  101 Equality: Equality EQL Relational •
  104 Relational: Relational • LES Shift
  105           | Relational • GTR Shift
  106           | Relational • LEQ Shift
  107           | Relational • GEQ Shift

    GTR  shift, and go to state 87
    LES  shift, and go to state 88
    GEQ  shift, and go to state 89
    LEQ  shift, and go to state 90

    $default  reduce using rule 101 (Equality)


State 148

  102 Equality: Equality NEQ Relational •
  104 Relational: Relational • LES Shift
  105           | Relational • GTR Shift
  106           | Relational • LEQ Shift
  107           | Relational • GEQ Shift

    GTR  shift, and go to state 87
    LES  shift, and go to state 88
    GEQ  shift, and go to state 89
    LEQ  shift, and go to state 90

    $default  reduce using rule 102 (Equality)


State 149

  105 Relational: Relational GTR Shift •
  109 Shift: Shift • SHR Additive

    SHR  shift, and go to state 91

    $default  reduce using rule 105 (Relational)


State 150

  104 Relational: Relational LES Shift •
  109 Shift: Shift • SHR Additive

    SHR  shift, and go to state 91

    $default  reduce using rule 104 (Relational)


State 151

  107 Relational: Relational GEQ Shift •
  109 Shift: Shift • SHR Additive

    SHR  shift, and go to state 91

    $default  reduce using rule 107 (Relational)


State 152

  106 Relational: Relational LEQ Shift •
  109 Shift: Shift • SHR Additive

    SHR  shift, and go to state 91

    $default  reduce using rule 106 (Relational)


State 153

  109 Shift: Shift SHR Additive •
  111 Additive: Additive • ADD Multiplicative
  112         | Additive • SUB Multiplicative

    SUB  shift, and go to state 92
    ADD  shift, and go to state 93

    SUB       [reduce using rule 109 (Shift)]
    ADD       [reduce using rule 109 (Shift)]
    $default  reduce using rule 109 (Shift)


State 154

  112 Additive: Additive SUB Multiplicative •
  114 Multiplicative: Multiplicative • MUL TypeCast
  115               | Multiplicative • DIV TypeCast
  116               | Multiplicative • REM TypeCast

    MUL  shift, and go to state 94
    DIV  shift, and go to state 95
    REM  shift, and go to state 96

    $default  reduce using rule 112 (Additive)


State 155

  111 Additive: Additive ADD Multiplicative •
  114 Multiplicative: Multiplicative • MUL TypeCast
  115               | Multiplicative • DIV TypeCast
  116               | Multiplicative • REM TypeCast

    MUL  shift, and go to state 94
    DIV  shift, and go to state 95
    REM  shift, and go to state 96

    $default  reduce using rule 111 (Additive)


State 156

  114 Multiplicative: Multiplicative MUL TypeCast •

    $default  reduce using rule 114 (Multiplicative)


State 157

  115 Multiplicative: Multiplicative DIV TypeCast •

    $default  reduce using rule 115 (Multiplicative)


State 158

  116 Multiplicative: Multiplicative REM TypeCast •

    $default  reduce using rule 116 (Multiplicative)


State 159

   69 Declarator: IDENT VAL_ASSIGN Assignable •

    $default  reduce using rule 69 (Declarator)


State 160

   70 Declarator: IDENT '[' Expression • ']'
   71           | IDENT '[' Expression • ']' '[' Expression ']'
   73           | IDENT '[' Expression • ']' $@16 VAL_ASSIGN '{' ArrayEles '}'

    ']'  shift, and go to state 194


State 161

  144 FunctionDefStmt: VARIABLE_T IDENT $@21 '(' • $@22 FunctionParameterStmtList ')' $@23 '{' GlobalStmtList '}'

    $default  reduce using rule 142 ($@22)

    $@22  go to state 195


State 162

   68 Declarator: IDENT •
   69           | IDENT • VAL_ASSIGN Assignable
   70           | IDENT • '[' Expression ']'
   71           | IDENT • '[' Expression ']' '[' Expression ']'
   73           | IDENT • '[' Expression ']' $@16 VAL_ASSIGN '{' ArrayEles '}'

    VAL_ASSIGN  shift, and go to state 99
    '['         shift, and go to state 100

    $default  reduce using rule 68 (Declarator)


State 163

   67 DeclaratorList: DeclaratorList ',' Declarator •

    $default  reduce using rule 67 (DeclaratorList)


State 164

  137 FunctionCall: IDENT '(' ArgumentList ')' •

    $default  reduce using rule 137 (FunctionCall)


State 165

  140 ArgumentListNonEmpty: ArgumentListNonEmpty ',' • Expression

    IDENT      shift, and go to state 30
    BOOL_LIT   shift, and go to state 31
    INT_LIT    shift, and go to state 32
    FLOAT_LIT  shift, and go to state 33
    STR_LIT    shift, and go to state 34
    '('        shift, and go to state 35
    SUB        shift, and go to state 36
    NOT        shift, and go to state 37
    BNT        shift, and go to state 38
    ADD        shift, and go to state 39

    Expression      go to state 196
    Or              go to state 41
    And             go to state 42
    BitwiseOr       go to state 43
    BitwiseXor      go to state 44
    BitwiseAnd      go to state 45
    Equality        go to state 46
    Relational      go to state 47
    Shift           go to state 48
    Additive        go to state 49
    Multiplicative  go to state 50
    TypeCast        go to state 51
    Unary           go to state 52
    Post            go to state 53
    Primary         go to state 54
    FunctionCall    go to state 55


State 166

   46 AssignBody: IDENT '[' @13 AssignList •

    $default  reduce using rule 46 (AssignBody)


State 167

   48 AssignList: Expression • ']' $@14 Assign
   50           | Expression • ']' '[' Expression ']' $@15 Assign

    ']'  shift, and go to state 197


State 168

   52 Assign: VAL_ASSIGN Assign •

    $default  reduce using rule 52 (Assign)


State 169

   53 Assign: ADD_ASSIGN Assign •

    $default  reduce using rule 53 (Assign)


State 170

   54 Assign: SUB_ASSIGN Assign •

    $default  reduce using rule 54 (Assign)


State 171

   55 Assign: MUL_ASSIGN Assign •

    $default  reduce using rule 55 (Assign)


State 172

   56 Assign: DIV_ASSIGN Assign •

    $default  reduce using rule 56 (Assign)


State 173

   57 Assign: REM_ASSIGN Assign •

    $default  reduce using rule 57 (Assign)


State 174

   58 Assign: BAN_ASSIGN Assign •

    $default  reduce using rule 58 (Assign)


State 175

   59 Assign: BOR_ASSIGN Assign •

    $default  reduce using rule 59 (Assign)


State 176

   60 Assign: BXO_ASSIGN Assign •

    $default  reduce using rule 60 (Assign)


State 177

   61 Assign: SHR_ASSIGN Assign •

    $default  reduce using rule 61 (Assign)


State 178

   62 Assign: SHL_ASSIGN Assign •

    $default  reduce using rule 62 (Assign)


State 179

   41 Selection: '{' • $@10 GlobalStmtList $@11 '}'

    $default  reduce using rule 39 ($@10)

    $@10  go to state 198


State 180

   38 Selection: GlobalStmt •

    $default  reduce using rule 38 (Selection)


State 181

   37 SelectionStmt: SelectionStmt ELSE $@9 Selection •

    $default  reduce using rule 37 (SelectionStmt)


State 182

   84 PrintableList: PrintableList SHL • Printable

    ENDL       shift, and go to state 124
    IDENT      shift, and go to state 30
    BOOL_LIT   shift, and go to state 31
    INT_LIT    shift, and go to state 32
    FLOAT_LIT  shift, and go to state 33
    STR_LIT    shift, and go to state 125
    '('        shift, and go to state 35
    SUB        shift, and go to state 36
    NOT        shift, and go to state 37
    BNT        shift, and go to state 38
    ADD        shift, and go to state 39

    Printable       go to state 199
    Expression      go to state 128
    Or              go to state 41
    And             go to state 42
    BitwiseOr       go to state 43
    BitwiseXor      go to state 44
    BitwiseAnd      go to state 45
    Equality        go to state 46
    Relational      go to state 47
    Shift           go to state 48
    Additive        go to state 49
    Multiplicative  go to state 50
    TypeCast        go to state 51
    Unary           go to state 52
    Post            go to state 53
    Primary         go to state 54
    FunctionCall    go to state 55


State 183

   82 CoutStmt: COUT $@19 SHL PrintableList ';' •

    $default  reduce using rule 82 (CoutStmt)


State 184

   35 SelectionStmt: IF '(' Expression ')' $@8 • Selection

    COUT        shift, and go to state 4
    IF          shift, and go to state 5
    FOR         shift, and go to state 6
    WHILE       shift, and go to state 7
    RETURN      shift, and go to state 8
    BREAK       shift, and go to state 9
    '{'         shift, and go to state 179
    VARIABLE_T  shift, and go to state 10
    IDENT       shift, and go to state 11

    GlobalStmt          go to state 180
    FunctionCallStmt    go to state 14
    JumpStmt            go to state 15
    IterationStmt       go to state 16
    SelectionStmt       go to state 17
    Selection           go to state 200
    AssignStmt          go to state 18
    AssignBody          go to state 19
    DefineVariableStmt  go to state 20
    ReturnStmt          go to state 21
    CoutStmt            go to state 22
    FunctionCall        go to state 23
    FunctionDefStmt     go to state 24


State 185

   26 ForCondition: VARIABLE_T IDENT • ':' IDENT
   68 Declarator: IDENT •
   69           | IDENT • VAL_ASSIGN Assignable
   70           | IDENT • '[' Expression ']'
   71           | IDENT • '[' Expression ']' '[' Expression ']'
   73           | IDENT • '[' Expression ']' $@16 VAL_ASSIGN '{' ArrayEles '}'

    VAL_ASSIGN  shift, and go to state 99
    ':'         shift, and go to state 201
    '['         shift, and go to state 100

    $default  reduce using rule 68 (Declarator)


State 186

   46 AssignBody: IDENT '[' • @13 AssignList
  134 Primary: IDENT '[' • @20 List

    IDENT      reduce using rule 45 (@13)
    IDENT      [reduce using rule 133 (@20)]
    BOOL_LIT   reduce using rule 45 (@13)
    BOOL_LIT   [reduce using rule 133 (@20)]
    INT_LIT    reduce using rule 45 (@13)
    INT_LIT    [reduce using rule 133 (@20)]
    FLOAT_LIT  reduce using rule 45 (@13)
    FLOAT_LIT  [reduce using rule 133 (@20)]
    STR_LIT    reduce using rule 45 (@13)
    STR_LIT    [reduce using rule 133 (@20)]
    '('        reduce using rule 45 (@13)
    '('        [reduce using rule 133 (@20)]
    SUB        reduce using rule 45 (@13)
    SUB        [reduce using rule 133 (@20)]
    NOT        reduce using rule 45 (@13)
    NOT        [reduce using rule 133 (@20)]
    BNT        reduce using rule 45 (@13)
    BNT        [reduce using rule 133 (@20)]
    ADD        reduce using rule 45 (@13)
    ADD        [reduce using rule 133 (@20)]
    $default   reduce using rule 45 (@13)

    @13  go to state 107
    @20  go to state 139


State 187

   22 IterationStmt: FOR $@4 '(' ForCondition ')' • $@5 CompoundStmt

    $default  reduce using rule 21 ($@5)

    $@5  go to state 202


State 188

   25 ForCondition: ExpressionStmt $@6 • ExpressionStmt $@7 ExpressionStmt

    ';'         shift, and go to state 130
    VARIABLE_T  shift, and go to state 203
    IDENT       shift, and go to state 132
    BOOL_LIT    shift, and go to state 31
    INT_LIT     shift, and go to state 32
    FLOAT_LIT   shift, and go to state 33
    STR_LIT     shift, and go to state 34
    '('         shift, and go to state 35
    SUB         shift, and go to state 36
    NOT         shift, and go to state 37
    BNT         shift, and go to state 38
    ADD         shift, and go to state 39

    ExpressionStmt      go to state 204
    AssignBody          go to state 135
    DefineVariableStmt  go to state 136
    Expression          go to state 137
    Or                  go to state 41
    And                 go to state 42
    BitwiseOr           go to state 43
    BitwiseXor          go to state 44
    BitwiseAnd          go to state 45
    Equality            go to state 46
    Relational          go to state 47
    Shift               go to state 48
    Additive            go to state 49
    Multiplicative      go to state 50
    TypeCast            go to state 51
    Unary               go to state 52
    Post                go to state 53
    Primary             go to state 54
    FunctionCall        go to state 55


State 189

   27 ExpressionStmt: Expression ';' •

    $default  reduce using rule 27 (ExpressionStmt)


State 190

   19 IterationStmt: WHILE $@2 '(' Expression ')' • $@3 CompoundStmt

    $default  reduce using rule 18 ($@3)

    $@3  go to state 205


State 191

  135 List: Expression • ']'
  136     | Expression • ']' '[' Expression ']'

    ']'  shift, and go to state 206


State 192

  134 Primary: IDENT '[' @20 List •

    $default  reduce using rule 134 (Primary)


State 193

  118 TypeCast: '(' VARIABLE_T ')' Unary •

    $default  reduce using rule 118 (TypeCast)


State 194

   70 Declarator: IDENT '[' Expression ']' •
   71           | IDENT '[' Expression ']' • '[' Expression ']'
   73           | IDENT '[' Expression ']' • $@16 VAL_ASSIGN '{' ArrayEles '}'

    '['  shift, and go to state 207

    VAL_ASSIGN  reduce using rule 72 ($@16)
    $default    reduce using rule 70 (Declarator)

    $@16  go to state 208


State 195

  144 FunctionDefStmt: VARIABLE_T IDENT $@21 '(' $@22 • FunctionParameterStmtList ')' $@23 '{' GlobalStmtList '}'

    VARIABLE_T  shift, and go to state 209

    $default  reduce using rule 147 (FunctionParameterStmtList)

    FunctionParameterStmtList  go to state 210
    FunctionParameterStmt      go to state 211


State 196

  140 ArgumentListNonEmpty: ArgumentListNonEmpty ',' Expression •

    $default  reduce using rule 140 (ArgumentListNonEmpty)


State 197

   48 AssignList: Expression ']' • $@14 Assign
   50           | Expression ']' • '[' Expression ']' $@15 Assign

    '['  shift, and go to state 212

    $default  reduce using rule 47 ($@14)

    $@14  go to state 213


State 198

   41 Selection: '{' $@10 • GlobalStmtList $@11 '}'

    COUT        shift, and go to state 4
    IF          shift, and go to state 5
    FOR         shift, and go to state 6
    WHILE       shift, and go to state 7
    RETURN      shift, and go to state 8
    BREAK       shift, and go to state 9
    VARIABLE_T  shift, and go to state 10
    IDENT       shift, and go to state 11

    GlobalStmtList      go to state 214
    GlobalStmt          go to state 13
    FunctionCallStmt    go to state 14
    JumpStmt            go to state 15
    IterationStmt       go to state 16
    SelectionStmt       go to state 17
    AssignStmt          go to state 18
    AssignBody          go to state 19
    DefineVariableStmt  go to state 20
    ReturnStmt          go to state 21
    CoutStmt            go to state 22
    FunctionCall        go to state 23
    FunctionDefStmt     go to state 24


State 199

   84 PrintableList: PrintableList SHL Printable •

    $default  reduce using rule 84 (PrintableList)


State 200

   35 SelectionStmt: IF '(' Expression ')' $@8 Selection •

    $default  reduce using rule 35 (SelectionStmt)


State 201

   26 ForCondition: VARIABLE_T IDENT ':' • IDENT

    IDENT  shift, and go to state 215


State 202

   22 IterationStmt: FOR $@4 '(' ForCondition ')' $@5 • CompoundStmt

    COUT        shift, and go to state 4
    IF          shift, and go to state 5
    FOR         shift, and go to state 6
    WHILE       shift, and go to state 7
    RETURN      shift, and go to state 8
    BREAK       shift, and go to state 9
    '{'         shift, and go to state 216
    VARIABLE_T  shift, and go to state 10
    IDENT       shift, and go to state 11

    GlobalStmtList      go to state 217
    GlobalStmt          go to state 13
    FunctionCallStmt    go to state 14
    JumpStmt            go to state 15
    IterationStmt       go to state 16
    CompoundStmt        go to state 218
    SelectionStmt       go to state 17
    AssignStmt          go to state 18
    AssignBody          go to state 19
    DefineVariableStmt  go to state 20
    ReturnStmt          go to state 21
    CoutStmt            go to state 22
    FunctionCall        go to state 23
    FunctionDefStmt     go to state 24


State 203

   65 DefineVariableStmt: VARIABLE_T • DeclaratorList ';'

    IDENT  shift, and go to state 162

    DeclaratorList  go to state 58
    Declarator      go to state 59


State 204

   25 ForCondition: ExpressionStmt $@6 ExpressionStmt • $@7 ExpressionStmt

    $default  reduce using rule 24 ($@7)

    $@7  go to state 219


State 205

   19 IterationStmt: WHILE $@2 '(' Expression ')' $@3 • CompoundStmt

    COUT        shift, and go to state 4
    IF          shift, and go to state 5
    FOR         shift, and go to state 6
    WHILE       shift, and go to state 7
    RETURN      shift, and go to state 8
    BREAK       shift, and go to state 9
    '{'         shift, and go to state 216
    VARIABLE_T  shift, and go to state 10
    IDENT       shift, and go to state 11

    GlobalStmtList      go to state 217
    GlobalStmt          go to state 13
    FunctionCallStmt    go to state 14
    JumpStmt            go to state 15
    IterationStmt       go to state 16
    CompoundStmt        go to state 220
    SelectionStmt       go to state 17
    AssignStmt          go to state 18
    AssignBody          go to state 19
    DefineVariableStmt  go to state 20
    ReturnStmt          go to state 21
    CoutStmt            go to state 22
    FunctionCall        go to state 23
    FunctionDefStmt     go to state 24


State 206

  135 List: Expression ']' •
  136     | Expression ']' • '[' Expression ']'

    '['  shift, and go to state 221

    $default  reduce using rule 135 (List)


State 207

   71 Declarator: IDENT '[' Expression ']' '[' • Expression ']'

    IDENT      shift, and go to state 30
    BOOL_LIT   shift, and go to state 31
    INT_LIT    shift, and go to state 32
    FLOAT_LIT  shift, and go to state 33
    STR_LIT    shift, and go to state 34
    '('        shift, and go to state 35
    SUB        shift, and go to state 36
    NOT        shift, and go to state 37
    BNT        shift, and go to state 38
    ADD        shift, and go to state 39

    Expression      go to state 222
    Or              go to state 41
    And             go to state 42
    BitwiseOr       go to state 43
    BitwiseXor      go to state 44
    BitwiseAnd      go to state 45
    Equality        go to state 46
    Relational      go to state 47
    Shift           go to state 48
    Additive        go to state 49
    Multiplicative  go to state 50
    TypeCast        go to state 51
    Unary           go to state 52
    Post            go to state 53
    Primary         go to state 54
    FunctionCall    go to state 55


State 208

   73 Declarator: IDENT '[' Expression ']' $@16 • VAL_ASSIGN '{' ArrayEles '}'

    VAL_ASSIGN  shift, and go to state 223


State 209

  148 FunctionParameterStmt: VARIABLE_T • IDENT
  150                      | VARIABLE_T • IDENT $@24 '[' ']'

    IDENT  shift, and go to state 224


State 210

  144 FunctionDefStmt: VARIABLE_T IDENT $@21 '(' $@22 FunctionParameterStmtList • ')' $@23 '{' GlobalStmtList '}'
  145 FunctionParameterStmtList: FunctionParameterStmtList • ',' FunctionParameterStmt

    ')'  shift, and go to state 225
    ','  shift, and go to state 226


State 211

  146 FunctionParameterStmtList: FunctionParameterStmt •

    $default  reduce using rule 146 (FunctionParameterStmtList)


State 212

   50 AssignList: Expression ']' '[' • Expression ']' $@15 Assign

    IDENT      shift, and go to state 30
    BOOL_LIT   shift, and go to state 31
    INT_LIT    shift, and go to state 32
    FLOAT_LIT  shift, and go to state 33
    STR_LIT    shift, and go to state 34
    '('        shift, and go to state 35
    SUB        shift, and go to state 36
    NOT        shift, and go to state 37
    BNT        shift, and go to state 38
    ADD        shift, and go to state 39

    Expression      go to state 227
    Or              go to state 41
    And             go to state 42
    BitwiseOr       go to state 43
    BitwiseXor      go to state 44
    BitwiseAnd      go to state 45
    Equality        go to state 46
    Relational      go to state 47
    Shift           go to state 48
    Additive        go to state 49
    Multiplicative  go to state 50
    TypeCast        go to state 51
    Unary           go to state 52
    Post            go to state 53
    Primary         go to state 54
    FunctionCall    go to state 55


State 213

   48 AssignList: Expression ']' $@14 • Assign

    VAL_ASSIGN  shift, and go to state 108
    ADD_ASSIGN  shift, and go to state 109
    SUB_ASSIGN  shift, and go to state 110
    MUL_ASSIGN  shift, and go to state 111
    DIV_ASSIGN  shift, and go to state 112
    REM_ASSIGN  shift, and go to state 113
    BAN_ASSIGN  shift, and go to state 114
    BOR_ASSIGN  shift, and go to state 115
    BXO_ASSIGN  shift, and go to state 116
    SHR_ASSIGN  shift, and go to state 117
    SHL_ASSIGN  shift, and go to state 118
    IDENT       shift, and go to state 30
    BOOL_LIT    shift, and go to state 31
    INT_LIT     shift, and go to state 32
    FLOAT_LIT   shift, and go to state 33
    STR_LIT     shift, and go to state 119
    '('         shift, and go to state 35
    SUB         shift, and go to state 36
    NOT         shift, and go to state 37
    BNT         shift, and go to state 38
    ADD         shift, and go to state 39

    Assign          go to state 228
    Assignable      go to state 121
    Expression      go to state 122
    Or              go to state 41
    And             go to state 42
    BitwiseOr       go to state 43
    BitwiseXor      go to state 44
    BitwiseAnd      go to state 45
    Equality        go to state 46
    Relational      go to state 47
    Shift           go to state 48
    Additive        go to state 49
    Multiplicative  go to state 50
    TypeCast        go to state 51
    Unary           go to state 52
    Post            go to state 53
    Primary         go to state 54
    FunctionCall    go to state 55


State 214

    4 GlobalStmtList: GlobalStmtList • GlobalStmt
   41 Selection: '{' $@10 GlobalStmtList • $@11 '}'

    COUT        shift, and go to state 4
    IF          shift, and go to state 5
    FOR         shift, and go to state 6
    WHILE       shift, and go to state 7
    RETURN      shift, and go to state 8
    BREAK       shift, and go to state 9
    VARIABLE_T  shift, and go to state 10
    IDENT       shift, and go to state 11

    $default  reduce using rule 40 ($@11)

    GlobalStmt          go to state 63
    FunctionCallStmt    go to state 14
    JumpStmt            go to state 15
    IterationStmt       go to state 16
    SelectionStmt       go to state 17
    $@11                go to state 229
    AssignStmt          go to state 18
    AssignBody          go to state 19
    DefineVariableStmt  go to state 20
    ReturnStmt          go to state 21
    CoutStmt            go to state 22
    FunctionCall        go to state 23
    FunctionDefStmt     go to state 24


State 215

   26 ForCondition: VARIABLE_T IDENT ':' IDENT •

    $default  reduce using rule 26 (ForCondition)


State 216

   32 CompoundStmt: '{' • GlobalStmtList '}'

    COUT        shift, and go to state 4
    IF          shift, and go to state 5
    FOR         shift, and go to state 6
    WHILE       shift, and go to state 7
    RETURN      shift, and go to state 8
    BREAK       shift, and go to state 9
    VARIABLE_T  shift, and go to state 10
    IDENT       shift, and go to state 11

    GlobalStmtList      go to state 230
    GlobalStmt          go to state 13
    FunctionCallStmt    go to state 14
    JumpStmt            go to state 15
    IterationStmt       go to state 16
    SelectionStmt       go to state 17
    AssignStmt          go to state 18
    AssignBody          go to state 19
    DefineVariableStmt  go to state 20
    ReturnStmt          go to state 21
    CoutStmt            go to state 22
    FunctionCall        go to state 23
    FunctionDefStmt     go to state 24


State 217

    4 GlobalStmtList: GlobalStmtList • GlobalStmt
   33 CompoundStmt: GlobalStmtList •

    COUT        shift, and go to state 4
    IF          shift, and go to state 5
    FOR         shift, and go to state 6
    WHILE       shift, and go to state 7
    RETURN      shift, and go to state 8
    BREAK       shift, and go to state 9
    VARIABLE_T  shift, and go to state 10
    IDENT       shift, and go to state 11

    COUT        [reduce using rule 33 (CompoundStmt)]
    IF          [reduce using rule 33 (CompoundStmt)]
    FOR         [reduce using rule 33 (CompoundStmt)]
    WHILE       [reduce using rule 33 (CompoundStmt)]
    RETURN      [reduce using rule 33 (CompoundStmt)]
    BREAK       [reduce using rule 33 (CompoundStmt)]
    VARIABLE_T  [reduce using rule 33 (CompoundStmt)]
    IDENT       [reduce using rule 33 (CompoundStmt)]
    $default    reduce using rule 33 (CompoundStmt)

    GlobalStmt          go to state 63
    FunctionCallStmt    go to state 14
    JumpStmt            go to state 15
    IterationStmt       go to state 16
    SelectionStmt       go to state 17
    AssignStmt          go to state 18
    AssignBody          go to state 19
    DefineVariableStmt  go to state 20
    ReturnStmt          go to state 21
    CoutStmt            go to state 22
    FunctionCall        go to state 23
    FunctionDefStmt     go to state 24


State 218

   22 IterationStmt: FOR $@4 '(' ForCondition ')' $@5 CompoundStmt •

    $default  reduce using rule 22 (IterationStmt)


State 219

   25 ForCondition: ExpressionStmt $@6 ExpressionStmt $@7 • ExpressionStmt

    ';'         shift, and go to state 130
    VARIABLE_T  shift, and go to state 203
    IDENT       shift, and go to state 132
    BOOL_LIT    shift, and go to state 31
    INT_LIT     shift, and go to state 32
    FLOAT_LIT   shift, and go to state 33
    STR_LIT     shift, and go to state 34
    '('         shift, and go to state 35
    SUB         shift, and go to state 36
    NOT         shift, and go to state 37
    BNT         shift, and go to state 38
    ADD         shift, and go to state 39

    ExpressionStmt      go to state 231
    AssignBody          go to state 135
    DefineVariableStmt  go to state 136
    Expression          go to state 137
    Or                  go to state 41
    And                 go to state 42
    BitwiseOr           go to state 43
    BitwiseXor          go to state 44
    BitwiseAnd          go to state 45
    Equality            go to state 46
    Relational          go to state 47
    Shift               go to state 48
    Additive            go to state 49
    Multiplicative      go to state 50
    TypeCast            go to state 51
    Unary               go to state 52
    Post                go to state 53
    Primary             go to state 54
    FunctionCall        go to state 55


State 220

   19 IterationStmt: WHILE $@2 '(' Expression ')' $@3 CompoundStmt •

    $default  reduce using rule 19 (IterationStmt)


State 221

  136 List: Expression ']' '[' • Expression ']'

    IDENT      shift, and go to state 30
    BOOL_LIT   shift, and go to state 31
    INT_LIT    shift, and go to state 32
    FLOAT_LIT  shift, and go to state 33
    STR_LIT    shift, and go to state 34
    '('        shift, and go to state 35
    SUB        shift, and go to state 36
    NOT        shift, and go to state 37
    BNT        shift, and go to state 38
    ADD        shift, and go to state 39

    Expression      go to state 232
    Or              go to state 41
    And             go to state 42
    BitwiseOr       go to state 43
    BitwiseXor      go to state 44
    BitwiseAnd      go to state 45
    Equality        go to state 46
    Relational      go to state 47
    Shift           go to state 48
    Additive        go to state 49
    Multiplicative  go to state 50
    TypeCast        go to state 51
    Unary           go to state 52
    Post            go to state 53
    Primary         go to state 54
    FunctionCall    go to state 55


State 222

   71 Declarator: IDENT '[' Expression ']' '[' Expression • ']'

    ']'  shift, and go to state 233


State 223

   73 Declarator: IDENT '[' Expression ']' $@16 VAL_ASSIGN • '{' ArrayEles '}'

    '{'  shift, and go to state 234


State 224

  148 FunctionParameterStmt: VARIABLE_T IDENT •
  150                      | VARIABLE_T IDENT • $@24 '[' ']'

    '['       reduce using rule 149 ($@24)
    $default  reduce using rule 148 (FunctionParameterStmt)

    $@24  go to state 235


State 225

  144 FunctionDefStmt: VARIABLE_T IDENT $@21 '(' $@22 FunctionParameterStmtList ')' • $@23 '{' GlobalStmtList '}'

    $default  reduce using rule 143 ($@23)

    $@23  go to state 236


State 226

  145 FunctionParameterStmtList: FunctionParameterStmtList ',' • FunctionParameterStmt

    VARIABLE_T  shift, and go to state 209

    FunctionParameterStmt  go to state 237


State 227

   50 AssignList: Expression ']' '[' Expression • ']' $@15 Assign

    ']'  shift, and go to state 238


State 228

   48 AssignList: Expression ']' $@14 Assign •

    $default  reduce using rule 48 (AssignList)


State 229

   41 Selection: '{' $@10 GlobalStmtList $@11 • '}'

    '}'  shift, and go to state 239


State 230

    4 GlobalStmtList: GlobalStmtList • GlobalStmt
   32 CompoundStmt: '{' GlobalStmtList • '}'

    COUT        shift, and go to state 4
    IF          shift, and go to state 5
    FOR         shift, and go to state 6
    WHILE       shift, and go to state 7
    RETURN      shift, and go to state 8
    BREAK       shift, and go to state 9
    '}'         shift, and go to state 240
    VARIABLE_T  shift, and go to state 10
    IDENT       shift, and go to state 11

    GlobalStmt          go to state 63
    FunctionCallStmt    go to state 14
    JumpStmt            go to state 15
    IterationStmt       go to state 16
    SelectionStmt       go to state 17
    AssignStmt          go to state 18
    AssignBody          go to state 19
    DefineVariableStmt  go to state 20
    ReturnStmt          go to state 21
    CoutStmt            go to state 22
    FunctionCall        go to state 23
    FunctionDefStmt     go to state 24


State 231

   25 ForCondition: ExpressionStmt $@6 ExpressionStmt $@7 ExpressionStmt •

    $default  reduce using rule 25 (ForCondition)


State 232

  136 List: Expression ']' '[' Expression • ']'

    ']'  shift, and go to state 241


State 233

   71 Declarator: IDENT '[' Expression ']' '[' Expression ']' •

    $default  reduce using rule 71 (Declarator)


State 234

   73 Declarator: IDENT '[' Expression ']' $@16 VAL_ASSIGN '{' • ArrayEles '}'

    '}'       reduce using rule 78 (ArrayEles)
    ','       reduce using rule 78 (ArrayEles)
    $default  reduce using rule 74 (@17)

    ArrayEles  go to state 242
    @17        go to state 243


State 235

  150 FunctionParameterStmt: VARIABLE_T IDENT $@24 • '[' ']'

    '['  shift, and go to state 244


State 236

  144 FunctionDefStmt: VARIABLE_T IDENT $@21 '(' $@22 FunctionParameterStmtList ')' $@23 • '{' GlobalStmtList '}'

    '{'  shift, and go to state 245


State 237

  145 FunctionParameterStmtList: FunctionParameterStmtList ',' FunctionParameterStmt •

    $default  reduce using rule 145 (FunctionParameterStmtList)


State 238

   50 AssignList: Expression ']' '[' Expression ']' • $@15 Assign

    $default  reduce using rule 49 ($@15)

    $@15  go to state 246


State 239

   41 Selection: '{' $@10 GlobalStmtList $@11 '}' •

    $default  reduce using rule 41 (Selection)


State 240

   32 CompoundStmt: '{' GlobalStmtList '}' •

    $default  reduce using rule 32 (CompoundStmt)


State 241

  136 List: Expression ']' '[' Expression ']' •

    $default  reduce using rule 136 (List)


State 242

   73 Declarator: IDENT '[' Expression ']' $@16 VAL_ASSIGN '{' ArrayEles • '}'
   77 ArrayEles: ArrayEles • ',' @18 Assignable

    '}'  shift, and go to state 247
    ','  shift, and go to state 248


State 243

   75 ArrayEles: @17 • Assignable

    IDENT      shift, and go to state 30
    BOOL_LIT   shift, and go to state 31
    INT_LIT    shift, and go to state 32
    FLOAT_LIT  shift, and go to state 33
    STR_LIT    shift, and go to state 119
    '('        shift, and go to state 35
    SUB        shift, and go to state 36
    NOT        shift, and go to state 37
    BNT        shift, and go to state 38
    ADD        shift, and go to state 39

    Assignable      go to state 249
    Expression      go to state 122
    Or              go to state 41
    And             go to state 42
    BitwiseOr       go to state 43
    BitwiseXor      go to state 44
    BitwiseAnd      go to state 45
    Equality        go to state 46
    Relational      go to state 47
    Shift           go to state 48
    Additive        go to state 49
    Multiplicative  go to state 50
    TypeCast        go to state 51
    Unary           go to state 52
    Post            go to state 53
    Primary         go to state 54
    FunctionCall    go to state 55


State 244

  150 FunctionParameterStmt: VARIABLE_T IDENT $@24 '[' • ']'

    ']'  shift, and go to state 250


State 245

  144 FunctionDefStmt: VARIABLE_T IDENT $@21 '(' $@22 FunctionParameterStmtList ')' $@23 '{' • GlobalStmtList '}'

    COUT        shift, and go to state 4
    IF          shift, and go to state 5
    FOR         shift, and go to state 6
    WHILE       shift, and go to state 7
    RETURN      shift, and go to state 8
    BREAK       shift, and go to state 9
    VARIABLE_T  shift, and go to state 10
    IDENT       shift, and go to state 11

    GlobalStmtList      go to state 251
    GlobalStmt          go to state 13
    FunctionCallStmt    go to state 14
    JumpStmt            go to state 15
    IterationStmt       go to state 16
    SelectionStmt       go to state 17
    AssignStmt          go to state 18
    AssignBody          go to state 19
    DefineVariableStmt  go to state 20
    ReturnStmt          go to state 21
    CoutStmt            go to state 22
    FunctionCall        go to state 23
    FunctionDefStmt     go to state 24


State 246

   50 AssignList: Expression ']' '[' Expression ']' $@15 • Assign

    VAL_ASSIGN  shift, and go to state 108
    ADD_ASSIGN  shift, and go to state 109
    SUB_ASSIGN  shift, and go to state 110
    MUL_ASSIGN  shift, and go to state 111
    DIV_ASSIGN  shift, and go to state 112
    REM_ASSIGN  shift, and go to state 113
    BAN_ASSIGN  shift, and go to state 114
    BOR_ASSIGN  shift, and go to state 115
    BXO_ASSIGN  shift, and go to state 116
    SHR_ASSIGN  shift, and go to state 117
    SHL_ASSIGN  shift, and go to state 118
    IDENT       shift, and go to state 30
    BOOL_LIT    shift, and go to state 31
    INT_LIT     shift, and go to state 32
    FLOAT_LIT   shift, and go to state 33
    STR_LIT     shift, and go to state 119
    '('         shift, and go to state 35
    SUB         shift, and go to state 36
    NOT         shift, and go to state 37
    BNT         shift, and go to state 38
    ADD         shift, and go to state 39

    Assign          go to state 252
    Assignable      go to state 121
    Expression      go to state 122
    Or              go to state 41
    And             go to state 42
    BitwiseOr       go to state 43
    BitwiseXor      go to state 44
    BitwiseAnd      go to state 45
    Equality        go to state 46
    Relational      go to state 47
    Shift           go to state 48
    Additive        go to state 49
    Multiplicative  go to state 50
    TypeCast        go to state 51
    Unary           go to state 52
    Post            go to state 53
    Primary         go to state 54
    FunctionCall    go to state 55


State 247

   73 Declarator: IDENT '[' Expression ']' $@16 VAL_ASSIGN '{' ArrayEles '}' •

    $default  reduce using rule 73 (Declarator)


State 248

   77 ArrayEles: ArrayEles ',' • @18 Assignable

    $default  reduce using rule 76 (@18)

    @18  go to state 253


State 249

   75 ArrayEles: @17 Assignable •

    $default  reduce using rule 75 (ArrayEles)


State 250

  150 FunctionParameterStmt: VARIABLE_T IDENT $@24 '[' ']' •

    $default  reduce using rule 150 (FunctionParameterStmt)


State 251

    4 GlobalStmtList: GlobalStmtList • GlobalStmt
  144 FunctionDefStmt: VARIABLE_T IDENT $@21 '(' $@22 FunctionParameterStmtList ')' $@23 '{' GlobalStmtList • '}'

    COUT        shift, and go to state 4
    IF          shift, and go to state 5
    FOR         shift, and go to state 6
    WHILE       shift, and go to state 7
    RETURN      shift, and go to state 8
    BREAK       shift, and go to state 9
    '}'         shift, and go to state 254
    VARIABLE_T  shift, and go to state 10
    IDENT       shift, and go to state 11

    GlobalStmt          go to state 63
    FunctionCallStmt    go to state 14
    JumpStmt            go to state 15
    IterationStmt       go to state 16
    SelectionStmt       go to state 17
    AssignStmt          go to state 18
    AssignBody          go to state 19
    DefineVariableStmt  go to state 20
    ReturnStmt          go to state 21
    CoutStmt            go to state 22
    FunctionCall        go to state 23
    FunctionDefStmt     go to state 24


State 252

   50 AssignList: Expression ']' '[' Expression ']' $@15 Assign •

    $default  reduce using rule 50 (AssignList)


State 253

   77 ArrayEles: ArrayEles ',' @18 • Assignable

    IDENT      shift, and go to state 30
    BOOL_LIT   shift, and go to state 31
    INT_LIT    shift, and go to state 32
    FLOAT_LIT  shift, and go to state 33
    STR_LIT    shift, and go to state 119
    '('        shift, and go to state 35
    SUB        shift, and go to state 36
    NOT        shift, and go to state 37
    BNT        shift, and go to state 38
    ADD        shift, and go to state 39

    Assignable      go to state 255
    Expression      go to state 122
    Or              go to state 41
    And             go to state 42
    BitwiseOr       go to state 43
    BitwiseXor      go to state 44
    BitwiseAnd      go to state 45
    Equality        go to state 46
    Relational      go to state 47
    Shift           go to state 48
    Additive        go to state 49
    Multiplicative  go to state 50
    TypeCast        go to state 51
    Unary           go to state 52
    Post            go to state 53
    Primary         go to state 54
    FunctionCall    go to state 55


State 254

  144 FunctionDefStmt: VARIABLE_T IDENT $@21 '(' $@22 FunctionParameterStmtList ')' $@23 '{' GlobalStmtList '}' •

    $default  reduce using rule 144 (FunctionDefStmt)


State 255

   77 ArrayEles: ArrayEles ',' @18 Assignable •

    $default  reduce using rule 77 (ArrayEles)
