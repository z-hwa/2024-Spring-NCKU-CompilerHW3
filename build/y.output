Terminals unused in grammar

    CONTINUE


State 11 conflicts: 1 shift/reduce
State 17 conflicts: 1 shift/reduce
State 30 conflicts: 1 shift/reduce
State 49 conflicts: 2 shift/reduce
State 119 conflicts: 15 reduce/reduce
State 125 conflicts: 2 reduce/reduce
State 132 conflicts: 1 shift/reduce, 10 reduce/reduce
State 137 conflicts: 1 shift/reduce
State 153 conflicts: 2 shift/reduce
State 186 conflicts: 10 reduce/reduce
State 203 conflicts: 8 shift/reduce


Grammar

    0 $accept: Program $end

    1 $@1: ε

    2 Program: $@1 GlobalStmtList
    3        | ε

    4 GlobalStmtList: GlobalStmtList GlobalStmt
    5               | GlobalStmt

    6 GlobalStmt: DefineVariableStmt
    7           | FunctionDefStmt
    8           | CoutStmt
    9           | ReturnStmt
   10           | AssignStmt
   11           | SelectionStmt
   12           | IterationStmt
   13           | JumpStmt
   14           | FunctionCallStmt

   15 FunctionCallStmt: FunctionCall ';'

   16 JumpStmt: BREAK ';'

   17 $@2: ε

   18 $@3: ε

   19 IterationStmt: WHILE $@2 '(' Expression ')' $@3 CompoundStmt

   20 $@4: ε

   21 IterationStmt: FOR $@4 '(' ForCondition ')' CompoundStmt

   22 $@5: ε

   23 $@6: ε

   24 ForCondition: ExpressionStmt $@5 ExpressionStmt $@6 ExpressionStmt
   25             | VARIABLE_T IDENT ':' IDENT

   26 ExpressionStmt: Expression ';'
   27               | DefineVariableStmt
   28               | AssignBody
   29               | Expression
   30               | ';'

   31 CompoundStmt: '{' GlobalStmtList '}'
   32             | GlobalStmtList

   33 $@7: ε

   34 SelectionStmt: IF '(' Expression ')' $@7 Selection

   35 $@8: ε

   36 SelectionStmt: SelectionStmt ELSE $@8 Selection

   37 Selection: GlobalStmt

   38 $@9: ε

   39 $@10: ε

   40 Selection: '{' $@9 GlobalStmtList $@10 '}'

   41 AssignStmt: AssignBody ';'

   42 $@11: ε

   43 AssignBody: IDENT $@11 Assign

   44 @12: ε

   45 AssignBody: IDENT '[' @12 AssignList

   46 $@13: ε

   47 AssignList: Expression ']' $@13 Assign

   48 $@14: ε

   49 AssignList: Expression ']' '[' Expression ']' $@14 Assign

   50 Assign: Assignable
   51       | VAL_ASSIGN Assign
   52       | ADD_ASSIGN Assign
   53       | SUB_ASSIGN Assign
   54       | MUL_ASSIGN Assign
   55       | DIV_ASSIGN Assign
   56       | REM_ASSIGN Assign
   57       | BAN_ASSIGN Assign
   58       | BOR_ASSIGN Assign
   59       | BXO_ASSIGN Assign
   60       | SHR_ASSIGN Assign
   61       | SHL_ASSIGN Assign

   62 Assignable: STR_LIT
   63           | Expression

   64 DefineVariableStmt: VARIABLE_T DeclaratorList ';'

   65 DeclaratorList: Declarator
   66               | DeclaratorList ',' Declarator

   67 Declarator: IDENT
   68           | IDENT VAL_ASSIGN Assignable
   69           | IDENT '[' Expression ']'
   70           | IDENT '[' Expression ']' '[' Expression ']'

   71 $@15: ε

   72 Declarator: IDENT '[' Expression ']' $@15 VAL_ASSIGN '{' ArrayEles '}'

   73 @16: ε

   74 ArrayEles: @16 Assignable

   75 @17: ε

   76 ArrayEles: ArrayEles ',' @17 Assignable
   77          | ε

   78 ReturnStmt: RETURN Expression ';'
   79           | RETURN ';'

   80 $@18: ε

   81 CoutStmt: COUT $@18 SHL PrintableList ';'

   82 PrintableList: Printable
   83              | PrintableList SHL Printable

   84 Printable: STR_LIT
   85          | ENDL
   86          | Expression

   87 Expression: Or
   88           | STR_LIT

   89 Or: And
   90   | Or LOR And

   91 And: BitwiseOr
   92    | And LAN BitwiseOr

   93 BitwiseOr: BitwiseXor
   94          | BitwiseOr BOR BitwiseXor

   95 BitwiseXor: BitwiseAnd
   96           | BitwiseXor BXO BitwiseAnd

   97 BitwiseAnd: Equality
   98           | BitwiseAnd BAN Equality

   99 Equality: Relational
  100         | Equality EQL Relational
  101         | Equality NEQ Relational

  102 Relational: Shift
  103           | Relational LES Shift
  104           | Relational GTR Shift
  105           | Relational LEQ Shift
  106           | Relational GEQ Shift

  107 Shift: Additive
  108      | Shift SHR Additive

  109 Additive: Multiplicative
  110         | Additive ADD Multiplicative
  111         | Additive SUB Multiplicative

  112 Multiplicative: TypeCast
  113               | Multiplicative MUL TypeCast
  114               | Multiplicative DIV TypeCast
  115               | Multiplicative REM TypeCast

  116 TypeCast: Unary
  117         | '(' VARIABLE_T ')' Unary

  118 Unary: BNT Unary
  119      | ADD Unary
  120      | SUB Unary
  121      | NOT Unary
  122      | Post

  123 Post: Primary
  124     | Primary INC_ASSIGN
  125     | Primary DEC_ASSIGN

  126 Primary: INT_LIT
  127        | FLOAT_LIT
  128        | '(' Expression ')'
  129        | BOOL_LIT
  130        | IDENT
  131        | FunctionCall

  132 @19: ε

  133 Primary: IDENT '[' @19 List

  134 List: Expression ']'
  135     | Expression ']' '[' Expression ']'

  136 FunctionCall: IDENT '(' ArgumentList ')'

  137 ArgumentList: ArgumentListNonEmpty

  138 ArgumentListNonEmpty: Expression
  139                     | ArgumentListNonEmpty ',' Expression

  140 $@20: ε

  141 $@21: ε

  142 $@22: ε

  143 FunctionDefStmt: VARIABLE_T IDENT $@20 '(' $@21 FunctionParameterStmtList ')' $@22 '{' GlobalStmtList '}'

  144 FunctionParameterStmtList: FunctionParameterStmtList ',' FunctionParameterStmt
  145                          | FunctionParameterStmt
  146                          | ε

  147 FunctionParameterStmt: VARIABLE_T IDENT

  148 $@23: ε

  149 FunctionParameterStmt: VARIABLE_T IDENT $@23 '[' ']'


Terminals, with rules where they appear

    $end (0) 0
    '(' <object_val> (40) 19 21 34 117 128 136 143
    ')' (41) 19 21 34 117 128 136 143
    ',' (44) 66 76 139 144
    ':' (58) 25
    ';' (59) 15 16 26 30 41 64 78 79 81
    '[' (91) 45 49 69 70 72 133 135 149
    ']' (93) 47 49 69 70 72 134 135 149
    '{' (123) 31 40 72 143
    '}' (125) 31 40 72 143
    error (256)
    COUT (258) 81
    SHR (259) 108
    SHL (260) 81 83
    BAN (261) 98
    BOR (262) 94
    BXO (263) 96
    MUL (264) 113
    DIV (265) 114
    REM (266) 115
    GTR (267) 104
    LES (268) 103
    GEQ (269) 106
    LEQ (270) 105
    EQL (271) 100
    NEQ (272) 101
    LAN (273) 92
    LOR (274) 90
    VAL_ASSIGN (275) 51 68 72
    ADD_ASSIGN (276) 52
    SUB_ASSIGN (277) 53
    MUL_ASSIGN (278) 54
    DIV_ASSIGN (279) 55
    REM_ASSIGN (280) 56
    BAN_ASSIGN (281) 57
    BOR_ASSIGN (282) 58
    BXO_ASSIGN (283) 59
    SHR_ASSIGN (284) 60
    SHL_ASSIGN (285) 61
    INC_ASSIGN (286) 124
    DEC_ASSIGN (287) 125
    IF (288) 34
    ELSE (289) 36
    FOR (290) 21
    WHILE (291) 19
    RETURN (292) 78 79
    BREAK (293) 16
    CONTINUE (294)
    ENDL (295) 85
    VARIABLE_T <var_type> (296) 25 64 117 143 147 149
    IDENT <s_val> (297) 25 43 45 67 68 69 70 72 130 133 136 143 147 149
    BOOL_LIT <b_var> (298) 129
    INT_LIT <i_var> (299) 126
    FLOAT_LIT <f_var> (300) 127
    STR_LIT <s_var> (301) 62 84 88
    SUB <object_val> (302) 111 120
    NOT <object_val> (303) 121
    BNT <object_val> (304) 118
    ADD <object_val> (305) 110 119


Nonterminals, with rules where they appear

    $accept (60)
        on left: 0
    Program (61)
        on left: 2 3
        on right: 0
    $@1 (62)
        on left: 1
        on right: 2
    GlobalStmtList (63)
        on left: 4 5
        on right: 2 4 31 32 40 143
    GlobalStmt (64)
        on left: 6 7 8 9 10 11 12 13 14
        on right: 4 5 37
    FunctionCallStmt (65)
        on left: 15
        on right: 14
    JumpStmt (66)
        on left: 16
        on right: 13
    IterationStmt (67)
        on left: 19 21
        on right: 12
    $@2 (68)
        on left: 17
        on right: 19
    $@3 (69)
        on left: 18
        on right: 19
    $@4 (70)
        on left: 20
        on right: 21
    ForCondition (71)
        on left: 24 25
        on right: 21
    $@5 (72)
        on left: 22
        on right: 24
    $@6 (73)
        on left: 23
        on right: 24
    ExpressionStmt (74)
        on left: 26 27 28 29 30
        on right: 24
    CompoundStmt (75)
        on left: 31 32
        on right: 19 21
    SelectionStmt (76)
        on left: 34 36
        on right: 11 36
    $@7 (77)
        on left: 33
        on right: 34
    $@8 (78)
        on left: 35
        on right: 36
    Selection (79)
        on left: 37 40
        on right: 34 36
    $@9 (80)
        on left: 38
        on right: 40
    $@10 (81)
        on left: 39
        on right: 40
    AssignStmt (82)
        on left: 41
        on right: 10
    AssignBody <object_val> (83)
        on left: 43 45
        on right: 28 41
    $@11 (84)
        on left: 42
        on right: 43
    @12 (85)
        on left: 44
        on right: 45
    AssignList <object_val> (86)
        on left: 47 49
        on right: 45
    $@13 (87)
        on left: 46
        on right: 47
    $@14 (88)
        on left: 48
        on right: 49
    Assign (89)
        on left: 50 51 52 53 54 55 56 57 58 59 60 61
        on right: 43 47 49 51 52 53 54 55 56 57 58 59 60 61
    Assignable <object_val> (90)
        on left: 62 63
        on right: 50 68 74 76
    DefineVariableStmt (91)
        on left: 64
        on right: 6 27
    DeclaratorList (92)
        on left: 65 66
        on right: 64 66
    Declarator (93)
        on left: 67 68 69 70 72
        on right: 65 66
    $@15 (94)
        on left: 71
        on right: 72
    ArrayEles (95)
        on left: 74 76 77
        on right: 72 76
    @16 (96)
        on left: 73
        on right: 74
    @17 (97)
        on left: 75
        on right: 76
    ReturnStmt (98)
        on left: 78 79
        on right: 9
    CoutStmt (99)
        on left: 81
        on right: 8
    $@18 (100)
        on left: 80
        on right: 81
    PrintableList <object_val> (101)
        on left: 82 83
        on right: 81 83
    Printable <object_val> (102)
        on left: 84 85 86
        on right: 82 83
    Expression <object_val> (103)
        on left: 87 88
        on right: 19 26 29 34 47 49 63 69 70 72 78 86 128 134 135 138 139
    Or <object_val> (104)
        on left: 89 90
        on right: 87 90
    And <object_val> (105)
        on left: 91 92
        on right: 89 90 92
    BitwiseOr <object_val> (106)
        on left: 93 94
        on right: 91 92 94
    BitwiseXor <object_val> (107)
        on left: 95 96
        on right: 93 94 96
    BitwiseAnd <object_val> (108)
        on left: 97 98
        on right: 95 96 98
    Equality <object_val> (109)
        on left: 99 100 101
        on right: 97 98 100 101
    Relational <object_val> (110)
        on left: 102 103 104 105 106
        on right: 99 100 101 103 104 105 106
    Shift <object_val> (111)
        on left: 107 108
        on right: 102 103 104 105 106 108
    Additive <object_val> (112)
        on left: 109 110 111
        on right: 107 108 110 111
    Multiplicative <object_val> (113)
        on left: 112 113 114 115
        on right: 109 110 111 113 114 115
    TypeCast <object_val> (114)
        on left: 116 117
        on right: 112 113 114 115
    Unary <object_val> (115)
        on left: 118 119 120 121 122
        on right: 116 117 118 119 120 121
    Post <object_val> (116)
        on left: 123 124 125
        on right: 122
    Primary <object_val> (117)
        on left: 126 127 128 129 130 131 133
        on right: 123 124 125
    @19 (118)
        on left: 132
        on right: 133
    List <object_val> (119)
        on left: 134 135
        on right: 133
    FunctionCall <object_val> (120)
        on left: 136
        on right: 15 131
    ArgumentList <object_val> (121)
        on left: 137
        on right: 136
    ArgumentListNonEmpty <object_val> (122)
        on left: 138 139
        on right: 137 139
    FunctionDefStmt (123)
        on left: 143
        on right: 7
    $@20 (124)
        on left: 140
        on right: 143
    $@21 (125)
        on left: 141
        on right: 143
    $@22 (126)
        on left: 142
        on right: 143
    FunctionParameterStmtList (127)
        on left: 144 145 146
        on right: 143 144
    FunctionParameterStmt (128)
        on left: 147 149
        on right: 144 145
    $@23 (129)
        on left: 148
        on right: 149


State 0

    0 $accept: • Program $end

    $end      reduce using rule 3 (Program)
    $default  reduce using rule 1 ($@1)

    Program  go to state 1
    $@1      go to state 2


State 1

    0 $accept: Program • $end

    $end  shift, and go to state 3


State 2

    2 Program: $@1 • GlobalStmtList

    COUT        shift, and go to state 4
    IF          shift, and go to state 5
    FOR         shift, and go to state 6
    WHILE       shift, and go to state 7
    RETURN      shift, and go to state 8
    BREAK       shift, and go to state 9
    VARIABLE_T  shift, and go to state 10
    IDENT       shift, and go to state 11

    GlobalStmtList      go to state 12
    GlobalStmt          go to state 13
    FunctionCallStmt    go to state 14
    JumpStmt            go to state 15
    IterationStmt       go to state 16
    SelectionStmt       go to state 17
    AssignStmt          go to state 18
    AssignBody          go to state 19
    DefineVariableStmt  go to state 20
    ReturnStmt          go to state 21
    CoutStmt            go to state 22
    FunctionCall        go to state 23
    FunctionDefStmt     go to state 24


State 3

    0 $accept: Program $end •

    $default  accept


State 4

   81 CoutStmt: COUT • $@18 SHL PrintableList ';'

    $default  reduce using rule 80 ($@18)

    $@18  go to state 25


State 5

   34 SelectionStmt: IF • '(' Expression ')' $@7 Selection

    '('  shift, and go to state 26


State 6

   21 IterationStmt: FOR • $@4 '(' ForCondition ')' CompoundStmt

    $default  reduce using rule 20 ($@4)

    $@4  go to state 27


State 7

   19 IterationStmt: WHILE • $@2 '(' Expression ')' $@3 CompoundStmt

    $default  reduce using rule 17 ($@2)

    $@2  go to state 28


State 8

   78 ReturnStmt: RETURN • Expression ';'
   79           | RETURN • ';'

    ';'        shift, and go to state 29
    IDENT      shift, and go to state 30
    BOOL_LIT   shift, and go to state 31
    INT_LIT    shift, and go to state 32
    FLOAT_LIT  shift, and go to state 33
    STR_LIT    shift, and go to state 34
    '('        shift, and go to state 35
    SUB        shift, and go to state 36
    NOT        shift, and go to state 37
    BNT        shift, and go to state 38
    ADD        shift, and go to state 39

    Expression      go to state 40
    Or              go to state 41
    And             go to state 42
    BitwiseOr       go to state 43
    BitwiseXor      go to state 44
    BitwiseAnd      go to state 45
    Equality        go to state 46
    Relational      go to state 47
    Shift           go to state 48
    Additive        go to state 49
    Multiplicative  go to state 50
    TypeCast        go to state 51
    Unary           go to state 52
    Post            go to state 53
    Primary         go to state 54
    FunctionCall    go to state 55


State 9

   16 JumpStmt: BREAK • ';'

    ';'  shift, and go to state 56


State 10

   64 DefineVariableStmt: VARIABLE_T • DeclaratorList ';'
  143 FunctionDefStmt: VARIABLE_T • IDENT $@20 '(' $@21 FunctionParameterStmtList ')' $@22 '{' GlobalStmtList '}'

    IDENT  shift, and go to state 57

    DeclaratorList  go to state 58
    Declarator      go to state 59


State 11

   43 AssignBody: IDENT • $@11 Assign
   45           | IDENT • '[' @12 AssignList
  136 FunctionCall: IDENT • '(' ArgumentList ')'

    '('  shift, and go to state 60
    '['  shift, and go to state 61

    '('       [reduce using rule 42 ($@11)]
    $default  reduce using rule 42 ($@11)

    $@11  go to state 62


State 12

    2 Program: $@1 GlobalStmtList •
    4 GlobalStmtList: GlobalStmtList • GlobalStmt

    COUT        shift, and go to state 4
    IF          shift, and go to state 5
    FOR         shift, and go to state 6
    WHILE       shift, and go to state 7
    RETURN      shift, and go to state 8
    BREAK       shift, and go to state 9
    VARIABLE_T  shift, and go to state 10
    IDENT       shift, and go to state 11

    $default  reduce using rule 2 (Program)

    GlobalStmt          go to state 63
    FunctionCallStmt    go to state 14
    JumpStmt            go to state 15
    IterationStmt       go to state 16
    SelectionStmt       go to state 17
    AssignStmt          go to state 18
    AssignBody          go to state 19
    DefineVariableStmt  go to state 20
    ReturnStmt          go to state 21
    CoutStmt            go to state 22
    FunctionCall        go to state 23
    FunctionDefStmt     go to state 24


State 13

    5 GlobalStmtList: GlobalStmt •

    $default  reduce using rule 5 (GlobalStmtList)


State 14

   14 GlobalStmt: FunctionCallStmt •

    $default  reduce using rule 14 (GlobalStmt)


State 15

   13 GlobalStmt: JumpStmt •

    $default  reduce using rule 13 (GlobalStmt)


State 16

   12 GlobalStmt: IterationStmt •

    $default  reduce using rule 12 (GlobalStmt)


State 17

   11 GlobalStmt: SelectionStmt •
   36 SelectionStmt: SelectionStmt • ELSE $@8 Selection

    ELSE  shift, and go to state 64

    ELSE      [reduce using rule 11 (GlobalStmt)]
    $default  reduce using rule 11 (GlobalStmt)


State 18

   10 GlobalStmt: AssignStmt •

    $default  reduce using rule 10 (GlobalStmt)


State 19

   41 AssignStmt: AssignBody • ';'

    ';'  shift, and go to state 65


State 20

    6 GlobalStmt: DefineVariableStmt •

    $default  reduce using rule 6 (GlobalStmt)


State 21

    9 GlobalStmt: ReturnStmt •

    $default  reduce using rule 9 (GlobalStmt)


State 22

    8 GlobalStmt: CoutStmt •

    $default  reduce using rule 8 (GlobalStmt)


State 23

   15 FunctionCallStmt: FunctionCall • ';'

    ';'  shift, and go to state 66


State 24

    7 GlobalStmt: FunctionDefStmt •

    $default  reduce using rule 7 (GlobalStmt)


State 25

   81 CoutStmt: COUT $@18 • SHL PrintableList ';'

    SHL  shift, and go to state 67


State 26

   34 SelectionStmt: IF '(' • Expression ')' $@7 Selection

    IDENT      shift, and go to state 30
    BOOL_LIT   shift, and go to state 31
    INT_LIT    shift, and go to state 32
    FLOAT_LIT  shift, and go to state 33
    STR_LIT    shift, and go to state 34
    '('        shift, and go to state 35
    SUB        shift, and go to state 36
    NOT        shift, and go to state 37
    BNT        shift, and go to state 38
    ADD        shift, and go to state 39

    Expression      go to state 68
    Or              go to state 41
    And             go to state 42
    BitwiseOr       go to state 43
    BitwiseXor      go to state 44
    BitwiseAnd      go to state 45
    Equality        go to state 46
    Relational      go to state 47
    Shift           go to state 48
    Additive        go to state 49
    Multiplicative  go to state 50
    TypeCast        go to state 51
    Unary           go to state 52
    Post            go to state 53
    Primary         go to state 54
    FunctionCall    go to state 55


State 27

   21 IterationStmt: FOR $@4 • '(' ForCondition ')' CompoundStmt

    '('  shift, and go to state 69


State 28

   19 IterationStmt: WHILE $@2 • '(' Expression ')' $@3 CompoundStmt

    '('  shift, and go to state 70


State 29

   79 ReturnStmt: RETURN ';' •

    $default  reduce using rule 79 (ReturnStmt)


State 30

  130 Primary: IDENT •
  133        | IDENT • '[' @19 List
  136 FunctionCall: IDENT • '(' ArgumentList ')'

    '('  shift, and go to state 60
    '['  shift, and go to state 71

    '('       [reduce using rule 130 (Primary)]
    $default  reduce using rule 130 (Primary)


State 31

  129 Primary: BOOL_LIT •

    $default  reduce using rule 129 (Primary)


State 32

  126 Primary: INT_LIT •

    $default  reduce using rule 126 (Primary)


State 33

  127 Primary: FLOAT_LIT •

    $default  reduce using rule 127 (Primary)


State 34

   88 Expression: STR_LIT •

    $default  reduce using rule 88 (Expression)


State 35

  117 TypeCast: '(' • VARIABLE_T ')' Unary
  128 Primary: '(' • Expression ')'

    VARIABLE_T  shift, and go to state 72
    IDENT       shift, and go to state 30
    BOOL_LIT    shift, and go to state 31
    INT_LIT     shift, and go to state 32
    FLOAT_LIT   shift, and go to state 33
    STR_LIT     shift, and go to state 34
    '('         shift, and go to state 35
    SUB         shift, and go to state 36
    NOT         shift, and go to state 37
    BNT         shift, and go to state 38
    ADD         shift, and go to state 39

    Expression      go to state 73
    Or              go to state 41
    And             go to state 42
    BitwiseOr       go to state 43
    BitwiseXor      go to state 44
    BitwiseAnd      go to state 45
    Equality        go to state 46
    Relational      go to state 47
    Shift           go to state 48
    Additive        go to state 49
    Multiplicative  go to state 50
    TypeCast        go to state 51
    Unary           go to state 52
    Post            go to state 53
    Primary         go to state 54
    FunctionCall    go to state 55


State 36

  120 Unary: SUB • Unary

    IDENT      shift, and go to state 30
    BOOL_LIT   shift, and go to state 31
    INT_LIT    shift, and go to state 32
    FLOAT_LIT  shift, and go to state 33
    '('        shift, and go to state 74
    SUB        shift, and go to state 36
    NOT        shift, and go to state 37
    BNT        shift, and go to state 38
    ADD        shift, and go to state 39

    Unary         go to state 75
    Post          go to state 53
    Primary       go to state 54
    FunctionCall  go to state 55


State 37

  121 Unary: NOT • Unary

    IDENT      shift, and go to state 30
    BOOL_LIT   shift, and go to state 31
    INT_LIT    shift, and go to state 32
    FLOAT_LIT  shift, and go to state 33
    '('        shift, and go to state 74
    SUB        shift, and go to state 36
    NOT        shift, and go to state 37
    BNT        shift, and go to state 38
    ADD        shift, and go to state 39

    Unary         go to state 76
    Post          go to state 53
    Primary       go to state 54
    FunctionCall  go to state 55


State 38

  118 Unary: BNT • Unary

    IDENT      shift, and go to state 30
    BOOL_LIT   shift, and go to state 31
    INT_LIT    shift, and go to state 32
    FLOAT_LIT  shift, and go to state 33
    '('        shift, and go to state 74
    SUB        shift, and go to state 36
    NOT        shift, and go to state 37
    BNT        shift, and go to state 38
    ADD        shift, and go to state 39

    Unary         go to state 77
    Post          go to state 53
    Primary       go to state 54
    FunctionCall  go to state 55


State 39

  119 Unary: ADD • Unary

    IDENT      shift, and go to state 30
    BOOL_LIT   shift, and go to state 31
    INT_LIT    shift, and go to state 32
    FLOAT_LIT  shift, and go to state 33
    '('        shift, and go to state 74
    SUB        shift, and go to state 36
    NOT        shift, and go to state 37
    BNT        shift, and go to state 38
    ADD        shift, and go to state 39

    Unary         go to state 78
    Post          go to state 53
    Primary       go to state 54
    FunctionCall  go to state 55


State 40

   78 ReturnStmt: RETURN Expression • ';'

    ';'  shift, and go to state 79


State 41

   87 Expression: Or •
   90 Or: Or • LOR And

    LOR  shift, and go to state 80

    $default  reduce using rule 87 (Expression)


State 42

   89 Or: And •
   92 And: And • LAN BitwiseOr

    LAN  shift, and go to state 81

    $default  reduce using rule 89 (Or)


State 43

   91 And: BitwiseOr •
   94 BitwiseOr: BitwiseOr • BOR BitwiseXor

    BOR  shift, and go to state 82

    $default  reduce using rule 91 (And)


State 44

   93 BitwiseOr: BitwiseXor •
   96 BitwiseXor: BitwiseXor • BXO BitwiseAnd

    BXO  shift, and go to state 83

    $default  reduce using rule 93 (BitwiseOr)


State 45

   95 BitwiseXor: BitwiseAnd •
   98 BitwiseAnd: BitwiseAnd • BAN Equality

    BAN  shift, and go to state 84

    $default  reduce using rule 95 (BitwiseXor)


State 46

   97 BitwiseAnd: Equality •
  100 Equality: Equality • EQL Relational
  101         | Equality • NEQ Relational

    EQL  shift, and go to state 85
    NEQ  shift, and go to state 86

    $default  reduce using rule 97 (BitwiseAnd)


State 47

   99 Equality: Relational •
  103 Relational: Relational • LES Shift
  104           | Relational • GTR Shift
  105           | Relational • LEQ Shift
  106           | Relational • GEQ Shift

    GTR  shift, and go to state 87
    LES  shift, and go to state 88
    GEQ  shift, and go to state 89
    LEQ  shift, and go to state 90

    $default  reduce using rule 99 (Equality)


State 48

  102 Relational: Shift •
  108 Shift: Shift • SHR Additive

    SHR  shift, and go to state 91

    $default  reduce using rule 102 (Relational)


State 49

  107 Shift: Additive •
  110 Additive: Additive • ADD Multiplicative
  111         | Additive • SUB Multiplicative

    SUB  shift, and go to state 92
    ADD  shift, and go to state 93

    SUB       [reduce using rule 107 (Shift)]
    ADD       [reduce using rule 107 (Shift)]
    $default  reduce using rule 107 (Shift)


State 50

  109 Additive: Multiplicative •
  113 Multiplicative: Multiplicative • MUL TypeCast
  114               | Multiplicative • DIV TypeCast
  115               | Multiplicative • REM TypeCast

    MUL  shift, and go to state 94
    DIV  shift, and go to state 95
    REM  shift, and go to state 96

    $default  reduce using rule 109 (Additive)


State 51

  112 Multiplicative: TypeCast •

    $default  reduce using rule 112 (Multiplicative)


State 52

  116 TypeCast: Unary •

    $default  reduce using rule 116 (TypeCast)


State 53

  122 Unary: Post •

    $default  reduce using rule 122 (Unary)


State 54

  123 Post: Primary •
  124     | Primary • INC_ASSIGN
  125     | Primary • DEC_ASSIGN

    INC_ASSIGN  shift, and go to state 97
    DEC_ASSIGN  shift, and go to state 98

    $default  reduce using rule 123 (Post)


State 55

  131 Primary: FunctionCall •

    $default  reduce using rule 131 (Primary)


State 56

   16 JumpStmt: BREAK ';' •

    $default  reduce using rule 16 (JumpStmt)


State 57

   67 Declarator: IDENT •
   68           | IDENT • VAL_ASSIGN Assignable
   69           | IDENT • '[' Expression ']'
   70           | IDENT • '[' Expression ']' '[' Expression ']'
   72           | IDENT • '[' Expression ']' $@15 VAL_ASSIGN '{' ArrayEles '}'
  143 FunctionDefStmt: VARIABLE_T IDENT • $@20 '(' $@21 FunctionParameterStmtList ')' $@22 '{' GlobalStmtList '}'

    VAL_ASSIGN  shift, and go to state 99
    '['         shift, and go to state 100

    '('       reduce using rule 140 ($@20)
    $default  reduce using rule 67 (Declarator)

    $@20  go to state 101


State 58

   64 DefineVariableStmt: VARIABLE_T DeclaratorList • ';'
   66 DeclaratorList: DeclaratorList • ',' Declarator

    ';'  shift, and go to state 102
    ','  shift, and go to state 103


State 59

   65 DeclaratorList: Declarator •

    $default  reduce using rule 65 (DeclaratorList)


State 60

  136 FunctionCall: IDENT '(' • ArgumentList ')'

    IDENT      shift, and go to state 30
    BOOL_LIT   shift, and go to state 31
    INT_LIT    shift, and go to state 32
    FLOAT_LIT  shift, and go to state 33
    STR_LIT    shift, and go to state 34
    '('        shift, and go to state 35
    SUB        shift, and go to state 36
    NOT        shift, and go to state 37
    BNT        shift, and go to state 38
    ADD        shift, and go to state 39

    Expression            go to state 104
    Or                    go to state 41
    And                   go to state 42
    BitwiseOr             go to state 43
    BitwiseXor            go to state 44
    BitwiseAnd            go to state 45
    Equality              go to state 46
    Relational            go to state 47
    Shift                 go to state 48
    Additive              go to state 49
    Multiplicative        go to state 50
    TypeCast              go to state 51
    Unary                 go to state 52
    Post                  go to state 53
    Primary               go to state 54
    FunctionCall          go to state 55
    ArgumentList          go to state 105
    ArgumentListNonEmpty  go to state 106


State 61

   45 AssignBody: IDENT '[' • @12 AssignList

    $default  reduce using rule 44 (@12)

    @12  go to state 107


State 62

   43 AssignBody: IDENT $@11 • Assign

    VAL_ASSIGN  shift, and go to state 108
    ADD_ASSIGN  shift, and go to state 109
    SUB_ASSIGN  shift, and go to state 110
    MUL_ASSIGN  shift, and go to state 111
    DIV_ASSIGN  shift, and go to state 112
    REM_ASSIGN  shift, and go to state 113
    BAN_ASSIGN  shift, and go to state 114
    BOR_ASSIGN  shift, and go to state 115
    BXO_ASSIGN  shift, and go to state 116
    SHR_ASSIGN  shift, and go to state 117
    SHL_ASSIGN  shift, and go to state 118
    IDENT       shift, and go to state 30
    BOOL_LIT    shift, and go to state 31
    INT_LIT     shift, and go to state 32
    FLOAT_LIT   shift, and go to state 33
    STR_LIT     shift, and go to state 119
    '('         shift, and go to state 35
    SUB         shift, and go to state 36
    NOT         shift, and go to state 37
    BNT         shift, and go to state 38
    ADD         shift, and go to state 39

    Assign          go to state 120
    Assignable      go to state 121
    Expression      go to state 122
    Or              go to state 41
    And             go to state 42
    BitwiseOr       go to state 43
    BitwiseXor      go to state 44
    BitwiseAnd      go to state 45
    Equality        go to state 46
    Relational      go to state 47
    Shift           go to state 48
    Additive        go to state 49
    Multiplicative  go to state 50
    TypeCast        go to state 51
    Unary           go to state 52
    Post            go to state 53
    Primary         go to state 54
    FunctionCall    go to state 55


State 63

    4 GlobalStmtList: GlobalStmtList GlobalStmt •

    $default  reduce using rule 4 (GlobalStmtList)


State 64

   36 SelectionStmt: SelectionStmt ELSE • $@8 Selection

    $default  reduce using rule 35 ($@8)

    $@8  go to state 123


State 65

   41 AssignStmt: AssignBody ';' •

    $default  reduce using rule 41 (AssignStmt)


State 66

   15 FunctionCallStmt: FunctionCall ';' •

    $default  reduce using rule 15 (FunctionCallStmt)


State 67

   81 CoutStmt: COUT $@18 SHL • PrintableList ';'

    ENDL       shift, and go to state 124
    IDENT      shift, and go to state 30
    BOOL_LIT   shift, and go to state 31
    INT_LIT    shift, and go to state 32
    FLOAT_LIT  shift, and go to state 33
    STR_LIT    shift, and go to state 125
    '('        shift, and go to state 35
    SUB        shift, and go to state 36
    NOT        shift, and go to state 37
    BNT        shift, and go to state 38
    ADD        shift, and go to state 39

    PrintableList   go to state 126
    Printable       go to state 127
    Expression      go to state 128
    Or              go to state 41
    And             go to state 42
    BitwiseOr       go to state 43
    BitwiseXor      go to state 44
    BitwiseAnd      go to state 45
    Equality        go to state 46
    Relational      go to state 47
    Shift           go to state 48
    Additive        go to state 49
    Multiplicative  go to state 50
    TypeCast        go to state 51
    Unary           go to state 52
    Post            go to state 53
    Primary         go to state 54
    FunctionCall    go to state 55


State 68

   34 SelectionStmt: IF '(' Expression • ')' $@7 Selection

    ')'  shift, and go to state 129


State 69

   21 IterationStmt: FOR $@4 '(' • ForCondition ')' CompoundStmt

    ';'         shift, and go to state 130
    VARIABLE_T  shift, and go to state 131
    IDENT       shift, and go to state 132
    BOOL_LIT    shift, and go to state 31
    INT_LIT     shift, and go to state 32
    FLOAT_LIT   shift, and go to state 33
    STR_LIT     shift, and go to state 34
    '('         shift, and go to state 35
    SUB         shift, and go to state 36
    NOT         shift, and go to state 37
    BNT         shift, and go to state 38
    ADD         shift, and go to state 39

    ForCondition        go to state 133
    ExpressionStmt      go to state 134
    AssignBody          go to state 135
    DefineVariableStmt  go to state 136
    Expression          go to state 137
    Or                  go to state 41
    And                 go to state 42
    BitwiseOr           go to state 43
    BitwiseXor          go to state 44
    BitwiseAnd          go to state 45
    Equality            go to state 46
    Relational          go to state 47
    Shift               go to state 48
    Additive            go to state 49
    Multiplicative      go to state 50
    TypeCast            go to state 51
    Unary               go to state 52
    Post                go to state 53
    Primary             go to state 54
    FunctionCall        go to state 55


State 70

   19 IterationStmt: WHILE $@2 '(' • Expression ')' $@3 CompoundStmt

    IDENT      shift, and go to state 30
    BOOL_LIT   shift, and go to state 31
    INT_LIT    shift, and go to state 32
    FLOAT_LIT  shift, and go to state 33
    STR_LIT    shift, and go to state 34
    '('        shift, and go to state 35
    SUB        shift, and go to state 36
    NOT        shift, and go to state 37
    BNT        shift, and go to state 38
    ADD        shift, and go to state 39

    Expression      go to state 138
    Or              go to state 41
    And             go to state 42
    BitwiseOr       go to state 43
    BitwiseXor      go to state 44
    BitwiseAnd      go to state 45
    Equality        go to state 46
    Relational      go to state 47
    Shift           go to state 48
    Additive        go to state 49
    Multiplicative  go to state 50
    TypeCast        go to state 51
    Unary           go to state 52
    Post            go to state 53
    Primary         go to state 54
    FunctionCall    go to state 55


State 71

  133 Primary: IDENT '[' • @19 List

    $default  reduce using rule 132 (@19)

    @19  go to state 139


State 72

  117 TypeCast: '(' VARIABLE_T • ')' Unary

    ')'  shift, and go to state 140


State 73

  128 Primary: '(' Expression • ')'

    ')'  shift, and go to state 141


State 74

  128 Primary: '(' • Expression ')'

    IDENT      shift, and go to state 30
    BOOL_LIT   shift, and go to state 31
    INT_LIT    shift, and go to state 32
    FLOAT_LIT  shift, and go to state 33
    STR_LIT    shift, and go to state 34
    '('        shift, and go to state 35
    SUB        shift, and go to state 36
    NOT        shift, and go to state 37
    BNT        shift, and go to state 38
    ADD        shift, and go to state 39

    Expression      go to state 73
    Or              go to state 41
    And             go to state 42
    BitwiseOr       go to state 43
    BitwiseXor      go to state 44
    BitwiseAnd      go to state 45
    Equality        go to state 46
    Relational      go to state 47
    Shift           go to state 48
    Additive        go to state 49
    Multiplicative  go to state 50
    TypeCast        go to state 51
    Unary           go to state 52
    Post            go to state 53
    Primary         go to state 54
    FunctionCall    go to state 55


State 75

  120 Unary: SUB Unary •

    $default  reduce using rule 120 (Unary)


State 76

  121 Unary: NOT Unary •

    $default  reduce using rule 121 (Unary)


State 77

  118 Unary: BNT Unary •

    $default  reduce using rule 118 (Unary)


State 78

  119 Unary: ADD Unary •

    $default  reduce using rule 119 (Unary)


State 79

   78 ReturnStmt: RETURN Expression ';' •

    $default  reduce using rule 78 (ReturnStmt)


State 80

   90 Or: Or LOR • And

    IDENT      shift, and go to state 30
    BOOL_LIT   shift, and go to state 31
    INT_LIT    shift, and go to state 32
    FLOAT_LIT  shift, and go to state 33
    '('        shift, and go to state 35
    SUB        shift, and go to state 36
    NOT        shift, and go to state 37
    BNT        shift, and go to state 38
    ADD        shift, and go to state 39

    And             go to state 142
    BitwiseOr       go to state 43
    BitwiseXor      go to state 44
    BitwiseAnd      go to state 45
    Equality        go to state 46
    Relational      go to state 47
    Shift           go to state 48
    Additive        go to state 49
    Multiplicative  go to state 50
    TypeCast        go to state 51
    Unary           go to state 52
    Post            go to state 53
    Primary         go to state 54
    FunctionCall    go to state 55


State 81

   92 And: And LAN • BitwiseOr

    IDENT      shift, and go to state 30
    BOOL_LIT   shift, and go to state 31
    INT_LIT    shift, and go to state 32
    FLOAT_LIT  shift, and go to state 33
    '('        shift, and go to state 35
    SUB        shift, and go to state 36
    NOT        shift, and go to state 37
    BNT        shift, and go to state 38
    ADD        shift, and go to state 39

    BitwiseOr       go to state 143
    BitwiseXor      go to state 44
    BitwiseAnd      go to state 45
    Equality        go to state 46
    Relational      go to state 47
    Shift           go to state 48
    Additive        go to state 49
    Multiplicative  go to state 50
    TypeCast        go to state 51
    Unary           go to state 52
    Post            go to state 53
    Primary         go to state 54
    FunctionCall    go to state 55


State 82

   94 BitwiseOr: BitwiseOr BOR • BitwiseXor

    IDENT      shift, and go to state 30
    BOOL_LIT   shift, and go to state 31
    INT_LIT    shift, and go to state 32
    FLOAT_LIT  shift, and go to state 33
    '('        shift, and go to state 35
    SUB        shift, and go to state 36
    NOT        shift, and go to state 37
    BNT        shift, and go to state 38
    ADD        shift, and go to state 39

    BitwiseXor      go to state 144
    BitwiseAnd      go to state 45
    Equality        go to state 46
    Relational      go to state 47
    Shift           go to state 48
    Additive        go to state 49
    Multiplicative  go to state 50
    TypeCast        go to state 51
    Unary           go to state 52
    Post            go to state 53
    Primary         go to state 54
    FunctionCall    go to state 55


State 83

   96 BitwiseXor: BitwiseXor BXO • BitwiseAnd

    IDENT      shift, and go to state 30
    BOOL_LIT   shift, and go to state 31
    INT_LIT    shift, and go to state 32
    FLOAT_LIT  shift, and go to state 33
    '('        shift, and go to state 35
    SUB        shift, and go to state 36
    NOT        shift, and go to state 37
    BNT        shift, and go to state 38
    ADD        shift, and go to state 39

    BitwiseAnd      go to state 145
    Equality        go to state 46
    Relational      go to state 47
    Shift           go to state 48
    Additive        go to state 49
    Multiplicative  go to state 50
    TypeCast        go to state 51
    Unary           go to state 52
    Post            go to state 53
    Primary         go to state 54
    FunctionCall    go to state 55


State 84

   98 BitwiseAnd: BitwiseAnd BAN • Equality

    IDENT      shift, and go to state 30
    BOOL_LIT   shift, and go to state 31
    INT_LIT    shift, and go to state 32
    FLOAT_LIT  shift, and go to state 33
    '('        shift, and go to state 35
    SUB        shift, and go to state 36
    NOT        shift, and go to state 37
    BNT        shift, and go to state 38
    ADD        shift, and go to state 39

    Equality        go to state 146
    Relational      go to state 47
    Shift           go to state 48
    Additive        go to state 49
    Multiplicative  go to state 50
    TypeCast        go to state 51
    Unary           go to state 52
    Post            go to state 53
    Primary         go to state 54
    FunctionCall    go to state 55


State 85

  100 Equality: Equality EQL • Relational

    IDENT      shift, and go to state 30
    BOOL_LIT   shift, and go to state 31
    INT_LIT    shift, and go to state 32
    FLOAT_LIT  shift, and go to state 33
    '('        shift, and go to state 35
    SUB        shift, and go to state 36
    NOT        shift, and go to state 37
    BNT        shift, and go to state 38
    ADD        shift, and go to state 39

    Relational      go to state 147
    Shift           go to state 48
    Additive        go to state 49
    Multiplicative  go to state 50
    TypeCast        go to state 51
    Unary           go to state 52
    Post            go to state 53
    Primary         go to state 54
    FunctionCall    go to state 55


State 86

  101 Equality: Equality NEQ • Relational

    IDENT      shift, and go to state 30
    BOOL_LIT   shift, and go to state 31
    INT_LIT    shift, and go to state 32
    FLOAT_LIT  shift, and go to state 33
    '('        shift, and go to state 35
    SUB        shift, and go to state 36
    NOT        shift, and go to state 37
    BNT        shift, and go to state 38
    ADD        shift, and go to state 39

    Relational      go to state 148
    Shift           go to state 48
    Additive        go to state 49
    Multiplicative  go to state 50
    TypeCast        go to state 51
    Unary           go to state 52
    Post            go to state 53
    Primary         go to state 54
    FunctionCall    go to state 55


State 87

  104 Relational: Relational GTR • Shift

    IDENT      shift, and go to state 30
    BOOL_LIT   shift, and go to state 31
    INT_LIT    shift, and go to state 32
    FLOAT_LIT  shift, and go to state 33
    '('        shift, and go to state 35
    SUB        shift, and go to state 36
    NOT        shift, and go to state 37
    BNT        shift, and go to state 38
    ADD        shift, and go to state 39

    Shift           go to state 149
    Additive        go to state 49
    Multiplicative  go to state 50
    TypeCast        go to state 51
    Unary           go to state 52
    Post            go to state 53
    Primary         go to state 54
    FunctionCall    go to state 55


State 88

  103 Relational: Relational LES • Shift

    IDENT      shift, and go to state 30
    BOOL_LIT   shift, and go to state 31
    INT_LIT    shift, and go to state 32
    FLOAT_LIT  shift, and go to state 33
    '('        shift, and go to state 35
    SUB        shift, and go to state 36
    NOT        shift, and go to state 37
    BNT        shift, and go to state 38
    ADD        shift, and go to state 39

    Shift           go to state 150
    Additive        go to state 49
    Multiplicative  go to state 50
    TypeCast        go to state 51
    Unary           go to state 52
    Post            go to state 53
    Primary         go to state 54
    FunctionCall    go to state 55


State 89

  106 Relational: Relational GEQ • Shift

    IDENT      shift, and go to state 30
    BOOL_LIT   shift, and go to state 31
    INT_LIT    shift, and go to state 32
    FLOAT_LIT  shift, and go to state 33
    '('        shift, and go to state 35
    SUB        shift, and go to state 36
    NOT        shift, and go to state 37
    BNT        shift, and go to state 38
    ADD        shift, and go to state 39

    Shift           go to state 151
    Additive        go to state 49
    Multiplicative  go to state 50
    TypeCast        go to state 51
    Unary           go to state 52
    Post            go to state 53
    Primary         go to state 54
    FunctionCall    go to state 55


State 90

  105 Relational: Relational LEQ • Shift

    IDENT      shift, and go to state 30
    BOOL_LIT   shift, and go to state 31
    INT_LIT    shift, and go to state 32
    FLOAT_LIT  shift, and go to state 33
    '('        shift, and go to state 35
    SUB        shift, and go to state 36
    NOT        shift, and go to state 37
    BNT        shift, and go to state 38
    ADD        shift, and go to state 39

    Shift           go to state 152
    Additive        go to state 49
    Multiplicative  go to state 50
    TypeCast        go to state 51
    Unary           go to state 52
    Post            go to state 53
    Primary         go to state 54
    FunctionCall    go to state 55


State 91

  108 Shift: Shift SHR • Additive

    IDENT      shift, and go to state 30
    BOOL_LIT   shift, and go to state 31
    INT_LIT    shift, and go to state 32
    FLOAT_LIT  shift, and go to state 33
    '('        shift, and go to state 35
    SUB        shift, and go to state 36
    NOT        shift, and go to state 37
    BNT        shift, and go to state 38
    ADD        shift, and go to state 39

    Additive        go to state 153
    Multiplicative  go to state 50
    TypeCast        go to state 51
    Unary           go to state 52
    Post            go to state 53
    Primary         go to state 54
    FunctionCall    go to state 55


State 92

  111 Additive: Additive SUB • Multiplicative

    IDENT      shift, and go to state 30
    BOOL_LIT   shift, and go to state 31
    INT_LIT    shift, and go to state 32
    FLOAT_LIT  shift, and go to state 33
    '('        shift, and go to state 35
    SUB        shift, and go to state 36
    NOT        shift, and go to state 37
    BNT        shift, and go to state 38
    ADD        shift, and go to state 39

    Multiplicative  go to state 154
    TypeCast        go to state 51
    Unary           go to state 52
    Post            go to state 53
    Primary         go to state 54
    FunctionCall    go to state 55


State 93

  110 Additive: Additive ADD • Multiplicative

    IDENT      shift, and go to state 30
    BOOL_LIT   shift, and go to state 31
    INT_LIT    shift, and go to state 32
    FLOAT_LIT  shift, and go to state 33
    '('        shift, and go to state 35
    SUB        shift, and go to state 36
    NOT        shift, and go to state 37
    BNT        shift, and go to state 38
    ADD        shift, and go to state 39

    Multiplicative  go to state 155
    TypeCast        go to state 51
    Unary           go to state 52
    Post            go to state 53
    Primary         go to state 54
    FunctionCall    go to state 55


State 94

  113 Multiplicative: Multiplicative MUL • TypeCast

    IDENT      shift, and go to state 30
    BOOL_LIT   shift, and go to state 31
    INT_LIT    shift, and go to state 32
    FLOAT_LIT  shift, and go to state 33
    '('        shift, and go to state 35
    SUB        shift, and go to state 36
    NOT        shift, and go to state 37
    BNT        shift, and go to state 38
    ADD        shift, and go to state 39

    TypeCast      go to state 156
    Unary         go to state 52
    Post          go to state 53
    Primary       go to state 54
    FunctionCall  go to state 55


State 95

  114 Multiplicative: Multiplicative DIV • TypeCast

    IDENT      shift, and go to state 30
    BOOL_LIT   shift, and go to state 31
    INT_LIT    shift, and go to state 32
    FLOAT_LIT  shift, and go to state 33
    '('        shift, and go to state 35
    SUB        shift, and go to state 36
    NOT        shift, and go to state 37
    BNT        shift, and go to state 38
    ADD        shift, and go to state 39

    TypeCast      go to state 157
    Unary         go to state 52
    Post          go to state 53
    Primary       go to state 54
    FunctionCall  go to state 55


State 96

  115 Multiplicative: Multiplicative REM • TypeCast

    IDENT      shift, and go to state 30
    BOOL_LIT   shift, and go to state 31
    INT_LIT    shift, and go to state 32
    FLOAT_LIT  shift, and go to state 33
    '('        shift, and go to state 35
    SUB        shift, and go to state 36
    NOT        shift, and go to state 37
    BNT        shift, and go to state 38
    ADD        shift, and go to state 39

    TypeCast      go to state 158
    Unary         go to state 52
    Post          go to state 53
    Primary       go to state 54
    FunctionCall  go to state 55


State 97

  124 Post: Primary INC_ASSIGN •

    $default  reduce using rule 124 (Post)


State 98

  125 Post: Primary DEC_ASSIGN •

    $default  reduce using rule 125 (Post)


State 99

   68 Declarator: IDENT VAL_ASSIGN • Assignable

    IDENT      shift, and go to state 30
    BOOL_LIT   shift, and go to state 31
    INT_LIT    shift, and go to state 32
    FLOAT_LIT  shift, and go to state 33
    STR_LIT    shift, and go to state 119
    '('        shift, and go to state 35
    SUB        shift, and go to state 36
    NOT        shift, and go to state 37
    BNT        shift, and go to state 38
    ADD        shift, and go to state 39

    Assignable      go to state 159
    Expression      go to state 122
    Or              go to state 41
    And             go to state 42
    BitwiseOr       go to state 43
    BitwiseXor      go to state 44
    BitwiseAnd      go to state 45
    Equality        go to state 46
    Relational      go to state 47
    Shift           go to state 48
    Additive        go to state 49
    Multiplicative  go to state 50
    TypeCast        go to state 51
    Unary           go to state 52
    Post            go to state 53
    Primary         go to state 54
    FunctionCall    go to state 55


State 100

   69 Declarator: IDENT '[' • Expression ']'
   70           | IDENT '[' • Expression ']' '[' Expression ']'
   72           | IDENT '[' • Expression ']' $@15 VAL_ASSIGN '{' ArrayEles '}'

    IDENT      shift, and go to state 30
    BOOL_LIT   shift, and go to state 31
    INT_LIT    shift, and go to state 32
    FLOAT_LIT  shift, and go to state 33
    STR_LIT    shift, and go to state 34
    '('        shift, and go to state 35
    SUB        shift, and go to state 36
    NOT        shift, and go to state 37
    BNT        shift, and go to state 38
    ADD        shift, and go to state 39

    Expression      go to state 160
    Or              go to state 41
    And             go to state 42
    BitwiseOr       go to state 43
    BitwiseXor      go to state 44
    BitwiseAnd      go to state 45
    Equality        go to state 46
    Relational      go to state 47
    Shift           go to state 48
    Additive        go to state 49
    Multiplicative  go to state 50
    TypeCast        go to state 51
    Unary           go to state 52
    Post            go to state 53
    Primary         go to state 54
    FunctionCall    go to state 55


State 101

  143 FunctionDefStmt: VARIABLE_T IDENT $@20 • '(' $@21 FunctionParameterStmtList ')' $@22 '{' GlobalStmtList '}'

    '('  shift, and go to state 161


State 102

   64 DefineVariableStmt: VARIABLE_T DeclaratorList ';' •

    $default  reduce using rule 64 (DefineVariableStmt)


State 103

   66 DeclaratorList: DeclaratorList ',' • Declarator

    IDENT  shift, and go to state 162

    Declarator  go to state 163


State 104

  138 ArgumentListNonEmpty: Expression •

    $default  reduce using rule 138 (ArgumentListNonEmpty)


State 105

  136 FunctionCall: IDENT '(' ArgumentList • ')'

    ')'  shift, and go to state 164


State 106

  137 ArgumentList: ArgumentListNonEmpty •
  139 ArgumentListNonEmpty: ArgumentListNonEmpty • ',' Expression

    ','  shift, and go to state 165

    $default  reduce using rule 137 (ArgumentList)


State 107

   45 AssignBody: IDENT '[' @12 • AssignList

    IDENT      shift, and go to state 30
    BOOL_LIT   shift, and go to state 31
    INT_LIT    shift, and go to state 32
    FLOAT_LIT  shift, and go to state 33
    STR_LIT    shift, and go to state 34
    '('        shift, and go to state 35
    SUB        shift, and go to state 36
    NOT        shift, and go to state 37
    BNT        shift, and go to state 38
    ADD        shift, and go to state 39

    AssignList      go to state 166
    Expression      go to state 167
    Or              go to state 41
    And             go to state 42
    BitwiseOr       go to state 43
    BitwiseXor      go to state 44
    BitwiseAnd      go to state 45
    Equality        go to state 46
    Relational      go to state 47
    Shift           go to state 48
    Additive        go to state 49
    Multiplicative  go to state 50
    TypeCast        go to state 51
    Unary           go to state 52
    Post            go to state 53
    Primary         go to state 54
    FunctionCall    go to state 55


State 108

   51 Assign: VAL_ASSIGN • Assign

    VAL_ASSIGN  shift, and go to state 108
    ADD_ASSIGN  shift, and go to state 109
    SUB_ASSIGN  shift, and go to state 110
    MUL_ASSIGN  shift, and go to state 111
    DIV_ASSIGN  shift, and go to state 112
    REM_ASSIGN  shift, and go to state 113
    BAN_ASSIGN  shift, and go to state 114
    BOR_ASSIGN  shift, and go to state 115
    BXO_ASSIGN  shift, and go to state 116
    SHR_ASSIGN  shift, and go to state 117
    SHL_ASSIGN  shift, and go to state 118
    IDENT       shift, and go to state 30
    BOOL_LIT    shift, and go to state 31
    INT_LIT     shift, and go to state 32
    FLOAT_LIT   shift, and go to state 33
    STR_LIT     shift, and go to state 119
    '('         shift, and go to state 35
    SUB         shift, and go to state 36
    NOT         shift, and go to state 37
    BNT         shift, and go to state 38
    ADD         shift, and go to state 39

    Assign          go to state 168
    Assignable      go to state 121
    Expression      go to state 122
    Or              go to state 41
    And             go to state 42
    BitwiseOr       go to state 43
    BitwiseXor      go to state 44
    BitwiseAnd      go to state 45
    Equality        go to state 46
    Relational      go to state 47
    Shift           go to state 48
    Additive        go to state 49
    Multiplicative  go to state 50
    TypeCast        go to state 51
    Unary           go to state 52
    Post            go to state 53
    Primary         go to state 54
    FunctionCall    go to state 55


State 109

   52 Assign: ADD_ASSIGN • Assign

    VAL_ASSIGN  shift, and go to state 108
    ADD_ASSIGN  shift, and go to state 109
    SUB_ASSIGN  shift, and go to state 110
    MUL_ASSIGN  shift, and go to state 111
    DIV_ASSIGN  shift, and go to state 112
    REM_ASSIGN  shift, and go to state 113
    BAN_ASSIGN  shift, and go to state 114
    BOR_ASSIGN  shift, and go to state 115
    BXO_ASSIGN  shift, and go to state 116
    SHR_ASSIGN  shift, and go to state 117
    SHL_ASSIGN  shift, and go to state 118
    IDENT       shift, and go to state 30
    BOOL_LIT    shift, and go to state 31
    INT_LIT     shift, and go to state 32
    FLOAT_LIT   shift, and go to state 33
    STR_LIT     shift, and go to state 119
    '('         shift, and go to state 35
    SUB         shift, and go to state 36
    NOT         shift, and go to state 37
    BNT         shift, and go to state 38
    ADD         shift, and go to state 39

    Assign          go to state 169
    Assignable      go to state 121
    Expression      go to state 122
    Or              go to state 41
    And             go to state 42
    BitwiseOr       go to state 43
    BitwiseXor      go to state 44
    BitwiseAnd      go to state 45
    Equality        go to state 46
    Relational      go to state 47
    Shift           go to state 48
    Additive        go to state 49
    Multiplicative  go to state 50
    TypeCast        go to state 51
    Unary           go to state 52
    Post            go to state 53
    Primary         go to state 54
    FunctionCall    go to state 55


State 110

   53 Assign: SUB_ASSIGN • Assign

    VAL_ASSIGN  shift, and go to state 108
    ADD_ASSIGN  shift, and go to state 109
    SUB_ASSIGN  shift, and go to state 110
    MUL_ASSIGN  shift, and go to state 111
    DIV_ASSIGN  shift, and go to state 112
    REM_ASSIGN  shift, and go to state 113
    BAN_ASSIGN  shift, and go to state 114
    BOR_ASSIGN  shift, and go to state 115
    BXO_ASSIGN  shift, and go to state 116
    SHR_ASSIGN  shift, and go to state 117
    SHL_ASSIGN  shift, and go to state 118
    IDENT       shift, and go to state 30
    BOOL_LIT    shift, and go to state 31
    INT_LIT     shift, and go to state 32
    FLOAT_LIT   shift, and go to state 33
    STR_LIT     shift, and go to state 119
    '('         shift, and go to state 35
    SUB         shift, and go to state 36
    NOT         shift, and go to state 37
    BNT         shift, and go to state 38
    ADD         shift, and go to state 39

    Assign          go to state 170
    Assignable      go to state 121
    Expression      go to state 122
    Or              go to state 41
    And             go to state 42
    BitwiseOr       go to state 43
    BitwiseXor      go to state 44
    BitwiseAnd      go to state 45
    Equality        go to state 46
    Relational      go to state 47
    Shift           go to state 48
    Additive        go to state 49
    Multiplicative  go to state 50
    TypeCast        go to state 51
    Unary           go to state 52
    Post            go to state 53
    Primary         go to state 54
    FunctionCall    go to state 55


State 111

   54 Assign: MUL_ASSIGN • Assign

    VAL_ASSIGN  shift, and go to state 108
    ADD_ASSIGN  shift, and go to state 109
    SUB_ASSIGN  shift, and go to state 110
    MUL_ASSIGN  shift, and go to state 111
    DIV_ASSIGN  shift, and go to state 112
    REM_ASSIGN  shift, and go to state 113
    BAN_ASSIGN  shift, and go to state 114
    BOR_ASSIGN  shift, and go to state 115
    BXO_ASSIGN  shift, and go to state 116
    SHR_ASSIGN  shift, and go to state 117
    SHL_ASSIGN  shift, and go to state 118
    IDENT       shift, and go to state 30
    BOOL_LIT    shift, and go to state 31
    INT_LIT     shift, and go to state 32
    FLOAT_LIT   shift, and go to state 33
    STR_LIT     shift, and go to state 119
    '('         shift, and go to state 35
    SUB         shift, and go to state 36
    NOT         shift, and go to state 37
    BNT         shift, and go to state 38
    ADD         shift, and go to state 39

    Assign          go to state 171
    Assignable      go to state 121
    Expression      go to state 122
    Or              go to state 41
    And             go to state 42
    BitwiseOr       go to state 43
    BitwiseXor      go to state 44
    BitwiseAnd      go to state 45
    Equality        go to state 46
    Relational      go to state 47
    Shift           go to state 48
    Additive        go to state 49
    Multiplicative  go to state 50
    TypeCast        go to state 51
    Unary           go to state 52
    Post            go to state 53
    Primary         go to state 54
    FunctionCall    go to state 55


State 112

   55 Assign: DIV_ASSIGN • Assign

    VAL_ASSIGN  shift, and go to state 108
    ADD_ASSIGN  shift, and go to state 109
    SUB_ASSIGN  shift, and go to state 110
    MUL_ASSIGN  shift, and go to state 111
    DIV_ASSIGN  shift, and go to state 112
    REM_ASSIGN  shift, and go to state 113
    BAN_ASSIGN  shift, and go to state 114
    BOR_ASSIGN  shift, and go to state 115
    BXO_ASSIGN  shift, and go to state 116
    SHR_ASSIGN  shift, and go to state 117
    SHL_ASSIGN  shift, and go to state 118
    IDENT       shift, and go to state 30
    BOOL_LIT    shift, and go to state 31
    INT_LIT     shift, and go to state 32
    FLOAT_LIT   shift, and go to state 33
    STR_LIT     shift, and go to state 119
    '('         shift, and go to state 35
    SUB         shift, and go to state 36
    NOT         shift, and go to state 37
    BNT         shift, and go to state 38
    ADD         shift, and go to state 39

    Assign          go to state 172
    Assignable      go to state 121
    Expression      go to state 122
    Or              go to state 41
    And             go to state 42
    BitwiseOr       go to state 43
    BitwiseXor      go to state 44
    BitwiseAnd      go to state 45
    Equality        go to state 46
    Relational      go to state 47
    Shift           go to state 48
    Additive        go to state 49
    Multiplicative  go to state 50
    TypeCast        go to state 51
    Unary           go to state 52
    Post            go to state 53
    Primary         go to state 54
    FunctionCall    go to state 55


State 113

   56 Assign: REM_ASSIGN • Assign

    VAL_ASSIGN  shift, and go to state 108
    ADD_ASSIGN  shift, and go to state 109
    SUB_ASSIGN  shift, and go to state 110
    MUL_ASSIGN  shift, and go to state 111
    DIV_ASSIGN  shift, and go to state 112
    REM_ASSIGN  shift, and go to state 113
    BAN_ASSIGN  shift, and go to state 114
    BOR_ASSIGN  shift, and go to state 115
    BXO_ASSIGN  shift, and go to state 116
    SHR_ASSIGN  shift, and go to state 117
    SHL_ASSIGN  shift, and go to state 118
    IDENT       shift, and go to state 30
    BOOL_LIT    shift, and go to state 31
    INT_LIT     shift, and go to state 32
    FLOAT_LIT   shift, and go to state 33
    STR_LIT     shift, and go to state 119
    '('         shift, and go to state 35
    SUB         shift, and go to state 36
    NOT         shift, and go to state 37
    BNT         shift, and go to state 38
    ADD         shift, and go to state 39

    Assign          go to state 173
    Assignable      go to state 121
    Expression      go to state 122
    Or              go to state 41
    And             go to state 42
    BitwiseOr       go to state 43
    BitwiseXor      go to state 44
    BitwiseAnd      go to state 45
    Equality        go to state 46
    Relational      go to state 47
    Shift           go to state 48
    Additive        go to state 49
    Multiplicative  go to state 50
    TypeCast        go to state 51
    Unary           go to state 52
    Post            go to state 53
    Primary         go to state 54
    FunctionCall    go to state 55


State 114

   57 Assign: BAN_ASSIGN • Assign

    VAL_ASSIGN  shift, and go to state 108
    ADD_ASSIGN  shift, and go to state 109
    SUB_ASSIGN  shift, and go to state 110
    MUL_ASSIGN  shift, and go to state 111
    DIV_ASSIGN  shift, and go to state 112
    REM_ASSIGN  shift, and go to state 113
    BAN_ASSIGN  shift, and go to state 114
    BOR_ASSIGN  shift, and go to state 115
    BXO_ASSIGN  shift, and go to state 116
    SHR_ASSIGN  shift, and go to state 117
    SHL_ASSIGN  shift, and go to state 118
    IDENT       shift, and go to state 30
    BOOL_LIT    shift, and go to state 31
    INT_LIT     shift, and go to state 32
    FLOAT_LIT   shift, and go to state 33
    STR_LIT     shift, and go to state 119
    '('         shift, and go to state 35
    SUB         shift, and go to state 36
    NOT         shift, and go to state 37
    BNT         shift, and go to state 38
    ADD         shift, and go to state 39

    Assign          go to state 174
    Assignable      go to state 121
    Expression      go to state 122
    Or              go to state 41
    And             go to state 42
    BitwiseOr       go to state 43
    BitwiseXor      go to state 44
    BitwiseAnd      go to state 45
    Equality        go to state 46
    Relational      go to state 47
    Shift           go to state 48
    Additive        go to state 49
    Multiplicative  go to state 50
    TypeCast        go to state 51
    Unary           go to state 52
    Post            go to state 53
    Primary         go to state 54
    FunctionCall    go to state 55


State 115

   58 Assign: BOR_ASSIGN • Assign

    VAL_ASSIGN  shift, and go to state 108
    ADD_ASSIGN  shift, and go to state 109
    SUB_ASSIGN  shift, and go to state 110
    MUL_ASSIGN  shift, and go to state 111
    DIV_ASSIGN  shift, and go to state 112
    REM_ASSIGN  shift, and go to state 113
    BAN_ASSIGN  shift, and go to state 114
    BOR_ASSIGN  shift, and go to state 115
    BXO_ASSIGN  shift, and go to state 116
    SHR_ASSIGN  shift, and go to state 117
    SHL_ASSIGN  shift, and go to state 118
    IDENT       shift, and go to state 30
    BOOL_LIT    shift, and go to state 31
    INT_LIT     shift, and go to state 32
    FLOAT_LIT   shift, and go to state 33
    STR_LIT     shift, and go to state 119
    '('         shift, and go to state 35
    SUB         shift, and go to state 36
    NOT         shift, and go to state 37
    BNT         shift, and go to state 38
    ADD         shift, and go to state 39

    Assign          go to state 175
    Assignable      go to state 121
    Expression      go to state 122
    Or              go to state 41
    And             go to state 42
    BitwiseOr       go to state 43
    BitwiseXor      go to state 44
    BitwiseAnd      go to state 45
    Equality        go to state 46
    Relational      go to state 47
    Shift           go to state 48
    Additive        go to state 49
    Multiplicative  go to state 50
    TypeCast        go to state 51
    Unary           go to state 52
    Post            go to state 53
    Primary         go to state 54
    FunctionCall    go to state 55


State 116

   59 Assign: BXO_ASSIGN • Assign

    VAL_ASSIGN  shift, and go to state 108
    ADD_ASSIGN  shift, and go to state 109
    SUB_ASSIGN  shift, and go to state 110
    MUL_ASSIGN  shift, and go to state 111
    DIV_ASSIGN  shift, and go to state 112
    REM_ASSIGN  shift, and go to state 113
    BAN_ASSIGN  shift, and go to state 114
    BOR_ASSIGN  shift, and go to state 115
    BXO_ASSIGN  shift, and go to state 116
    SHR_ASSIGN  shift, and go to state 117
    SHL_ASSIGN  shift, and go to state 118
    IDENT       shift, and go to state 30
    BOOL_LIT    shift, and go to state 31
    INT_LIT     shift, and go to state 32
    FLOAT_LIT   shift, and go to state 33
    STR_LIT     shift, and go to state 119
    '('         shift, and go to state 35
    SUB         shift, and go to state 36
    NOT         shift, and go to state 37
    BNT         shift, and go to state 38
    ADD         shift, and go to state 39

    Assign          go to state 176
    Assignable      go to state 121
    Expression      go to state 122
    Or              go to state 41
    And             go to state 42
    BitwiseOr       go to state 43
    BitwiseXor      go to state 44
    BitwiseAnd      go to state 45
    Equality        go to state 46
    Relational      go to state 47
    Shift           go to state 48
    Additive        go to state 49
    Multiplicative  go to state 50
    TypeCast        go to state 51
    Unary           go to state 52
    Post            go to state 53
    Primary         go to state 54
    FunctionCall    go to state 55


State 117

   60 Assign: SHR_ASSIGN • Assign

    VAL_ASSIGN  shift, and go to state 108
    ADD_ASSIGN  shift, and go to state 109
    SUB_ASSIGN  shift, and go to state 110
    MUL_ASSIGN  shift, and go to state 111
    DIV_ASSIGN  shift, and go to state 112
    REM_ASSIGN  shift, and go to state 113
    BAN_ASSIGN  shift, and go to state 114
    BOR_ASSIGN  shift, and go to state 115
    BXO_ASSIGN  shift, and go to state 116
    SHR_ASSIGN  shift, and go to state 117
    SHL_ASSIGN  shift, and go to state 118
    IDENT       shift, and go to state 30
    BOOL_LIT    shift, and go to state 31
    INT_LIT     shift, and go to state 32
    FLOAT_LIT   shift, and go to state 33
    STR_LIT     shift, and go to state 119
    '('         shift, and go to state 35
    SUB         shift, and go to state 36
    NOT         shift, and go to state 37
    BNT         shift, and go to state 38
    ADD         shift, and go to state 39

    Assign          go to state 177
    Assignable      go to state 121
    Expression      go to state 122
    Or              go to state 41
    And             go to state 42
    BitwiseOr       go to state 43
    BitwiseXor      go to state 44
    BitwiseAnd      go to state 45
    Equality        go to state 46
    Relational      go to state 47
    Shift           go to state 48
    Additive        go to state 49
    Multiplicative  go to state 50
    TypeCast        go to state 51
    Unary           go to state 52
    Post            go to state 53
    Primary         go to state 54
    FunctionCall    go to state 55


State 118

   61 Assign: SHL_ASSIGN • Assign

    VAL_ASSIGN  shift, and go to state 108
    ADD_ASSIGN  shift, and go to state 109
    SUB_ASSIGN  shift, and go to state 110
    MUL_ASSIGN  shift, and go to state 111
    DIV_ASSIGN  shift, and go to state 112
    REM_ASSIGN  shift, and go to state 113
    BAN_ASSIGN  shift, and go to state 114
    BOR_ASSIGN  shift, and go to state 115
    BXO_ASSIGN  shift, and go to state 116
    SHR_ASSIGN  shift, and go to state 117
    SHL_ASSIGN  shift, and go to state 118
    IDENT       shift, and go to state 30
    BOOL_LIT    shift, and go to state 31
    INT_LIT     shift, and go to state 32
    FLOAT_LIT   shift, and go to state 33
    STR_LIT     shift, and go to state 119
    '('         shift, and go to state 35
    SUB         shift, and go to state 36
    NOT         shift, and go to state 37
    BNT         shift, and go to state 38
    ADD         shift, and go to state 39

    Assign          go to state 178
    Assignable      go to state 121
    Expression      go to state 122
    Or              go to state 41
    And             go to state 42
    BitwiseOr       go to state 43
    BitwiseXor      go to state 44
    BitwiseAnd      go to state 45
    Equality        go to state 46
    Relational      go to state 47
    Shift           go to state 48
    Additive        go to state 49
    Multiplicative  go to state 50
    TypeCast        go to state 51
    Unary           go to state 52
    Post            go to state 53
    Primary         go to state 54
    FunctionCall    go to state 55


State 119

   62 Assignable: STR_LIT •
   88 Expression: STR_LIT •

    ')'         reduce using rule 62 (Assignable)
    ')'         [reduce using rule 88 (Expression)]
    ';'         reduce using rule 62 (Assignable)
    ';'         [reduce using rule 88 (Expression)]
    '}'         reduce using rule 62 (Assignable)
    '}'         [reduce using rule 88 (Expression)]
    VARIABLE_T  reduce using rule 62 (Assignable)
    VARIABLE_T  [reduce using rule 88 (Expression)]
    IDENT       reduce using rule 62 (Assignable)
    IDENT       [reduce using rule 88 (Expression)]
    BOOL_LIT    reduce using rule 62 (Assignable)
    BOOL_LIT    [reduce using rule 88 (Expression)]
    INT_LIT     reduce using rule 62 (Assignable)
    INT_LIT     [reduce using rule 88 (Expression)]
    FLOAT_LIT   reduce using rule 62 (Assignable)
    FLOAT_LIT   [reduce using rule 88 (Expression)]
    STR_LIT     reduce using rule 62 (Assignable)
    STR_LIT     [reduce using rule 88 (Expression)]
    '('         reduce using rule 62 (Assignable)
    '('         [reduce using rule 88 (Expression)]
    SUB         reduce using rule 62 (Assignable)
    SUB         [reduce using rule 88 (Expression)]
    NOT         reduce using rule 62 (Assignable)
    NOT         [reduce using rule 88 (Expression)]
    BNT         reduce using rule 62 (Assignable)
    BNT         [reduce using rule 88 (Expression)]
    ADD         reduce using rule 62 (Assignable)
    ADD         [reduce using rule 88 (Expression)]
    ','         reduce using rule 62 (Assignable)
    ','         [reduce using rule 88 (Expression)]
    $default    reduce using rule 62 (Assignable)


State 120

   43 AssignBody: IDENT $@11 Assign •

    $default  reduce using rule 43 (AssignBody)


State 121

   50 Assign: Assignable •

    $default  reduce using rule 50 (Assign)


State 122

   63 Assignable: Expression •

    $default  reduce using rule 63 (Assignable)


State 123

   36 SelectionStmt: SelectionStmt ELSE $@8 • Selection

    COUT        shift, and go to state 4
    IF          shift, and go to state 5
    FOR         shift, and go to state 6
    WHILE       shift, and go to state 7
    RETURN      shift, and go to state 8
    BREAK       shift, and go to state 9
    '{'         shift, and go to state 179
    VARIABLE_T  shift, and go to state 10
    IDENT       shift, and go to state 11

    GlobalStmt          go to state 180
    FunctionCallStmt    go to state 14
    JumpStmt            go to state 15
    IterationStmt       go to state 16
    SelectionStmt       go to state 17
    Selection           go to state 181
    AssignStmt          go to state 18
    AssignBody          go to state 19
    DefineVariableStmt  go to state 20
    ReturnStmt          go to state 21
    CoutStmt            go to state 22
    FunctionCall        go to state 23
    FunctionDefStmt     go to state 24


State 124

   85 Printable: ENDL •

    $default  reduce using rule 85 (Printable)


State 125

   84 Printable: STR_LIT •
   88 Expression: STR_LIT •

    SHL       reduce using rule 84 (Printable)
    SHL       [reduce using rule 88 (Expression)]
    ';'       reduce using rule 84 (Printable)
    ';'       [reduce using rule 88 (Expression)]
    $default  reduce using rule 84 (Printable)


State 126

   81 CoutStmt: COUT $@18 SHL PrintableList • ';'
   83 PrintableList: PrintableList • SHL Printable

    SHL  shift, and go to state 182
    ';'  shift, and go to state 183


State 127

   82 PrintableList: Printable •

    $default  reduce using rule 82 (PrintableList)


State 128

   86 Printable: Expression •

    $default  reduce using rule 86 (Printable)


State 129

   34 SelectionStmt: IF '(' Expression ')' • $@7 Selection

    $default  reduce using rule 33 ($@7)

    $@7  go to state 184


State 130

   30 ExpressionStmt: ';' •

    $default  reduce using rule 30 (ExpressionStmt)


State 131

   25 ForCondition: VARIABLE_T • IDENT ':' IDENT
   64 DefineVariableStmt: VARIABLE_T • DeclaratorList ';'

    IDENT  shift, and go to state 185

    DeclaratorList  go to state 58
    Declarator      go to state 59


State 132

   43 AssignBody: IDENT • $@11 Assign
   45           | IDENT • '[' @12 AssignList
  130 Primary: IDENT •
  133        | IDENT • '[' @19 List
  136 FunctionCall: IDENT • '(' ArgumentList ')'

    '('  shift, and go to state 60
    '['  shift, and go to state 186

    SHR         reduce using rule 130 (Primary)
    BAN         reduce using rule 130 (Primary)
    BOR         reduce using rule 130 (Primary)
    BXO         reduce using rule 130 (Primary)
    MUL         reduce using rule 130 (Primary)
    DIV         reduce using rule 130 (Primary)
    REM         reduce using rule 130 (Primary)
    GTR         reduce using rule 130 (Primary)
    LES         reduce using rule 130 (Primary)
    GEQ         reduce using rule 130 (Primary)
    LEQ         reduce using rule 130 (Primary)
    EQL         reduce using rule 130 (Primary)
    NEQ         reduce using rule 130 (Primary)
    LAN         reduce using rule 130 (Primary)
    LOR         reduce using rule 130 (Primary)
    INC_ASSIGN  reduce using rule 130 (Primary)
    DEC_ASSIGN  reduce using rule 130 (Primary)
    ')'         reduce using rule 130 (Primary)
    ';'         reduce using rule 130 (Primary)
    VARIABLE_T  reduce using rule 130 (Primary)
    IDENT       reduce using rule 42 ($@11)
    IDENT       [reduce using rule 130 (Primary)]
    BOOL_LIT    reduce using rule 42 ($@11)
    BOOL_LIT    [reduce using rule 130 (Primary)]
    INT_LIT     reduce using rule 42 ($@11)
    INT_LIT     [reduce using rule 130 (Primary)]
    FLOAT_LIT   reduce using rule 42 ($@11)
    FLOAT_LIT   [reduce using rule 130 (Primary)]
    STR_LIT     reduce using rule 42 ($@11)
    STR_LIT     [reduce using rule 130 (Primary)]
    '('         [reduce using rule 42 ($@11)]
    '('         [reduce using rule 130 (Primary)]
    SUB         reduce using rule 42 ($@11)
    SUB         [reduce using rule 130 (Primary)]
    NOT         reduce using rule 42 ($@11)
    NOT         [reduce using rule 130 (Primary)]
    BNT         reduce using rule 42 ($@11)
    BNT         [reduce using rule 130 (Primary)]
    ADD         reduce using rule 42 ($@11)
    ADD         [reduce using rule 130 (Primary)]
    $default    reduce using rule 42 ($@11)

    $@11  go to state 62


State 133

   21 IterationStmt: FOR $@4 '(' ForCondition • ')' CompoundStmt

    ')'  shift, and go to state 187


State 134

   24 ForCondition: ExpressionStmt • $@5 ExpressionStmt $@6 ExpressionStmt

    $default  reduce using rule 22 ($@5)

    $@5  go to state 188


State 135

   28 ExpressionStmt: AssignBody •

    $default  reduce using rule 28 (ExpressionStmt)


State 136

   27 ExpressionStmt: DefineVariableStmt •

    $default  reduce using rule 27 (ExpressionStmt)


State 137

   26 ExpressionStmt: Expression • ';'
   29               | Expression •

    ';'  shift, and go to state 189

    ';'       [reduce using rule 29 (ExpressionStmt)]
    $default  reduce using rule 29 (ExpressionStmt)


State 138

   19 IterationStmt: WHILE $@2 '(' Expression • ')' $@3 CompoundStmt

    ')'  shift, and go to state 190


State 139

  133 Primary: IDENT '[' @19 • List

    IDENT      shift, and go to state 30
    BOOL_LIT   shift, and go to state 31
    INT_LIT    shift, and go to state 32
    FLOAT_LIT  shift, and go to state 33
    STR_LIT    shift, and go to state 34
    '('        shift, and go to state 35
    SUB        shift, and go to state 36
    NOT        shift, and go to state 37
    BNT        shift, and go to state 38
    ADD        shift, and go to state 39

    Expression      go to state 191
    Or              go to state 41
    And             go to state 42
    BitwiseOr       go to state 43
    BitwiseXor      go to state 44
    BitwiseAnd      go to state 45
    Equality        go to state 46
    Relational      go to state 47
    Shift           go to state 48
    Additive        go to state 49
    Multiplicative  go to state 50
    TypeCast        go to state 51
    Unary           go to state 52
    Post            go to state 53
    Primary         go to state 54
    List            go to state 192
    FunctionCall    go to state 55


State 140

  117 TypeCast: '(' VARIABLE_T ')' • Unary

    IDENT      shift, and go to state 30
    BOOL_LIT   shift, and go to state 31
    INT_LIT    shift, and go to state 32
    FLOAT_LIT  shift, and go to state 33
    '('        shift, and go to state 74
    SUB        shift, and go to state 36
    NOT        shift, and go to state 37
    BNT        shift, and go to state 38
    ADD        shift, and go to state 39

    Unary         go to state 193
    Post          go to state 53
    Primary       go to state 54
    FunctionCall  go to state 55


State 141

  128 Primary: '(' Expression ')' •

    $default  reduce using rule 128 (Primary)


State 142

   90 Or: Or LOR And •
   92 And: And • LAN BitwiseOr

    LAN  shift, and go to state 81

    $default  reduce using rule 90 (Or)


State 143

   92 And: And LAN BitwiseOr •
   94 BitwiseOr: BitwiseOr • BOR BitwiseXor

    BOR  shift, and go to state 82

    $default  reduce using rule 92 (And)


State 144

   94 BitwiseOr: BitwiseOr BOR BitwiseXor •
   96 BitwiseXor: BitwiseXor • BXO BitwiseAnd

    BXO  shift, and go to state 83

    $default  reduce using rule 94 (BitwiseOr)


State 145

   96 BitwiseXor: BitwiseXor BXO BitwiseAnd •
   98 BitwiseAnd: BitwiseAnd • BAN Equality

    BAN  shift, and go to state 84

    $default  reduce using rule 96 (BitwiseXor)


State 146

   98 BitwiseAnd: BitwiseAnd BAN Equality •
  100 Equality: Equality • EQL Relational
  101         | Equality • NEQ Relational

    EQL  shift, and go to state 85
    NEQ  shift, and go to state 86

    $default  reduce using rule 98 (BitwiseAnd)


State 147

  100 Equality: Equality EQL Relational •
  103 Relational: Relational • LES Shift
  104           | Relational • GTR Shift
  105           | Relational • LEQ Shift
  106           | Relational • GEQ Shift

    GTR  shift, and go to state 87
    LES  shift, and go to state 88
    GEQ  shift, and go to state 89
    LEQ  shift, and go to state 90

    $default  reduce using rule 100 (Equality)


State 148

  101 Equality: Equality NEQ Relational •
  103 Relational: Relational • LES Shift
  104           | Relational • GTR Shift
  105           | Relational • LEQ Shift
  106           | Relational • GEQ Shift

    GTR  shift, and go to state 87
    LES  shift, and go to state 88
    GEQ  shift, and go to state 89
    LEQ  shift, and go to state 90

    $default  reduce using rule 101 (Equality)


State 149

  104 Relational: Relational GTR Shift •
  108 Shift: Shift • SHR Additive

    SHR  shift, and go to state 91

    $default  reduce using rule 104 (Relational)


State 150

  103 Relational: Relational LES Shift •
  108 Shift: Shift • SHR Additive

    SHR  shift, and go to state 91

    $default  reduce using rule 103 (Relational)


State 151

  106 Relational: Relational GEQ Shift •
  108 Shift: Shift • SHR Additive

    SHR  shift, and go to state 91

    $default  reduce using rule 106 (Relational)


State 152

  105 Relational: Relational LEQ Shift •
  108 Shift: Shift • SHR Additive

    SHR  shift, and go to state 91

    $default  reduce using rule 105 (Relational)


State 153

  108 Shift: Shift SHR Additive •
  110 Additive: Additive • ADD Multiplicative
  111         | Additive • SUB Multiplicative

    SUB  shift, and go to state 92
    ADD  shift, and go to state 93

    SUB       [reduce using rule 108 (Shift)]
    ADD       [reduce using rule 108 (Shift)]
    $default  reduce using rule 108 (Shift)


State 154

  111 Additive: Additive SUB Multiplicative •
  113 Multiplicative: Multiplicative • MUL TypeCast
  114               | Multiplicative • DIV TypeCast
  115               | Multiplicative • REM TypeCast

    MUL  shift, and go to state 94
    DIV  shift, and go to state 95
    REM  shift, and go to state 96

    $default  reduce using rule 111 (Additive)


State 155

  110 Additive: Additive ADD Multiplicative •
  113 Multiplicative: Multiplicative • MUL TypeCast
  114               | Multiplicative • DIV TypeCast
  115               | Multiplicative • REM TypeCast

    MUL  shift, and go to state 94
    DIV  shift, and go to state 95
    REM  shift, and go to state 96

    $default  reduce using rule 110 (Additive)


State 156

  113 Multiplicative: Multiplicative MUL TypeCast •

    $default  reduce using rule 113 (Multiplicative)


State 157

  114 Multiplicative: Multiplicative DIV TypeCast •

    $default  reduce using rule 114 (Multiplicative)


State 158

  115 Multiplicative: Multiplicative REM TypeCast •

    $default  reduce using rule 115 (Multiplicative)


State 159

   68 Declarator: IDENT VAL_ASSIGN Assignable •

    $default  reduce using rule 68 (Declarator)


State 160

   69 Declarator: IDENT '[' Expression • ']'
   70           | IDENT '[' Expression • ']' '[' Expression ']'
   72           | IDENT '[' Expression • ']' $@15 VAL_ASSIGN '{' ArrayEles '}'

    ']'  shift, and go to state 194


State 161

  143 FunctionDefStmt: VARIABLE_T IDENT $@20 '(' • $@21 FunctionParameterStmtList ')' $@22 '{' GlobalStmtList '}'

    $default  reduce using rule 141 ($@21)

    $@21  go to state 195


State 162

   67 Declarator: IDENT •
   68           | IDENT • VAL_ASSIGN Assignable
   69           | IDENT • '[' Expression ']'
   70           | IDENT • '[' Expression ']' '[' Expression ']'
   72           | IDENT • '[' Expression ']' $@15 VAL_ASSIGN '{' ArrayEles '}'

    VAL_ASSIGN  shift, and go to state 99
    '['         shift, and go to state 100

    $default  reduce using rule 67 (Declarator)


State 163

   66 DeclaratorList: DeclaratorList ',' Declarator •

    $default  reduce using rule 66 (DeclaratorList)


State 164

  136 FunctionCall: IDENT '(' ArgumentList ')' •

    $default  reduce using rule 136 (FunctionCall)


State 165

  139 ArgumentListNonEmpty: ArgumentListNonEmpty ',' • Expression

    IDENT      shift, and go to state 30
    BOOL_LIT   shift, and go to state 31
    INT_LIT    shift, and go to state 32
    FLOAT_LIT  shift, and go to state 33
    STR_LIT    shift, and go to state 34
    '('        shift, and go to state 35
    SUB        shift, and go to state 36
    NOT        shift, and go to state 37
    BNT        shift, and go to state 38
    ADD        shift, and go to state 39

    Expression      go to state 196
    Or              go to state 41
    And             go to state 42
    BitwiseOr       go to state 43
    BitwiseXor      go to state 44
    BitwiseAnd      go to state 45
    Equality        go to state 46
    Relational      go to state 47
    Shift           go to state 48
    Additive        go to state 49
    Multiplicative  go to state 50
    TypeCast        go to state 51
    Unary           go to state 52
    Post            go to state 53
    Primary         go to state 54
    FunctionCall    go to state 55


State 166

   45 AssignBody: IDENT '[' @12 AssignList •

    $default  reduce using rule 45 (AssignBody)


State 167

   47 AssignList: Expression • ']' $@13 Assign
   49           | Expression • ']' '[' Expression ']' $@14 Assign

    ']'  shift, and go to state 197


State 168

   51 Assign: VAL_ASSIGN Assign •

    $default  reduce using rule 51 (Assign)


State 169

   52 Assign: ADD_ASSIGN Assign •

    $default  reduce using rule 52 (Assign)


State 170

   53 Assign: SUB_ASSIGN Assign •

    $default  reduce using rule 53 (Assign)


State 171

   54 Assign: MUL_ASSIGN Assign •

    $default  reduce using rule 54 (Assign)


State 172

   55 Assign: DIV_ASSIGN Assign •

    $default  reduce using rule 55 (Assign)


State 173

   56 Assign: REM_ASSIGN Assign •

    $default  reduce using rule 56 (Assign)


State 174

   57 Assign: BAN_ASSIGN Assign •

    $default  reduce using rule 57 (Assign)


State 175

   58 Assign: BOR_ASSIGN Assign •

    $default  reduce using rule 58 (Assign)


State 176

   59 Assign: BXO_ASSIGN Assign •

    $default  reduce using rule 59 (Assign)


State 177

   60 Assign: SHR_ASSIGN Assign •

    $default  reduce using rule 60 (Assign)


State 178

   61 Assign: SHL_ASSIGN Assign •

    $default  reduce using rule 61 (Assign)


State 179

   40 Selection: '{' • $@9 GlobalStmtList $@10 '}'

    $default  reduce using rule 38 ($@9)

    $@9  go to state 198


State 180

   37 Selection: GlobalStmt •

    $default  reduce using rule 37 (Selection)


State 181

   36 SelectionStmt: SelectionStmt ELSE $@8 Selection •

    $default  reduce using rule 36 (SelectionStmt)


State 182

   83 PrintableList: PrintableList SHL • Printable

    ENDL       shift, and go to state 124
    IDENT      shift, and go to state 30
    BOOL_LIT   shift, and go to state 31
    INT_LIT    shift, and go to state 32
    FLOAT_LIT  shift, and go to state 33
    STR_LIT    shift, and go to state 125
    '('        shift, and go to state 35
    SUB        shift, and go to state 36
    NOT        shift, and go to state 37
    BNT        shift, and go to state 38
    ADD        shift, and go to state 39

    Printable       go to state 199
    Expression      go to state 128
    Or              go to state 41
    And             go to state 42
    BitwiseOr       go to state 43
    BitwiseXor      go to state 44
    BitwiseAnd      go to state 45
    Equality        go to state 46
    Relational      go to state 47
    Shift           go to state 48
    Additive        go to state 49
    Multiplicative  go to state 50
    TypeCast        go to state 51
    Unary           go to state 52
    Post            go to state 53
    Primary         go to state 54
    FunctionCall    go to state 55


State 183

   81 CoutStmt: COUT $@18 SHL PrintableList ';' •

    $default  reduce using rule 81 (CoutStmt)


State 184

   34 SelectionStmt: IF '(' Expression ')' $@7 • Selection

    COUT        shift, and go to state 4
    IF          shift, and go to state 5
    FOR         shift, and go to state 6
    WHILE       shift, and go to state 7
    RETURN      shift, and go to state 8
    BREAK       shift, and go to state 9
    '{'         shift, and go to state 179
    VARIABLE_T  shift, and go to state 10
    IDENT       shift, and go to state 11

    GlobalStmt          go to state 180
    FunctionCallStmt    go to state 14
    JumpStmt            go to state 15
    IterationStmt       go to state 16
    SelectionStmt       go to state 17
    Selection           go to state 200
    AssignStmt          go to state 18
    AssignBody          go to state 19
    DefineVariableStmt  go to state 20
    ReturnStmt          go to state 21
    CoutStmt            go to state 22
    FunctionCall        go to state 23
    FunctionDefStmt     go to state 24


State 185

   25 ForCondition: VARIABLE_T IDENT • ':' IDENT
   67 Declarator: IDENT •
   68           | IDENT • VAL_ASSIGN Assignable
   69           | IDENT • '[' Expression ']'
   70           | IDENT • '[' Expression ']' '[' Expression ']'
   72           | IDENT • '[' Expression ']' $@15 VAL_ASSIGN '{' ArrayEles '}'

    VAL_ASSIGN  shift, and go to state 99
    ':'         shift, and go to state 201
    '['         shift, and go to state 100

    $default  reduce using rule 67 (Declarator)


State 186

   45 AssignBody: IDENT '[' • @12 AssignList
  133 Primary: IDENT '[' • @19 List

    IDENT      reduce using rule 44 (@12)
    IDENT      [reduce using rule 132 (@19)]
    BOOL_LIT   reduce using rule 44 (@12)
    BOOL_LIT   [reduce using rule 132 (@19)]
    INT_LIT    reduce using rule 44 (@12)
    INT_LIT    [reduce using rule 132 (@19)]
    FLOAT_LIT  reduce using rule 44 (@12)
    FLOAT_LIT  [reduce using rule 132 (@19)]
    STR_LIT    reduce using rule 44 (@12)
    STR_LIT    [reduce using rule 132 (@19)]
    '('        reduce using rule 44 (@12)
    '('        [reduce using rule 132 (@19)]
    SUB        reduce using rule 44 (@12)
    SUB        [reduce using rule 132 (@19)]
    NOT        reduce using rule 44 (@12)
    NOT        [reduce using rule 132 (@19)]
    BNT        reduce using rule 44 (@12)
    BNT        [reduce using rule 132 (@19)]
    ADD        reduce using rule 44 (@12)
    ADD        [reduce using rule 132 (@19)]
    $default   reduce using rule 44 (@12)

    @12  go to state 107
    @19  go to state 139


State 187

   21 IterationStmt: FOR $@4 '(' ForCondition ')' • CompoundStmt

    COUT        shift, and go to state 4
    IF          shift, and go to state 5
    FOR         shift, and go to state 6
    WHILE       shift, and go to state 7
    RETURN      shift, and go to state 8
    BREAK       shift, and go to state 9
    '{'         shift, and go to state 202
    VARIABLE_T  shift, and go to state 10
    IDENT       shift, and go to state 11

    GlobalStmtList      go to state 203
    GlobalStmt          go to state 13
    FunctionCallStmt    go to state 14
    JumpStmt            go to state 15
    IterationStmt       go to state 16
    CompoundStmt        go to state 204
    SelectionStmt       go to state 17
    AssignStmt          go to state 18
    AssignBody          go to state 19
    DefineVariableStmt  go to state 20
    ReturnStmt          go to state 21
    CoutStmt            go to state 22
    FunctionCall        go to state 23
    FunctionDefStmt     go to state 24


State 188

   24 ForCondition: ExpressionStmt $@5 • ExpressionStmt $@6 ExpressionStmt

    ';'         shift, and go to state 130
    VARIABLE_T  shift, and go to state 205
    IDENT       shift, and go to state 132
    BOOL_LIT    shift, and go to state 31
    INT_LIT     shift, and go to state 32
    FLOAT_LIT   shift, and go to state 33
    STR_LIT     shift, and go to state 34
    '('         shift, and go to state 35
    SUB         shift, and go to state 36
    NOT         shift, and go to state 37
    BNT         shift, and go to state 38
    ADD         shift, and go to state 39

    ExpressionStmt      go to state 206
    AssignBody          go to state 135
    DefineVariableStmt  go to state 136
    Expression          go to state 137
    Or                  go to state 41
    And                 go to state 42
    BitwiseOr           go to state 43
    BitwiseXor          go to state 44
    BitwiseAnd          go to state 45
    Equality            go to state 46
    Relational          go to state 47
    Shift               go to state 48
    Additive            go to state 49
    Multiplicative      go to state 50
    TypeCast            go to state 51
    Unary               go to state 52
    Post                go to state 53
    Primary             go to state 54
    FunctionCall        go to state 55


State 189

   26 ExpressionStmt: Expression ';' •

    $default  reduce using rule 26 (ExpressionStmt)


State 190

   19 IterationStmt: WHILE $@2 '(' Expression ')' • $@3 CompoundStmt

    $default  reduce using rule 18 ($@3)

    $@3  go to state 207


State 191

  134 List: Expression • ']'
  135     | Expression • ']' '[' Expression ']'

    ']'  shift, and go to state 208


State 192

  133 Primary: IDENT '[' @19 List •

    $default  reduce using rule 133 (Primary)


State 193

  117 TypeCast: '(' VARIABLE_T ')' Unary •

    $default  reduce using rule 117 (TypeCast)


State 194

   69 Declarator: IDENT '[' Expression ']' •
   70           | IDENT '[' Expression ']' • '[' Expression ']'
   72           | IDENT '[' Expression ']' • $@15 VAL_ASSIGN '{' ArrayEles '}'

    '['  shift, and go to state 209

    VAL_ASSIGN  reduce using rule 71 ($@15)
    $default    reduce using rule 69 (Declarator)

    $@15  go to state 210


State 195

  143 FunctionDefStmt: VARIABLE_T IDENT $@20 '(' $@21 • FunctionParameterStmtList ')' $@22 '{' GlobalStmtList '}'

    VARIABLE_T  shift, and go to state 211

    $default  reduce using rule 146 (FunctionParameterStmtList)

    FunctionParameterStmtList  go to state 212
    FunctionParameterStmt      go to state 213


State 196

  139 ArgumentListNonEmpty: ArgumentListNonEmpty ',' Expression •

    $default  reduce using rule 139 (ArgumentListNonEmpty)


State 197

   47 AssignList: Expression ']' • $@13 Assign
   49           | Expression ']' • '[' Expression ']' $@14 Assign

    '['  shift, and go to state 214

    $default  reduce using rule 46 ($@13)

    $@13  go to state 215


State 198

   40 Selection: '{' $@9 • GlobalStmtList $@10 '}'

    COUT        shift, and go to state 4
    IF          shift, and go to state 5
    FOR         shift, and go to state 6
    WHILE       shift, and go to state 7
    RETURN      shift, and go to state 8
    BREAK       shift, and go to state 9
    VARIABLE_T  shift, and go to state 10
    IDENT       shift, and go to state 11

    GlobalStmtList      go to state 216
    GlobalStmt          go to state 13
    FunctionCallStmt    go to state 14
    JumpStmt            go to state 15
    IterationStmt       go to state 16
    SelectionStmt       go to state 17
    AssignStmt          go to state 18
    AssignBody          go to state 19
    DefineVariableStmt  go to state 20
    ReturnStmt          go to state 21
    CoutStmt            go to state 22
    FunctionCall        go to state 23
    FunctionDefStmt     go to state 24


State 199

   83 PrintableList: PrintableList SHL Printable •

    $default  reduce using rule 83 (PrintableList)


State 200

   34 SelectionStmt: IF '(' Expression ')' $@7 Selection •

    $default  reduce using rule 34 (SelectionStmt)


State 201

   25 ForCondition: VARIABLE_T IDENT ':' • IDENT

    IDENT  shift, and go to state 217


State 202

   31 CompoundStmt: '{' • GlobalStmtList '}'

    COUT        shift, and go to state 4
    IF          shift, and go to state 5
    FOR         shift, and go to state 6
    WHILE       shift, and go to state 7
    RETURN      shift, and go to state 8
    BREAK       shift, and go to state 9
    VARIABLE_T  shift, and go to state 10
    IDENT       shift, and go to state 11

    GlobalStmtList      go to state 218
    GlobalStmt          go to state 13
    FunctionCallStmt    go to state 14
    JumpStmt            go to state 15
    IterationStmt       go to state 16
    SelectionStmt       go to state 17
    AssignStmt          go to state 18
    AssignBody          go to state 19
    DefineVariableStmt  go to state 20
    ReturnStmt          go to state 21
    CoutStmt            go to state 22
    FunctionCall        go to state 23
    FunctionDefStmt     go to state 24


State 203

    4 GlobalStmtList: GlobalStmtList • GlobalStmt
   32 CompoundStmt: GlobalStmtList •

    COUT        shift, and go to state 4
    IF          shift, and go to state 5
    FOR         shift, and go to state 6
    WHILE       shift, and go to state 7
    RETURN      shift, and go to state 8
    BREAK       shift, and go to state 9
    VARIABLE_T  shift, and go to state 10
    IDENT       shift, and go to state 11

    COUT        [reduce using rule 32 (CompoundStmt)]
    IF          [reduce using rule 32 (CompoundStmt)]
    FOR         [reduce using rule 32 (CompoundStmt)]
    WHILE       [reduce using rule 32 (CompoundStmt)]
    RETURN      [reduce using rule 32 (CompoundStmt)]
    BREAK       [reduce using rule 32 (CompoundStmt)]
    VARIABLE_T  [reduce using rule 32 (CompoundStmt)]
    IDENT       [reduce using rule 32 (CompoundStmt)]
    $default    reduce using rule 32 (CompoundStmt)

    GlobalStmt          go to state 63
    FunctionCallStmt    go to state 14
    JumpStmt            go to state 15
    IterationStmt       go to state 16
    SelectionStmt       go to state 17
    AssignStmt          go to state 18
    AssignBody          go to state 19
    DefineVariableStmt  go to state 20
    ReturnStmt          go to state 21
    CoutStmt            go to state 22
    FunctionCall        go to state 23
    FunctionDefStmt     go to state 24


State 204

   21 IterationStmt: FOR $@4 '(' ForCondition ')' CompoundStmt •

    $default  reduce using rule 21 (IterationStmt)


State 205

   64 DefineVariableStmt: VARIABLE_T • DeclaratorList ';'

    IDENT  shift, and go to state 162

    DeclaratorList  go to state 58
    Declarator      go to state 59


State 206

   24 ForCondition: ExpressionStmt $@5 ExpressionStmt • $@6 ExpressionStmt

    $default  reduce using rule 23 ($@6)

    $@6  go to state 219


State 207

   19 IterationStmt: WHILE $@2 '(' Expression ')' $@3 • CompoundStmt

    COUT        shift, and go to state 4
    IF          shift, and go to state 5
    FOR         shift, and go to state 6
    WHILE       shift, and go to state 7
    RETURN      shift, and go to state 8
    BREAK       shift, and go to state 9
    '{'         shift, and go to state 202
    VARIABLE_T  shift, and go to state 10
    IDENT       shift, and go to state 11

    GlobalStmtList      go to state 203
    GlobalStmt          go to state 13
    FunctionCallStmt    go to state 14
    JumpStmt            go to state 15
    IterationStmt       go to state 16
    CompoundStmt        go to state 220
    SelectionStmt       go to state 17
    AssignStmt          go to state 18
    AssignBody          go to state 19
    DefineVariableStmt  go to state 20
    ReturnStmt          go to state 21
    CoutStmt            go to state 22
    FunctionCall        go to state 23
    FunctionDefStmt     go to state 24


State 208

  134 List: Expression ']' •
  135     | Expression ']' • '[' Expression ']'

    '['  shift, and go to state 221

    $default  reduce using rule 134 (List)


State 209

   70 Declarator: IDENT '[' Expression ']' '[' • Expression ']'

    IDENT      shift, and go to state 30
    BOOL_LIT   shift, and go to state 31
    INT_LIT    shift, and go to state 32
    FLOAT_LIT  shift, and go to state 33
    STR_LIT    shift, and go to state 34
    '('        shift, and go to state 35
    SUB        shift, and go to state 36
    NOT        shift, and go to state 37
    BNT        shift, and go to state 38
    ADD        shift, and go to state 39

    Expression      go to state 222
    Or              go to state 41
    And             go to state 42
    BitwiseOr       go to state 43
    BitwiseXor      go to state 44
    BitwiseAnd      go to state 45
    Equality        go to state 46
    Relational      go to state 47
    Shift           go to state 48
    Additive        go to state 49
    Multiplicative  go to state 50
    TypeCast        go to state 51
    Unary           go to state 52
    Post            go to state 53
    Primary         go to state 54
    FunctionCall    go to state 55


State 210

   72 Declarator: IDENT '[' Expression ']' $@15 • VAL_ASSIGN '{' ArrayEles '}'

    VAL_ASSIGN  shift, and go to state 223


State 211

  147 FunctionParameterStmt: VARIABLE_T • IDENT
  149                      | VARIABLE_T • IDENT $@23 '[' ']'

    IDENT  shift, and go to state 224


State 212

  143 FunctionDefStmt: VARIABLE_T IDENT $@20 '(' $@21 FunctionParameterStmtList • ')' $@22 '{' GlobalStmtList '}'
  144 FunctionParameterStmtList: FunctionParameterStmtList • ',' FunctionParameterStmt

    ')'  shift, and go to state 225
    ','  shift, and go to state 226


State 213

  145 FunctionParameterStmtList: FunctionParameterStmt •

    $default  reduce using rule 145 (FunctionParameterStmtList)


State 214

   49 AssignList: Expression ']' '[' • Expression ']' $@14 Assign

    IDENT      shift, and go to state 30
    BOOL_LIT   shift, and go to state 31
    INT_LIT    shift, and go to state 32
    FLOAT_LIT  shift, and go to state 33
    STR_LIT    shift, and go to state 34
    '('        shift, and go to state 35
    SUB        shift, and go to state 36
    NOT        shift, and go to state 37
    BNT        shift, and go to state 38
    ADD        shift, and go to state 39

    Expression      go to state 227
    Or              go to state 41
    And             go to state 42
    BitwiseOr       go to state 43
    BitwiseXor      go to state 44
    BitwiseAnd      go to state 45
    Equality        go to state 46
    Relational      go to state 47
    Shift           go to state 48
    Additive        go to state 49
    Multiplicative  go to state 50
    TypeCast        go to state 51
    Unary           go to state 52
    Post            go to state 53
    Primary         go to state 54
    FunctionCall    go to state 55


State 215

   47 AssignList: Expression ']' $@13 • Assign

    VAL_ASSIGN  shift, and go to state 108
    ADD_ASSIGN  shift, and go to state 109
    SUB_ASSIGN  shift, and go to state 110
    MUL_ASSIGN  shift, and go to state 111
    DIV_ASSIGN  shift, and go to state 112
    REM_ASSIGN  shift, and go to state 113
    BAN_ASSIGN  shift, and go to state 114
    BOR_ASSIGN  shift, and go to state 115
    BXO_ASSIGN  shift, and go to state 116
    SHR_ASSIGN  shift, and go to state 117
    SHL_ASSIGN  shift, and go to state 118
    IDENT       shift, and go to state 30
    BOOL_LIT    shift, and go to state 31
    INT_LIT     shift, and go to state 32
    FLOAT_LIT   shift, and go to state 33
    STR_LIT     shift, and go to state 119
    '('         shift, and go to state 35
    SUB         shift, and go to state 36
    NOT         shift, and go to state 37
    BNT         shift, and go to state 38
    ADD         shift, and go to state 39

    Assign          go to state 228
    Assignable      go to state 121
    Expression      go to state 122
    Or              go to state 41
    And             go to state 42
    BitwiseOr       go to state 43
    BitwiseXor      go to state 44
    BitwiseAnd      go to state 45
    Equality        go to state 46
    Relational      go to state 47
    Shift           go to state 48
    Additive        go to state 49
    Multiplicative  go to state 50
    TypeCast        go to state 51
    Unary           go to state 52
    Post            go to state 53
    Primary         go to state 54
    FunctionCall    go to state 55


State 216

    4 GlobalStmtList: GlobalStmtList • GlobalStmt
   40 Selection: '{' $@9 GlobalStmtList • $@10 '}'

    COUT        shift, and go to state 4
    IF          shift, and go to state 5
    FOR         shift, and go to state 6
    WHILE       shift, and go to state 7
    RETURN      shift, and go to state 8
    BREAK       shift, and go to state 9
    VARIABLE_T  shift, and go to state 10
    IDENT       shift, and go to state 11

    $default  reduce using rule 39 ($@10)

    GlobalStmt          go to state 63
    FunctionCallStmt    go to state 14
    JumpStmt            go to state 15
    IterationStmt       go to state 16
    SelectionStmt       go to state 17
    $@10                go to state 229
    AssignStmt          go to state 18
    AssignBody          go to state 19
    DefineVariableStmt  go to state 20
    ReturnStmt          go to state 21
    CoutStmt            go to state 22
    FunctionCall        go to state 23
    FunctionDefStmt     go to state 24


State 217

   25 ForCondition: VARIABLE_T IDENT ':' IDENT •

    $default  reduce using rule 25 (ForCondition)


State 218

    4 GlobalStmtList: GlobalStmtList • GlobalStmt
   31 CompoundStmt: '{' GlobalStmtList • '}'

    COUT        shift, and go to state 4
    IF          shift, and go to state 5
    FOR         shift, and go to state 6
    WHILE       shift, and go to state 7
    RETURN      shift, and go to state 8
    BREAK       shift, and go to state 9
    '}'         shift, and go to state 230
    VARIABLE_T  shift, and go to state 10
    IDENT       shift, and go to state 11

    GlobalStmt          go to state 63
    FunctionCallStmt    go to state 14
    JumpStmt            go to state 15
    IterationStmt       go to state 16
    SelectionStmt       go to state 17
    AssignStmt          go to state 18
    AssignBody          go to state 19
    DefineVariableStmt  go to state 20
    ReturnStmt          go to state 21
    CoutStmt            go to state 22
    FunctionCall        go to state 23
    FunctionDefStmt     go to state 24


State 219

   24 ForCondition: ExpressionStmt $@5 ExpressionStmt $@6 • ExpressionStmt

    ';'         shift, and go to state 130
    VARIABLE_T  shift, and go to state 205
    IDENT       shift, and go to state 132
    BOOL_LIT    shift, and go to state 31
    INT_LIT     shift, and go to state 32
    FLOAT_LIT   shift, and go to state 33
    STR_LIT     shift, and go to state 34
    '('         shift, and go to state 35
    SUB         shift, and go to state 36
    NOT         shift, and go to state 37
    BNT         shift, and go to state 38
    ADD         shift, and go to state 39

    ExpressionStmt      go to state 231
    AssignBody          go to state 135
    DefineVariableStmt  go to state 136
    Expression          go to state 137
    Or                  go to state 41
    And                 go to state 42
    BitwiseOr           go to state 43
    BitwiseXor          go to state 44
    BitwiseAnd          go to state 45
    Equality            go to state 46
    Relational          go to state 47
    Shift               go to state 48
    Additive            go to state 49
    Multiplicative      go to state 50
    TypeCast            go to state 51
    Unary               go to state 52
    Post                go to state 53
    Primary             go to state 54
    FunctionCall        go to state 55


State 220

   19 IterationStmt: WHILE $@2 '(' Expression ')' $@3 CompoundStmt •

    $default  reduce using rule 19 (IterationStmt)


State 221

  135 List: Expression ']' '[' • Expression ']'

    IDENT      shift, and go to state 30
    BOOL_LIT   shift, and go to state 31
    INT_LIT    shift, and go to state 32
    FLOAT_LIT  shift, and go to state 33
    STR_LIT    shift, and go to state 34
    '('        shift, and go to state 35
    SUB        shift, and go to state 36
    NOT        shift, and go to state 37
    BNT        shift, and go to state 38
    ADD        shift, and go to state 39

    Expression      go to state 232
    Or              go to state 41
    And             go to state 42
    BitwiseOr       go to state 43
    BitwiseXor      go to state 44
    BitwiseAnd      go to state 45
    Equality        go to state 46
    Relational      go to state 47
    Shift           go to state 48
    Additive        go to state 49
    Multiplicative  go to state 50
    TypeCast        go to state 51
    Unary           go to state 52
    Post            go to state 53
    Primary         go to state 54
    FunctionCall    go to state 55


State 222

   70 Declarator: IDENT '[' Expression ']' '[' Expression • ']'

    ']'  shift, and go to state 233


State 223

   72 Declarator: IDENT '[' Expression ']' $@15 VAL_ASSIGN • '{' ArrayEles '}'

    '{'  shift, and go to state 234


State 224

  147 FunctionParameterStmt: VARIABLE_T IDENT •
  149                      | VARIABLE_T IDENT • $@23 '[' ']'

    '['       reduce using rule 148 ($@23)
    $default  reduce using rule 147 (FunctionParameterStmt)

    $@23  go to state 235


State 225

  143 FunctionDefStmt: VARIABLE_T IDENT $@20 '(' $@21 FunctionParameterStmtList ')' • $@22 '{' GlobalStmtList '}'

    $default  reduce using rule 142 ($@22)

    $@22  go to state 236


State 226

  144 FunctionParameterStmtList: FunctionParameterStmtList ',' • FunctionParameterStmt

    VARIABLE_T  shift, and go to state 211

    FunctionParameterStmt  go to state 237


State 227

   49 AssignList: Expression ']' '[' Expression • ']' $@14 Assign

    ']'  shift, and go to state 238


State 228

   47 AssignList: Expression ']' $@13 Assign •

    $default  reduce using rule 47 (AssignList)


State 229

   40 Selection: '{' $@9 GlobalStmtList $@10 • '}'

    '}'  shift, and go to state 239


State 230

   31 CompoundStmt: '{' GlobalStmtList '}' •

    $default  reduce using rule 31 (CompoundStmt)


State 231

   24 ForCondition: ExpressionStmt $@5 ExpressionStmt $@6 ExpressionStmt •

    $default  reduce using rule 24 (ForCondition)


State 232

  135 List: Expression ']' '[' Expression • ']'

    ']'  shift, and go to state 240


State 233

   70 Declarator: IDENT '[' Expression ']' '[' Expression ']' •

    $default  reduce using rule 70 (Declarator)


State 234

   72 Declarator: IDENT '[' Expression ']' $@15 VAL_ASSIGN '{' • ArrayEles '}'

    '}'       reduce using rule 77 (ArrayEles)
    ','       reduce using rule 77 (ArrayEles)
    $default  reduce using rule 73 (@16)

    ArrayEles  go to state 241
    @16        go to state 242


State 235

  149 FunctionParameterStmt: VARIABLE_T IDENT $@23 • '[' ']'

    '['  shift, and go to state 243


State 236

  143 FunctionDefStmt: VARIABLE_T IDENT $@20 '(' $@21 FunctionParameterStmtList ')' $@22 • '{' GlobalStmtList '}'

    '{'  shift, and go to state 244


State 237

  144 FunctionParameterStmtList: FunctionParameterStmtList ',' FunctionParameterStmt •

    $default  reduce using rule 144 (FunctionParameterStmtList)


State 238

   49 AssignList: Expression ']' '[' Expression ']' • $@14 Assign

    $default  reduce using rule 48 ($@14)

    $@14  go to state 245


State 239

   40 Selection: '{' $@9 GlobalStmtList $@10 '}' •

    $default  reduce using rule 40 (Selection)


State 240

  135 List: Expression ']' '[' Expression ']' •

    $default  reduce using rule 135 (List)


State 241

   72 Declarator: IDENT '[' Expression ']' $@15 VAL_ASSIGN '{' ArrayEles • '}'
   76 ArrayEles: ArrayEles • ',' @17 Assignable

    '}'  shift, and go to state 246
    ','  shift, and go to state 247


State 242

   74 ArrayEles: @16 • Assignable

    IDENT      shift, and go to state 30
    BOOL_LIT   shift, and go to state 31
    INT_LIT    shift, and go to state 32
    FLOAT_LIT  shift, and go to state 33
    STR_LIT    shift, and go to state 119
    '('        shift, and go to state 35
    SUB        shift, and go to state 36
    NOT        shift, and go to state 37
    BNT        shift, and go to state 38
    ADD        shift, and go to state 39

    Assignable      go to state 248
    Expression      go to state 122
    Or              go to state 41
    And             go to state 42
    BitwiseOr       go to state 43
    BitwiseXor      go to state 44
    BitwiseAnd      go to state 45
    Equality        go to state 46
    Relational      go to state 47
    Shift           go to state 48
    Additive        go to state 49
    Multiplicative  go to state 50
    TypeCast        go to state 51
    Unary           go to state 52
    Post            go to state 53
    Primary         go to state 54
    FunctionCall    go to state 55


State 243

  149 FunctionParameterStmt: VARIABLE_T IDENT $@23 '[' • ']'

    ']'  shift, and go to state 249


State 244

  143 FunctionDefStmt: VARIABLE_T IDENT $@20 '(' $@21 FunctionParameterStmtList ')' $@22 '{' • GlobalStmtList '}'

    COUT        shift, and go to state 4
    IF          shift, and go to state 5
    FOR         shift, and go to state 6
    WHILE       shift, and go to state 7
    RETURN      shift, and go to state 8
    BREAK       shift, and go to state 9
    VARIABLE_T  shift, and go to state 10
    IDENT       shift, and go to state 11

    GlobalStmtList      go to state 250
    GlobalStmt          go to state 13
    FunctionCallStmt    go to state 14
    JumpStmt            go to state 15
    IterationStmt       go to state 16
    SelectionStmt       go to state 17
    AssignStmt          go to state 18
    AssignBody          go to state 19
    DefineVariableStmt  go to state 20
    ReturnStmt          go to state 21
    CoutStmt            go to state 22
    FunctionCall        go to state 23
    FunctionDefStmt     go to state 24


State 245

   49 AssignList: Expression ']' '[' Expression ']' $@14 • Assign

    VAL_ASSIGN  shift, and go to state 108
    ADD_ASSIGN  shift, and go to state 109
    SUB_ASSIGN  shift, and go to state 110
    MUL_ASSIGN  shift, and go to state 111
    DIV_ASSIGN  shift, and go to state 112
    REM_ASSIGN  shift, and go to state 113
    BAN_ASSIGN  shift, and go to state 114
    BOR_ASSIGN  shift, and go to state 115
    BXO_ASSIGN  shift, and go to state 116
    SHR_ASSIGN  shift, and go to state 117
    SHL_ASSIGN  shift, and go to state 118
    IDENT       shift, and go to state 30
    BOOL_LIT    shift, and go to state 31
    INT_LIT     shift, and go to state 32
    FLOAT_LIT   shift, and go to state 33
    STR_LIT     shift, and go to state 119
    '('         shift, and go to state 35
    SUB         shift, and go to state 36
    NOT         shift, and go to state 37
    BNT         shift, and go to state 38
    ADD         shift, and go to state 39

    Assign          go to state 251
    Assignable      go to state 121
    Expression      go to state 122
    Or              go to state 41
    And             go to state 42
    BitwiseOr       go to state 43
    BitwiseXor      go to state 44
    BitwiseAnd      go to state 45
    Equality        go to state 46
    Relational      go to state 47
    Shift           go to state 48
    Additive        go to state 49
    Multiplicative  go to state 50
    TypeCast        go to state 51
    Unary           go to state 52
    Post            go to state 53
    Primary         go to state 54
    FunctionCall    go to state 55


State 246

   72 Declarator: IDENT '[' Expression ']' $@15 VAL_ASSIGN '{' ArrayEles '}' •

    $default  reduce using rule 72 (Declarator)


State 247

   76 ArrayEles: ArrayEles ',' • @17 Assignable

    $default  reduce using rule 75 (@17)

    @17  go to state 252


State 248

   74 ArrayEles: @16 Assignable •

    $default  reduce using rule 74 (ArrayEles)


State 249

  149 FunctionParameterStmt: VARIABLE_T IDENT $@23 '[' ']' •

    $default  reduce using rule 149 (FunctionParameterStmt)


State 250

    4 GlobalStmtList: GlobalStmtList • GlobalStmt
  143 FunctionDefStmt: VARIABLE_T IDENT $@20 '(' $@21 FunctionParameterStmtList ')' $@22 '{' GlobalStmtList • '}'

    COUT        shift, and go to state 4
    IF          shift, and go to state 5
    FOR         shift, and go to state 6
    WHILE       shift, and go to state 7
    RETURN      shift, and go to state 8
    BREAK       shift, and go to state 9
    '}'         shift, and go to state 253
    VARIABLE_T  shift, and go to state 10
    IDENT       shift, and go to state 11

    GlobalStmt          go to state 63
    FunctionCallStmt    go to state 14
    JumpStmt            go to state 15
    IterationStmt       go to state 16
    SelectionStmt       go to state 17
    AssignStmt          go to state 18
    AssignBody          go to state 19
    DefineVariableStmt  go to state 20
    ReturnStmt          go to state 21
    CoutStmt            go to state 22
    FunctionCall        go to state 23
    FunctionDefStmt     go to state 24


State 251

   49 AssignList: Expression ']' '[' Expression ']' $@14 Assign •

    $default  reduce using rule 49 (AssignList)


State 252

   76 ArrayEles: ArrayEles ',' @17 • Assignable

    IDENT      shift, and go to state 30
    BOOL_LIT   shift, and go to state 31
    INT_LIT    shift, and go to state 32
    FLOAT_LIT  shift, and go to state 33
    STR_LIT    shift, and go to state 119
    '('        shift, and go to state 35
    SUB        shift, and go to state 36
    NOT        shift, and go to state 37
    BNT        shift, and go to state 38
    ADD        shift, and go to state 39

    Assignable      go to state 254
    Expression      go to state 122
    Or              go to state 41
    And             go to state 42
    BitwiseOr       go to state 43
    BitwiseXor      go to state 44
    BitwiseAnd      go to state 45
    Equality        go to state 46
    Relational      go to state 47
    Shift           go to state 48
    Additive        go to state 49
    Multiplicative  go to state 50
    TypeCast        go to state 51
    Unary           go to state 52
    Post            go to state 53
    Primary         go to state 54
    FunctionCall    go to state 55


State 253

  143 FunctionDefStmt: VARIABLE_T IDENT $@20 '(' $@21 FunctionParameterStmtList ')' $@22 '{' GlobalStmtList '}' •

    $default  reduce using rule 143 (FunctionDefStmt)


State 254

   76 ArrayEles: ArrayEles ',' @17 Assignable •

    $default  reduce using rule 76 (ArrayEles)
