Terminals unused in grammar

    CONTINUE


State 11 conflicts: 1 shift/reduce
State 17 conflicts: 1 shift/reduce
State 30 conflicts: 1 shift/reduce
State 49 conflicts: 2 shift/reduce
State 119 conflicts: 15 reduce/reduce
State 125 conflicts: 2 reduce/reduce
State 132 conflicts: 1 shift/reduce, 10 reduce/reduce
State 137 conflicts: 1 shift/reduce
State 153 conflicts: 2 shift/reduce
State 203 conflicts: 8 shift/reduce
State 218 conflicts: 10 reduce/reduce
State 248 conflicts: 10 reduce/reduce


Grammar

    0 $accept: Program $end

    1 $@1: ε

    2 Program: $@1 GlobalStmtList
    3        | ε

    4 GlobalStmtList: GlobalStmtList GlobalStmt
    5               | GlobalStmt

    6 GlobalStmt: DefineVariableStmt
    7           | FunctionDefStmt
    8           | CoutStmt
    9           | ReturnStmt
   10           | AssignStmt
   11           | SelectionStmt
   12           | IterationStmt
   13           | JumpStmt
   14           | FunctionCallStmt

   15 FunctionCallStmt: FunctionCall ';'

   16 JumpStmt: BREAK ';'

   17 $@2: ε

   18 $@3: ε

   19 IterationStmt: WHILE $@2 '(' Expression ')' $@3 CompoundStmt

   20 $@4: ε

   21 IterationStmt: FOR $@4 '(' ForCondition ')' CompoundStmt

   22 $@5: ε

   23 $@6: ε

   24 ForCondition: ExpressionStmt $@5 ExpressionStmt $@6 ExpressionStmt
   25             | VARIABLE_T IDENT ':' IDENT

   26 ExpressionStmt: Expression ';'
   27               | DefineVariableStmt
   28               | AssignBody
   29               | Expression
   30               | ';'

   31 CompoundStmt: '{' GlobalStmtList '}'
   32             | GlobalStmtList

   33 $@7: ε

   34 SelectionStmt: IF '(' Expression ')' $@7 Selection

   35 $@8: ε

   36 SelectionStmt: SelectionStmt ELSE $@8 Selection

   37 Selection: GlobalStmt

   38 $@9: ε

   39 $@10: ε

   40 Selection: '{' $@9 GlobalStmtList $@10 '}'

   41 AssignStmt: AssignBody ';'

   42 $@11: ε

   43 AssignBody: IDENT $@11 Assign

   44 $@12: ε

   45 AssignBody: IDENT '[' Expression ']' $@12 Assign

   46 $@13: ε

   47 AssignBody: IDENT '[' Expression ']' '[' Expression ']' $@13 Assign

   48 Assign: Assignable
   49       | VAL_ASSIGN Assign
   50       | ADD_ASSIGN Assign
   51       | SUB_ASSIGN Assign
   52       | MUL_ASSIGN Assign
   53       | DIV_ASSIGN Assign
   54       | REM_ASSIGN Assign
   55       | BAN_ASSIGN Assign
   56       | BOR_ASSIGN Assign
   57       | BXO_ASSIGN Assign
   58       | SHR_ASSIGN Assign
   59       | SHL_ASSIGN Assign

   60 Assignable: STR_LIT
   61           | Expression

   62 DefineVariableStmt: VARIABLE_T DeclaratorList ';'

   63 DeclaratorList: Declarator
   64               | DeclaratorList ',' Declarator

   65 Declarator: IDENT
   66           | IDENT VAL_ASSIGN Assignable
   67           | IDENT '[' Expression ']'
   68           | IDENT '[' Expression ']' '[' Expression ']'
   69           | IDENT '[' Expression ']' VAL_ASSIGN '{' ArrayEles '}'

   70 ArrayEles: Assignable
   71          | ArrayEles ',' Assignable
   72          | ε

   73 ReturnStmt: RETURN Expression ';'
   74           | RETURN ';'

   75 $@14: ε

   76 CoutStmt: COUT $@14 SHL PrintableList ';'

   77 PrintableList: Printable
   78              | PrintableList SHL Printable

   79 Printable: STR_LIT
   80          | ENDL
   81          | Expression

   82 Expression: Or
   83           | STR_LIT

   84 Or: And
   85   | Or LOR And

   86 And: BitwiseOr
   87    | And LAN BitwiseOr

   88 BitwiseOr: BitwiseXor
   89          | BitwiseOr BOR BitwiseXor

   90 BitwiseXor: BitwiseAnd
   91           | BitwiseXor BXO BitwiseAnd

   92 BitwiseAnd: Equality
   93           | BitwiseAnd BAN Equality

   94 Equality: Relational
   95         | Equality EQL Relational
   96         | Equality NEQ Relational

   97 Relational: Shift
   98           | Relational LES Shift
   99           | Relational GTR Shift
  100           | Relational LEQ Shift
  101           | Relational GEQ Shift

  102 Shift: Additive
  103      | Shift SHR Additive

  104 Additive: Multiplicative
  105         | Additive ADD Multiplicative
  106         | Additive SUB Multiplicative

  107 Multiplicative: TypeCast
  108               | Multiplicative MUL TypeCast
  109               | Multiplicative DIV TypeCast
  110               | Multiplicative REM TypeCast

  111 TypeCast: Unary
  112         | '(' VARIABLE_T ')' Unary

  113 Unary: BNT Unary
  114      | ADD Unary
  115      | SUB Unary
  116      | NOT Unary
  117      | Post

  118 Post: Primary
  119     | Primary INC_ASSIGN
  120     | Primary DEC_ASSIGN

  121 Primary: INT_LIT
  122        | FLOAT_LIT
  123        | '(' Expression ')'
  124        | BOOL_LIT
  125        | IDENT
  126        | FunctionCall
  127        | IDENT '[' Expression ']'
  128        | IDENT '[' Expression ']' '[' Expression ']'

  129 FunctionCall: IDENT '(' ArgumentList ')'

  130 ArgumentList: ArgumentListNonEmpty

  131 ArgumentListNonEmpty: Expression
  132                     | ArgumentListNonEmpty ',' Expression

  133 $@15: ε

  134 $@16: ε

  135 $@17: ε

  136 FunctionDefStmt: VARIABLE_T IDENT $@15 '(' $@16 FunctionParameterStmtList ')' $@17 '{' GlobalStmtList '}'

  137 FunctionParameterStmtList: FunctionParameterStmtList ',' FunctionParameterStmt
  138                          | FunctionParameterStmt
  139                          | ε

  140 FunctionParameterStmt: VARIABLE_T IDENT

  141 $@18: ε

  142 FunctionParameterStmt: VARIABLE_T IDENT $@18 '[' ']'


Terminals, with rules where they appear

    $end (0) 0
    '(' <object_val> (40) 19 21 34 112 123 129 136
    ')' (41) 19 21 34 112 123 129 136
    ',' (44) 64 71 132 137
    ':' (58) 25
    ';' (59) 15 16 26 30 41 62 73 74 76
    '[' (91) 45 47 67 68 69 127 128 142
    ']' (93) 45 47 67 68 69 127 128 142
    '{' (123) 31 40 69 136
    '}' (125) 31 40 69 136
    error (256)
    COUT (258) 76
    SHR (259) 103
    SHL (260) 76 78
    BAN (261) 93
    BOR (262) 89
    BXO (263) 91
    MUL (264) 108
    DIV (265) 109
    REM (266) 110
    GTR (267) 99
    LES (268) 98
    GEQ (269) 101
    LEQ (270) 100
    EQL (271) 95
    NEQ (272) 96
    LAN (273) 87
    LOR (274) 85
    VAL_ASSIGN (275) 49 66 69
    ADD_ASSIGN (276) 50
    SUB_ASSIGN (277) 51
    MUL_ASSIGN (278) 52
    DIV_ASSIGN (279) 53
    REM_ASSIGN (280) 54
    BAN_ASSIGN (281) 55
    BOR_ASSIGN (282) 56
    BXO_ASSIGN (283) 57
    SHR_ASSIGN (284) 58
    SHL_ASSIGN (285) 59
    INC_ASSIGN (286) 119
    DEC_ASSIGN (287) 120
    IF (288) 34
    ELSE (289) 36
    FOR (290) 21
    WHILE (291) 19
    RETURN (292) 73 74
    BREAK (293) 16
    CONTINUE (294)
    ENDL (295) 80
    VARIABLE_T <var_type> (296) 25 62 112 136 140 142
    IDENT <s_val> (297) 25 43 45 47 65 66 67 68 69 125 127 128 129 136 140 142
    BOOL_LIT <b_var> (298) 124
    INT_LIT <i_var> (299) 121
    FLOAT_LIT <f_var> (300) 122
    STR_LIT <s_var> (301) 60 79 83
    SUB <object_val> (302) 106 115
    NOT <object_val> (303) 116
    BNT <object_val> (304) 113
    ADD <object_val> (305) 105 114


Nonterminals, with rules where they appear

    $accept (60)
        on left: 0
    Program (61)
        on left: 2 3
        on right: 0
    $@1 (62)
        on left: 1
        on right: 2
    GlobalStmtList (63)
        on left: 4 5
        on right: 2 4 31 32 40 136
    GlobalStmt (64)
        on left: 6 7 8 9 10 11 12 13 14
        on right: 4 5 37
    FunctionCallStmt (65)
        on left: 15
        on right: 14
    JumpStmt (66)
        on left: 16
        on right: 13
    IterationStmt (67)
        on left: 19 21
        on right: 12
    $@2 (68)
        on left: 17
        on right: 19
    $@3 (69)
        on left: 18
        on right: 19
    $@4 (70)
        on left: 20
        on right: 21
    ForCondition (71)
        on left: 24 25
        on right: 21
    $@5 (72)
        on left: 22
        on right: 24
    $@6 (73)
        on left: 23
        on right: 24
    ExpressionStmt (74)
        on left: 26 27 28 29 30
        on right: 24
    CompoundStmt (75)
        on left: 31 32
        on right: 19 21
    SelectionStmt (76)
        on left: 34 36
        on right: 11 36
    $@7 (77)
        on left: 33
        on right: 34
    $@8 (78)
        on left: 35
        on right: 36
    Selection (79)
        on left: 37 40
        on right: 34 36
    $@9 (80)
        on left: 38
        on right: 40
    $@10 (81)
        on left: 39
        on right: 40
    AssignStmt (82)
        on left: 41
        on right: 10
    AssignBody <object_val> (83)
        on left: 43 45 47
        on right: 28 41
    $@11 (84)
        on left: 42
        on right: 43
    $@12 (85)
        on left: 44
        on right: 45
    $@13 (86)
        on left: 46
        on right: 47
    Assign (87)
        on left: 48 49 50 51 52 53 54 55 56 57 58 59
        on right: 43 45 47 49 50 51 52 53 54 55 56 57 58 59
    Assignable <object_val> (88)
        on left: 60 61
        on right: 48 66 70 71
    DefineVariableStmt (89)
        on left: 62
        on right: 6 27
    DeclaratorList (90)
        on left: 63 64
        on right: 62 64
    Declarator (91)
        on left: 65 66 67 68 69
        on right: 63 64
    ArrayEles (92)
        on left: 70 71 72
        on right: 69 71
    ReturnStmt (93)
        on left: 73 74
        on right: 9
    CoutStmt (94)
        on left: 76
        on right: 8
    $@14 (95)
        on left: 75
        on right: 76
    PrintableList <object_val> (96)
        on left: 77 78
        on right: 76 78
    Printable <object_val> (97)
        on left: 79 80 81
        on right: 77 78
    Expression <object_val> (98)
        on left: 82 83
        on right: 19 26 29 34 45 47 61 67 68 69 73 81 123 127 128 131 132
    Or <object_val> (99)
        on left: 84 85
        on right: 82 85
    And <object_val> (100)
        on left: 86 87
        on right: 84 85 87
    BitwiseOr <object_val> (101)
        on left: 88 89
        on right: 86 87 89
    BitwiseXor <object_val> (102)
        on left: 90 91
        on right: 88 89 91
    BitwiseAnd <object_val> (103)
        on left: 92 93
        on right: 90 91 93
    Equality <object_val> (104)
        on left: 94 95 96
        on right: 92 93 95 96
    Relational <object_val> (105)
        on left: 97 98 99 100 101
        on right: 94 95 96 98 99 100 101
    Shift <object_val> (106)
        on left: 102 103
        on right: 97 98 99 100 101 103
    Additive <object_val> (107)
        on left: 104 105 106
        on right: 102 103 105 106
    Multiplicative <object_val> (108)
        on left: 107 108 109 110
        on right: 104 105 106 108 109 110
    TypeCast <object_val> (109)
        on left: 111 112
        on right: 107 108 109 110
    Unary <object_val> (110)
        on left: 113 114 115 116 117
        on right: 111 112 113 114 115 116
    Post <object_val> (111)
        on left: 118 119 120
        on right: 117
    Primary <object_val> (112)
        on left: 121 122 123 124 125 126 127 128
        on right: 118 119 120
    FunctionCall <object_val> (113)
        on left: 129
        on right: 15 126
    ArgumentList <object_val> (114)
        on left: 130
        on right: 129
    ArgumentListNonEmpty <object_val> (115)
        on left: 131 132
        on right: 130 132
    FunctionDefStmt (116)
        on left: 136
        on right: 7
    $@15 (117)
        on left: 133
        on right: 136
    $@16 (118)
        on left: 134
        on right: 136
    $@17 (119)
        on left: 135
        on right: 136
    FunctionParameterStmtList (120)
        on left: 137 138 139
        on right: 136 137
    FunctionParameterStmt (121)
        on left: 140 142
        on right: 137 138
    $@18 (122)
        on left: 141
        on right: 142


State 0

    0 $accept: • Program $end

    $end      reduce using rule 3 (Program)
    $default  reduce using rule 1 ($@1)

    Program  go to state 1
    $@1      go to state 2


State 1

    0 $accept: Program • $end

    $end  shift, and go to state 3


State 2

    2 Program: $@1 • GlobalStmtList

    COUT        shift, and go to state 4
    IF          shift, and go to state 5
    FOR         shift, and go to state 6
    WHILE       shift, and go to state 7
    RETURN      shift, and go to state 8
    BREAK       shift, and go to state 9
    VARIABLE_T  shift, and go to state 10
    IDENT       shift, and go to state 11

    GlobalStmtList      go to state 12
    GlobalStmt          go to state 13
    FunctionCallStmt    go to state 14
    JumpStmt            go to state 15
    IterationStmt       go to state 16
    SelectionStmt       go to state 17
    AssignStmt          go to state 18
    AssignBody          go to state 19
    DefineVariableStmt  go to state 20
    ReturnStmt          go to state 21
    CoutStmt            go to state 22
    FunctionCall        go to state 23
    FunctionDefStmt     go to state 24


State 3

    0 $accept: Program $end •

    $default  accept


State 4

   76 CoutStmt: COUT • $@14 SHL PrintableList ';'

    $default  reduce using rule 75 ($@14)

    $@14  go to state 25


State 5

   34 SelectionStmt: IF • '(' Expression ')' $@7 Selection

    '('  shift, and go to state 26


State 6

   21 IterationStmt: FOR • $@4 '(' ForCondition ')' CompoundStmt

    $default  reduce using rule 20 ($@4)

    $@4  go to state 27


State 7

   19 IterationStmt: WHILE • $@2 '(' Expression ')' $@3 CompoundStmt

    $default  reduce using rule 17 ($@2)

    $@2  go to state 28


State 8

   73 ReturnStmt: RETURN • Expression ';'
   74           | RETURN • ';'

    ';'        shift, and go to state 29
    IDENT      shift, and go to state 30
    BOOL_LIT   shift, and go to state 31
    INT_LIT    shift, and go to state 32
    FLOAT_LIT  shift, and go to state 33
    STR_LIT    shift, and go to state 34
    '('        shift, and go to state 35
    SUB        shift, and go to state 36
    NOT        shift, and go to state 37
    BNT        shift, and go to state 38
    ADD        shift, and go to state 39

    Expression      go to state 40
    Or              go to state 41
    And             go to state 42
    BitwiseOr       go to state 43
    BitwiseXor      go to state 44
    BitwiseAnd      go to state 45
    Equality        go to state 46
    Relational      go to state 47
    Shift           go to state 48
    Additive        go to state 49
    Multiplicative  go to state 50
    TypeCast        go to state 51
    Unary           go to state 52
    Post            go to state 53
    Primary         go to state 54
    FunctionCall    go to state 55


State 9

   16 JumpStmt: BREAK • ';'

    ';'  shift, and go to state 56


State 10

   62 DefineVariableStmt: VARIABLE_T • DeclaratorList ';'
  136 FunctionDefStmt: VARIABLE_T • IDENT $@15 '(' $@16 FunctionParameterStmtList ')' $@17 '{' GlobalStmtList '}'

    IDENT  shift, and go to state 57

    DeclaratorList  go to state 58
    Declarator      go to state 59


State 11

   43 AssignBody: IDENT • $@11 Assign
   45           | IDENT • '[' Expression ']' $@12 Assign
   47           | IDENT • '[' Expression ']' '[' Expression ']' $@13 Assign
  129 FunctionCall: IDENT • '(' ArgumentList ')'

    '('  shift, and go to state 60
    '['  shift, and go to state 61

    '('       [reduce using rule 42 ($@11)]
    $default  reduce using rule 42 ($@11)

    $@11  go to state 62


State 12

    2 Program: $@1 GlobalStmtList •
    4 GlobalStmtList: GlobalStmtList • GlobalStmt

    COUT        shift, and go to state 4
    IF          shift, and go to state 5
    FOR         shift, and go to state 6
    WHILE       shift, and go to state 7
    RETURN      shift, and go to state 8
    BREAK       shift, and go to state 9
    VARIABLE_T  shift, and go to state 10
    IDENT       shift, and go to state 11

    $default  reduce using rule 2 (Program)

    GlobalStmt          go to state 63
    FunctionCallStmt    go to state 14
    JumpStmt            go to state 15
    IterationStmt       go to state 16
    SelectionStmt       go to state 17
    AssignStmt          go to state 18
    AssignBody          go to state 19
    DefineVariableStmt  go to state 20
    ReturnStmt          go to state 21
    CoutStmt            go to state 22
    FunctionCall        go to state 23
    FunctionDefStmt     go to state 24


State 13

    5 GlobalStmtList: GlobalStmt •

    $default  reduce using rule 5 (GlobalStmtList)


State 14

   14 GlobalStmt: FunctionCallStmt •

    $default  reduce using rule 14 (GlobalStmt)


State 15

   13 GlobalStmt: JumpStmt •

    $default  reduce using rule 13 (GlobalStmt)


State 16

   12 GlobalStmt: IterationStmt •

    $default  reduce using rule 12 (GlobalStmt)


State 17

   11 GlobalStmt: SelectionStmt •
   36 SelectionStmt: SelectionStmt • ELSE $@8 Selection

    ELSE  shift, and go to state 64

    ELSE      [reduce using rule 11 (GlobalStmt)]
    $default  reduce using rule 11 (GlobalStmt)


State 18

   10 GlobalStmt: AssignStmt •

    $default  reduce using rule 10 (GlobalStmt)


State 19

   41 AssignStmt: AssignBody • ';'

    ';'  shift, and go to state 65


State 20

    6 GlobalStmt: DefineVariableStmt •

    $default  reduce using rule 6 (GlobalStmt)


State 21

    9 GlobalStmt: ReturnStmt •

    $default  reduce using rule 9 (GlobalStmt)


State 22

    8 GlobalStmt: CoutStmt •

    $default  reduce using rule 8 (GlobalStmt)


State 23

   15 FunctionCallStmt: FunctionCall • ';'

    ';'  shift, and go to state 66


State 24

    7 GlobalStmt: FunctionDefStmt •

    $default  reduce using rule 7 (GlobalStmt)


State 25

   76 CoutStmt: COUT $@14 • SHL PrintableList ';'

    SHL  shift, and go to state 67


State 26

   34 SelectionStmt: IF '(' • Expression ')' $@7 Selection

    IDENT      shift, and go to state 30
    BOOL_LIT   shift, and go to state 31
    INT_LIT    shift, and go to state 32
    FLOAT_LIT  shift, and go to state 33
    STR_LIT    shift, and go to state 34
    '('        shift, and go to state 35
    SUB        shift, and go to state 36
    NOT        shift, and go to state 37
    BNT        shift, and go to state 38
    ADD        shift, and go to state 39

    Expression      go to state 68
    Or              go to state 41
    And             go to state 42
    BitwiseOr       go to state 43
    BitwiseXor      go to state 44
    BitwiseAnd      go to state 45
    Equality        go to state 46
    Relational      go to state 47
    Shift           go to state 48
    Additive        go to state 49
    Multiplicative  go to state 50
    TypeCast        go to state 51
    Unary           go to state 52
    Post            go to state 53
    Primary         go to state 54
    FunctionCall    go to state 55


State 27

   21 IterationStmt: FOR $@4 • '(' ForCondition ')' CompoundStmt

    '('  shift, and go to state 69


State 28

   19 IterationStmt: WHILE $@2 • '(' Expression ')' $@3 CompoundStmt

    '('  shift, and go to state 70


State 29

   74 ReturnStmt: RETURN ';' •

    $default  reduce using rule 74 (ReturnStmt)


State 30

  125 Primary: IDENT •
  127        | IDENT • '[' Expression ']'
  128        | IDENT • '[' Expression ']' '[' Expression ']'
  129 FunctionCall: IDENT • '(' ArgumentList ')'

    '('  shift, and go to state 60
    '['  shift, and go to state 71

    '('       [reduce using rule 125 (Primary)]
    $default  reduce using rule 125 (Primary)


State 31

  124 Primary: BOOL_LIT •

    $default  reduce using rule 124 (Primary)


State 32

  121 Primary: INT_LIT •

    $default  reduce using rule 121 (Primary)


State 33

  122 Primary: FLOAT_LIT •

    $default  reduce using rule 122 (Primary)


State 34

   83 Expression: STR_LIT •

    $default  reduce using rule 83 (Expression)


State 35

  112 TypeCast: '(' • VARIABLE_T ')' Unary
  123 Primary: '(' • Expression ')'

    VARIABLE_T  shift, and go to state 72
    IDENT       shift, and go to state 30
    BOOL_LIT    shift, and go to state 31
    INT_LIT     shift, and go to state 32
    FLOAT_LIT   shift, and go to state 33
    STR_LIT     shift, and go to state 34
    '('         shift, and go to state 35
    SUB         shift, and go to state 36
    NOT         shift, and go to state 37
    BNT         shift, and go to state 38
    ADD         shift, and go to state 39

    Expression      go to state 73
    Or              go to state 41
    And             go to state 42
    BitwiseOr       go to state 43
    BitwiseXor      go to state 44
    BitwiseAnd      go to state 45
    Equality        go to state 46
    Relational      go to state 47
    Shift           go to state 48
    Additive        go to state 49
    Multiplicative  go to state 50
    TypeCast        go to state 51
    Unary           go to state 52
    Post            go to state 53
    Primary         go to state 54
    FunctionCall    go to state 55


State 36

  115 Unary: SUB • Unary

    IDENT      shift, and go to state 30
    BOOL_LIT   shift, and go to state 31
    INT_LIT    shift, and go to state 32
    FLOAT_LIT  shift, and go to state 33
    '('        shift, and go to state 74
    SUB        shift, and go to state 36
    NOT        shift, and go to state 37
    BNT        shift, and go to state 38
    ADD        shift, and go to state 39

    Unary         go to state 75
    Post          go to state 53
    Primary       go to state 54
    FunctionCall  go to state 55


State 37

  116 Unary: NOT • Unary

    IDENT      shift, and go to state 30
    BOOL_LIT   shift, and go to state 31
    INT_LIT    shift, and go to state 32
    FLOAT_LIT  shift, and go to state 33
    '('        shift, and go to state 74
    SUB        shift, and go to state 36
    NOT        shift, and go to state 37
    BNT        shift, and go to state 38
    ADD        shift, and go to state 39

    Unary         go to state 76
    Post          go to state 53
    Primary       go to state 54
    FunctionCall  go to state 55


State 38

  113 Unary: BNT • Unary

    IDENT      shift, and go to state 30
    BOOL_LIT   shift, and go to state 31
    INT_LIT    shift, and go to state 32
    FLOAT_LIT  shift, and go to state 33
    '('        shift, and go to state 74
    SUB        shift, and go to state 36
    NOT        shift, and go to state 37
    BNT        shift, and go to state 38
    ADD        shift, and go to state 39

    Unary         go to state 77
    Post          go to state 53
    Primary       go to state 54
    FunctionCall  go to state 55


State 39

  114 Unary: ADD • Unary

    IDENT      shift, and go to state 30
    BOOL_LIT   shift, and go to state 31
    INT_LIT    shift, and go to state 32
    FLOAT_LIT  shift, and go to state 33
    '('        shift, and go to state 74
    SUB        shift, and go to state 36
    NOT        shift, and go to state 37
    BNT        shift, and go to state 38
    ADD        shift, and go to state 39

    Unary         go to state 78
    Post          go to state 53
    Primary       go to state 54
    FunctionCall  go to state 55


State 40

   73 ReturnStmt: RETURN Expression • ';'

    ';'  shift, and go to state 79


State 41

   82 Expression: Or •
   85 Or: Or • LOR And

    LOR  shift, and go to state 80

    $default  reduce using rule 82 (Expression)


State 42

   84 Or: And •
   87 And: And • LAN BitwiseOr

    LAN  shift, and go to state 81

    $default  reduce using rule 84 (Or)


State 43

   86 And: BitwiseOr •
   89 BitwiseOr: BitwiseOr • BOR BitwiseXor

    BOR  shift, and go to state 82

    $default  reduce using rule 86 (And)


State 44

   88 BitwiseOr: BitwiseXor •
   91 BitwiseXor: BitwiseXor • BXO BitwiseAnd

    BXO  shift, and go to state 83

    $default  reduce using rule 88 (BitwiseOr)


State 45

   90 BitwiseXor: BitwiseAnd •
   93 BitwiseAnd: BitwiseAnd • BAN Equality

    BAN  shift, and go to state 84

    $default  reduce using rule 90 (BitwiseXor)


State 46

   92 BitwiseAnd: Equality •
   95 Equality: Equality • EQL Relational
   96         | Equality • NEQ Relational

    EQL  shift, and go to state 85
    NEQ  shift, and go to state 86

    $default  reduce using rule 92 (BitwiseAnd)


State 47

   94 Equality: Relational •
   98 Relational: Relational • LES Shift
   99           | Relational • GTR Shift
  100           | Relational • LEQ Shift
  101           | Relational • GEQ Shift

    GTR  shift, and go to state 87
    LES  shift, and go to state 88
    GEQ  shift, and go to state 89
    LEQ  shift, and go to state 90

    $default  reduce using rule 94 (Equality)


State 48

   97 Relational: Shift •
  103 Shift: Shift • SHR Additive

    SHR  shift, and go to state 91

    $default  reduce using rule 97 (Relational)


State 49

  102 Shift: Additive •
  105 Additive: Additive • ADD Multiplicative
  106         | Additive • SUB Multiplicative

    SUB  shift, and go to state 92
    ADD  shift, and go to state 93

    SUB       [reduce using rule 102 (Shift)]
    ADD       [reduce using rule 102 (Shift)]
    $default  reduce using rule 102 (Shift)


State 50

  104 Additive: Multiplicative •
  108 Multiplicative: Multiplicative • MUL TypeCast
  109               | Multiplicative • DIV TypeCast
  110               | Multiplicative • REM TypeCast

    MUL  shift, and go to state 94
    DIV  shift, and go to state 95
    REM  shift, and go to state 96

    $default  reduce using rule 104 (Additive)


State 51

  107 Multiplicative: TypeCast •

    $default  reduce using rule 107 (Multiplicative)


State 52

  111 TypeCast: Unary •

    $default  reduce using rule 111 (TypeCast)


State 53

  117 Unary: Post •

    $default  reduce using rule 117 (Unary)


State 54

  118 Post: Primary •
  119     | Primary • INC_ASSIGN
  120     | Primary • DEC_ASSIGN

    INC_ASSIGN  shift, and go to state 97
    DEC_ASSIGN  shift, and go to state 98

    $default  reduce using rule 118 (Post)


State 55

  126 Primary: FunctionCall •

    $default  reduce using rule 126 (Primary)


State 56

   16 JumpStmt: BREAK ';' •

    $default  reduce using rule 16 (JumpStmt)


State 57

   65 Declarator: IDENT •
   66           | IDENT • VAL_ASSIGN Assignable
   67           | IDENT • '[' Expression ']'
   68           | IDENT • '[' Expression ']' '[' Expression ']'
   69           | IDENT • '[' Expression ']' VAL_ASSIGN '{' ArrayEles '}'
  136 FunctionDefStmt: VARIABLE_T IDENT • $@15 '(' $@16 FunctionParameterStmtList ')' $@17 '{' GlobalStmtList '}'

    VAL_ASSIGN  shift, and go to state 99
    '['         shift, and go to state 100

    '('       reduce using rule 133 ($@15)
    $default  reduce using rule 65 (Declarator)

    $@15  go to state 101


State 58

   62 DefineVariableStmt: VARIABLE_T DeclaratorList • ';'
   64 DeclaratorList: DeclaratorList • ',' Declarator

    ';'  shift, and go to state 102
    ','  shift, and go to state 103


State 59

   63 DeclaratorList: Declarator •

    $default  reduce using rule 63 (DeclaratorList)


State 60

  129 FunctionCall: IDENT '(' • ArgumentList ')'

    IDENT      shift, and go to state 30
    BOOL_LIT   shift, and go to state 31
    INT_LIT    shift, and go to state 32
    FLOAT_LIT  shift, and go to state 33
    STR_LIT    shift, and go to state 34
    '('        shift, and go to state 35
    SUB        shift, and go to state 36
    NOT        shift, and go to state 37
    BNT        shift, and go to state 38
    ADD        shift, and go to state 39

    Expression            go to state 104
    Or                    go to state 41
    And                   go to state 42
    BitwiseOr             go to state 43
    BitwiseXor            go to state 44
    BitwiseAnd            go to state 45
    Equality              go to state 46
    Relational            go to state 47
    Shift                 go to state 48
    Additive              go to state 49
    Multiplicative        go to state 50
    TypeCast              go to state 51
    Unary                 go to state 52
    Post                  go to state 53
    Primary               go to state 54
    FunctionCall          go to state 55
    ArgumentList          go to state 105
    ArgumentListNonEmpty  go to state 106


State 61

   45 AssignBody: IDENT '[' • Expression ']' $@12 Assign
   47           | IDENT '[' • Expression ']' '[' Expression ']' $@13 Assign

    IDENT      shift, and go to state 30
    BOOL_LIT   shift, and go to state 31
    INT_LIT    shift, and go to state 32
    FLOAT_LIT  shift, and go to state 33
    STR_LIT    shift, and go to state 34
    '('        shift, and go to state 35
    SUB        shift, and go to state 36
    NOT        shift, and go to state 37
    BNT        shift, and go to state 38
    ADD        shift, and go to state 39

    Expression      go to state 107
    Or              go to state 41
    And             go to state 42
    BitwiseOr       go to state 43
    BitwiseXor      go to state 44
    BitwiseAnd      go to state 45
    Equality        go to state 46
    Relational      go to state 47
    Shift           go to state 48
    Additive        go to state 49
    Multiplicative  go to state 50
    TypeCast        go to state 51
    Unary           go to state 52
    Post            go to state 53
    Primary         go to state 54
    FunctionCall    go to state 55


State 62

   43 AssignBody: IDENT $@11 • Assign

    VAL_ASSIGN  shift, and go to state 108
    ADD_ASSIGN  shift, and go to state 109
    SUB_ASSIGN  shift, and go to state 110
    MUL_ASSIGN  shift, and go to state 111
    DIV_ASSIGN  shift, and go to state 112
    REM_ASSIGN  shift, and go to state 113
    BAN_ASSIGN  shift, and go to state 114
    BOR_ASSIGN  shift, and go to state 115
    BXO_ASSIGN  shift, and go to state 116
    SHR_ASSIGN  shift, and go to state 117
    SHL_ASSIGN  shift, and go to state 118
    IDENT       shift, and go to state 30
    BOOL_LIT    shift, and go to state 31
    INT_LIT     shift, and go to state 32
    FLOAT_LIT   shift, and go to state 33
    STR_LIT     shift, and go to state 119
    '('         shift, and go to state 35
    SUB         shift, and go to state 36
    NOT         shift, and go to state 37
    BNT         shift, and go to state 38
    ADD         shift, and go to state 39

    Assign          go to state 120
    Assignable      go to state 121
    Expression      go to state 122
    Or              go to state 41
    And             go to state 42
    BitwiseOr       go to state 43
    BitwiseXor      go to state 44
    BitwiseAnd      go to state 45
    Equality        go to state 46
    Relational      go to state 47
    Shift           go to state 48
    Additive        go to state 49
    Multiplicative  go to state 50
    TypeCast        go to state 51
    Unary           go to state 52
    Post            go to state 53
    Primary         go to state 54
    FunctionCall    go to state 55


State 63

    4 GlobalStmtList: GlobalStmtList GlobalStmt •

    $default  reduce using rule 4 (GlobalStmtList)


State 64

   36 SelectionStmt: SelectionStmt ELSE • $@8 Selection

    $default  reduce using rule 35 ($@8)

    $@8  go to state 123


State 65

   41 AssignStmt: AssignBody ';' •

    $default  reduce using rule 41 (AssignStmt)


State 66

   15 FunctionCallStmt: FunctionCall ';' •

    $default  reduce using rule 15 (FunctionCallStmt)


State 67

   76 CoutStmt: COUT $@14 SHL • PrintableList ';'

    ENDL       shift, and go to state 124
    IDENT      shift, and go to state 30
    BOOL_LIT   shift, and go to state 31
    INT_LIT    shift, and go to state 32
    FLOAT_LIT  shift, and go to state 33
    STR_LIT    shift, and go to state 125
    '('        shift, and go to state 35
    SUB        shift, and go to state 36
    NOT        shift, and go to state 37
    BNT        shift, and go to state 38
    ADD        shift, and go to state 39

    PrintableList   go to state 126
    Printable       go to state 127
    Expression      go to state 128
    Or              go to state 41
    And             go to state 42
    BitwiseOr       go to state 43
    BitwiseXor      go to state 44
    BitwiseAnd      go to state 45
    Equality        go to state 46
    Relational      go to state 47
    Shift           go to state 48
    Additive        go to state 49
    Multiplicative  go to state 50
    TypeCast        go to state 51
    Unary           go to state 52
    Post            go to state 53
    Primary         go to state 54
    FunctionCall    go to state 55


State 68

   34 SelectionStmt: IF '(' Expression • ')' $@7 Selection

    ')'  shift, and go to state 129


State 69

   21 IterationStmt: FOR $@4 '(' • ForCondition ')' CompoundStmt

    ';'         shift, and go to state 130
    VARIABLE_T  shift, and go to state 131
    IDENT       shift, and go to state 132
    BOOL_LIT    shift, and go to state 31
    INT_LIT     shift, and go to state 32
    FLOAT_LIT   shift, and go to state 33
    STR_LIT     shift, and go to state 34
    '('         shift, and go to state 35
    SUB         shift, and go to state 36
    NOT         shift, and go to state 37
    BNT         shift, and go to state 38
    ADD         shift, and go to state 39

    ForCondition        go to state 133
    ExpressionStmt      go to state 134
    AssignBody          go to state 135
    DefineVariableStmt  go to state 136
    Expression          go to state 137
    Or                  go to state 41
    And                 go to state 42
    BitwiseOr           go to state 43
    BitwiseXor          go to state 44
    BitwiseAnd          go to state 45
    Equality            go to state 46
    Relational          go to state 47
    Shift               go to state 48
    Additive            go to state 49
    Multiplicative      go to state 50
    TypeCast            go to state 51
    Unary               go to state 52
    Post                go to state 53
    Primary             go to state 54
    FunctionCall        go to state 55


State 70

   19 IterationStmt: WHILE $@2 '(' • Expression ')' $@3 CompoundStmt

    IDENT      shift, and go to state 30
    BOOL_LIT   shift, and go to state 31
    INT_LIT    shift, and go to state 32
    FLOAT_LIT  shift, and go to state 33
    STR_LIT    shift, and go to state 34
    '('        shift, and go to state 35
    SUB        shift, and go to state 36
    NOT        shift, and go to state 37
    BNT        shift, and go to state 38
    ADD        shift, and go to state 39

    Expression      go to state 138
    Or              go to state 41
    And             go to state 42
    BitwiseOr       go to state 43
    BitwiseXor      go to state 44
    BitwiseAnd      go to state 45
    Equality        go to state 46
    Relational      go to state 47
    Shift           go to state 48
    Additive        go to state 49
    Multiplicative  go to state 50
    TypeCast        go to state 51
    Unary           go to state 52
    Post            go to state 53
    Primary         go to state 54
    FunctionCall    go to state 55


State 71

  127 Primary: IDENT '[' • Expression ']'
  128        | IDENT '[' • Expression ']' '[' Expression ']'

    IDENT      shift, and go to state 30
    BOOL_LIT   shift, and go to state 31
    INT_LIT    shift, and go to state 32
    FLOAT_LIT  shift, and go to state 33
    STR_LIT    shift, and go to state 34
    '('        shift, and go to state 35
    SUB        shift, and go to state 36
    NOT        shift, and go to state 37
    BNT        shift, and go to state 38
    ADD        shift, and go to state 39

    Expression      go to state 139
    Or              go to state 41
    And             go to state 42
    BitwiseOr       go to state 43
    BitwiseXor      go to state 44
    BitwiseAnd      go to state 45
    Equality        go to state 46
    Relational      go to state 47
    Shift           go to state 48
    Additive        go to state 49
    Multiplicative  go to state 50
    TypeCast        go to state 51
    Unary           go to state 52
    Post            go to state 53
    Primary         go to state 54
    FunctionCall    go to state 55


State 72

  112 TypeCast: '(' VARIABLE_T • ')' Unary

    ')'  shift, and go to state 140


State 73

  123 Primary: '(' Expression • ')'

    ')'  shift, and go to state 141


State 74

  123 Primary: '(' • Expression ')'

    IDENT      shift, and go to state 30
    BOOL_LIT   shift, and go to state 31
    INT_LIT    shift, and go to state 32
    FLOAT_LIT  shift, and go to state 33
    STR_LIT    shift, and go to state 34
    '('        shift, and go to state 35
    SUB        shift, and go to state 36
    NOT        shift, and go to state 37
    BNT        shift, and go to state 38
    ADD        shift, and go to state 39

    Expression      go to state 73
    Or              go to state 41
    And             go to state 42
    BitwiseOr       go to state 43
    BitwiseXor      go to state 44
    BitwiseAnd      go to state 45
    Equality        go to state 46
    Relational      go to state 47
    Shift           go to state 48
    Additive        go to state 49
    Multiplicative  go to state 50
    TypeCast        go to state 51
    Unary           go to state 52
    Post            go to state 53
    Primary         go to state 54
    FunctionCall    go to state 55


State 75

  115 Unary: SUB Unary •

    $default  reduce using rule 115 (Unary)


State 76

  116 Unary: NOT Unary •

    $default  reduce using rule 116 (Unary)


State 77

  113 Unary: BNT Unary •

    $default  reduce using rule 113 (Unary)


State 78

  114 Unary: ADD Unary •

    $default  reduce using rule 114 (Unary)


State 79

   73 ReturnStmt: RETURN Expression ';' •

    $default  reduce using rule 73 (ReturnStmt)


State 80

   85 Or: Or LOR • And

    IDENT      shift, and go to state 30
    BOOL_LIT   shift, and go to state 31
    INT_LIT    shift, and go to state 32
    FLOAT_LIT  shift, and go to state 33
    '('        shift, and go to state 35
    SUB        shift, and go to state 36
    NOT        shift, and go to state 37
    BNT        shift, and go to state 38
    ADD        shift, and go to state 39

    And             go to state 142
    BitwiseOr       go to state 43
    BitwiseXor      go to state 44
    BitwiseAnd      go to state 45
    Equality        go to state 46
    Relational      go to state 47
    Shift           go to state 48
    Additive        go to state 49
    Multiplicative  go to state 50
    TypeCast        go to state 51
    Unary           go to state 52
    Post            go to state 53
    Primary         go to state 54
    FunctionCall    go to state 55


State 81

   87 And: And LAN • BitwiseOr

    IDENT      shift, and go to state 30
    BOOL_LIT   shift, and go to state 31
    INT_LIT    shift, and go to state 32
    FLOAT_LIT  shift, and go to state 33
    '('        shift, and go to state 35
    SUB        shift, and go to state 36
    NOT        shift, and go to state 37
    BNT        shift, and go to state 38
    ADD        shift, and go to state 39

    BitwiseOr       go to state 143
    BitwiseXor      go to state 44
    BitwiseAnd      go to state 45
    Equality        go to state 46
    Relational      go to state 47
    Shift           go to state 48
    Additive        go to state 49
    Multiplicative  go to state 50
    TypeCast        go to state 51
    Unary           go to state 52
    Post            go to state 53
    Primary         go to state 54
    FunctionCall    go to state 55


State 82

   89 BitwiseOr: BitwiseOr BOR • BitwiseXor

    IDENT      shift, and go to state 30
    BOOL_LIT   shift, and go to state 31
    INT_LIT    shift, and go to state 32
    FLOAT_LIT  shift, and go to state 33
    '('        shift, and go to state 35
    SUB        shift, and go to state 36
    NOT        shift, and go to state 37
    BNT        shift, and go to state 38
    ADD        shift, and go to state 39

    BitwiseXor      go to state 144
    BitwiseAnd      go to state 45
    Equality        go to state 46
    Relational      go to state 47
    Shift           go to state 48
    Additive        go to state 49
    Multiplicative  go to state 50
    TypeCast        go to state 51
    Unary           go to state 52
    Post            go to state 53
    Primary         go to state 54
    FunctionCall    go to state 55


State 83

   91 BitwiseXor: BitwiseXor BXO • BitwiseAnd

    IDENT      shift, and go to state 30
    BOOL_LIT   shift, and go to state 31
    INT_LIT    shift, and go to state 32
    FLOAT_LIT  shift, and go to state 33
    '('        shift, and go to state 35
    SUB        shift, and go to state 36
    NOT        shift, and go to state 37
    BNT        shift, and go to state 38
    ADD        shift, and go to state 39

    BitwiseAnd      go to state 145
    Equality        go to state 46
    Relational      go to state 47
    Shift           go to state 48
    Additive        go to state 49
    Multiplicative  go to state 50
    TypeCast        go to state 51
    Unary           go to state 52
    Post            go to state 53
    Primary         go to state 54
    FunctionCall    go to state 55


State 84

   93 BitwiseAnd: BitwiseAnd BAN • Equality

    IDENT      shift, and go to state 30
    BOOL_LIT   shift, and go to state 31
    INT_LIT    shift, and go to state 32
    FLOAT_LIT  shift, and go to state 33
    '('        shift, and go to state 35
    SUB        shift, and go to state 36
    NOT        shift, and go to state 37
    BNT        shift, and go to state 38
    ADD        shift, and go to state 39

    Equality        go to state 146
    Relational      go to state 47
    Shift           go to state 48
    Additive        go to state 49
    Multiplicative  go to state 50
    TypeCast        go to state 51
    Unary           go to state 52
    Post            go to state 53
    Primary         go to state 54
    FunctionCall    go to state 55


State 85

   95 Equality: Equality EQL • Relational

    IDENT      shift, and go to state 30
    BOOL_LIT   shift, and go to state 31
    INT_LIT    shift, and go to state 32
    FLOAT_LIT  shift, and go to state 33
    '('        shift, and go to state 35
    SUB        shift, and go to state 36
    NOT        shift, and go to state 37
    BNT        shift, and go to state 38
    ADD        shift, and go to state 39

    Relational      go to state 147
    Shift           go to state 48
    Additive        go to state 49
    Multiplicative  go to state 50
    TypeCast        go to state 51
    Unary           go to state 52
    Post            go to state 53
    Primary         go to state 54
    FunctionCall    go to state 55


State 86

   96 Equality: Equality NEQ • Relational

    IDENT      shift, and go to state 30
    BOOL_LIT   shift, and go to state 31
    INT_LIT    shift, and go to state 32
    FLOAT_LIT  shift, and go to state 33
    '('        shift, and go to state 35
    SUB        shift, and go to state 36
    NOT        shift, and go to state 37
    BNT        shift, and go to state 38
    ADD        shift, and go to state 39

    Relational      go to state 148
    Shift           go to state 48
    Additive        go to state 49
    Multiplicative  go to state 50
    TypeCast        go to state 51
    Unary           go to state 52
    Post            go to state 53
    Primary         go to state 54
    FunctionCall    go to state 55


State 87

   99 Relational: Relational GTR • Shift

    IDENT      shift, and go to state 30
    BOOL_LIT   shift, and go to state 31
    INT_LIT    shift, and go to state 32
    FLOAT_LIT  shift, and go to state 33
    '('        shift, and go to state 35
    SUB        shift, and go to state 36
    NOT        shift, and go to state 37
    BNT        shift, and go to state 38
    ADD        shift, and go to state 39

    Shift           go to state 149
    Additive        go to state 49
    Multiplicative  go to state 50
    TypeCast        go to state 51
    Unary           go to state 52
    Post            go to state 53
    Primary         go to state 54
    FunctionCall    go to state 55


State 88

   98 Relational: Relational LES • Shift

    IDENT      shift, and go to state 30
    BOOL_LIT   shift, and go to state 31
    INT_LIT    shift, and go to state 32
    FLOAT_LIT  shift, and go to state 33
    '('        shift, and go to state 35
    SUB        shift, and go to state 36
    NOT        shift, and go to state 37
    BNT        shift, and go to state 38
    ADD        shift, and go to state 39

    Shift           go to state 150
    Additive        go to state 49
    Multiplicative  go to state 50
    TypeCast        go to state 51
    Unary           go to state 52
    Post            go to state 53
    Primary         go to state 54
    FunctionCall    go to state 55


State 89

  101 Relational: Relational GEQ • Shift

    IDENT      shift, and go to state 30
    BOOL_LIT   shift, and go to state 31
    INT_LIT    shift, and go to state 32
    FLOAT_LIT  shift, and go to state 33
    '('        shift, and go to state 35
    SUB        shift, and go to state 36
    NOT        shift, and go to state 37
    BNT        shift, and go to state 38
    ADD        shift, and go to state 39

    Shift           go to state 151
    Additive        go to state 49
    Multiplicative  go to state 50
    TypeCast        go to state 51
    Unary           go to state 52
    Post            go to state 53
    Primary         go to state 54
    FunctionCall    go to state 55


State 90

  100 Relational: Relational LEQ • Shift

    IDENT      shift, and go to state 30
    BOOL_LIT   shift, and go to state 31
    INT_LIT    shift, and go to state 32
    FLOAT_LIT  shift, and go to state 33
    '('        shift, and go to state 35
    SUB        shift, and go to state 36
    NOT        shift, and go to state 37
    BNT        shift, and go to state 38
    ADD        shift, and go to state 39

    Shift           go to state 152
    Additive        go to state 49
    Multiplicative  go to state 50
    TypeCast        go to state 51
    Unary           go to state 52
    Post            go to state 53
    Primary         go to state 54
    FunctionCall    go to state 55


State 91

  103 Shift: Shift SHR • Additive

    IDENT      shift, and go to state 30
    BOOL_LIT   shift, and go to state 31
    INT_LIT    shift, and go to state 32
    FLOAT_LIT  shift, and go to state 33
    '('        shift, and go to state 35
    SUB        shift, and go to state 36
    NOT        shift, and go to state 37
    BNT        shift, and go to state 38
    ADD        shift, and go to state 39

    Additive        go to state 153
    Multiplicative  go to state 50
    TypeCast        go to state 51
    Unary           go to state 52
    Post            go to state 53
    Primary         go to state 54
    FunctionCall    go to state 55


State 92

  106 Additive: Additive SUB • Multiplicative

    IDENT      shift, and go to state 30
    BOOL_LIT   shift, and go to state 31
    INT_LIT    shift, and go to state 32
    FLOAT_LIT  shift, and go to state 33
    '('        shift, and go to state 35
    SUB        shift, and go to state 36
    NOT        shift, and go to state 37
    BNT        shift, and go to state 38
    ADD        shift, and go to state 39

    Multiplicative  go to state 154
    TypeCast        go to state 51
    Unary           go to state 52
    Post            go to state 53
    Primary         go to state 54
    FunctionCall    go to state 55


State 93

  105 Additive: Additive ADD • Multiplicative

    IDENT      shift, and go to state 30
    BOOL_LIT   shift, and go to state 31
    INT_LIT    shift, and go to state 32
    FLOAT_LIT  shift, and go to state 33
    '('        shift, and go to state 35
    SUB        shift, and go to state 36
    NOT        shift, and go to state 37
    BNT        shift, and go to state 38
    ADD        shift, and go to state 39

    Multiplicative  go to state 155
    TypeCast        go to state 51
    Unary           go to state 52
    Post            go to state 53
    Primary         go to state 54
    FunctionCall    go to state 55


State 94

  108 Multiplicative: Multiplicative MUL • TypeCast

    IDENT      shift, and go to state 30
    BOOL_LIT   shift, and go to state 31
    INT_LIT    shift, and go to state 32
    FLOAT_LIT  shift, and go to state 33
    '('        shift, and go to state 35
    SUB        shift, and go to state 36
    NOT        shift, and go to state 37
    BNT        shift, and go to state 38
    ADD        shift, and go to state 39

    TypeCast      go to state 156
    Unary         go to state 52
    Post          go to state 53
    Primary       go to state 54
    FunctionCall  go to state 55


State 95

  109 Multiplicative: Multiplicative DIV • TypeCast

    IDENT      shift, and go to state 30
    BOOL_LIT   shift, and go to state 31
    INT_LIT    shift, and go to state 32
    FLOAT_LIT  shift, and go to state 33
    '('        shift, and go to state 35
    SUB        shift, and go to state 36
    NOT        shift, and go to state 37
    BNT        shift, and go to state 38
    ADD        shift, and go to state 39

    TypeCast      go to state 157
    Unary         go to state 52
    Post          go to state 53
    Primary       go to state 54
    FunctionCall  go to state 55


State 96

  110 Multiplicative: Multiplicative REM • TypeCast

    IDENT      shift, and go to state 30
    BOOL_LIT   shift, and go to state 31
    INT_LIT    shift, and go to state 32
    FLOAT_LIT  shift, and go to state 33
    '('        shift, and go to state 35
    SUB        shift, and go to state 36
    NOT        shift, and go to state 37
    BNT        shift, and go to state 38
    ADD        shift, and go to state 39

    TypeCast      go to state 158
    Unary         go to state 52
    Post          go to state 53
    Primary       go to state 54
    FunctionCall  go to state 55


State 97

  119 Post: Primary INC_ASSIGN •

    $default  reduce using rule 119 (Post)


State 98

  120 Post: Primary DEC_ASSIGN •

    $default  reduce using rule 120 (Post)


State 99

   66 Declarator: IDENT VAL_ASSIGN • Assignable

    IDENT      shift, and go to state 30
    BOOL_LIT   shift, and go to state 31
    INT_LIT    shift, and go to state 32
    FLOAT_LIT  shift, and go to state 33
    STR_LIT    shift, and go to state 119
    '('        shift, and go to state 35
    SUB        shift, and go to state 36
    NOT        shift, and go to state 37
    BNT        shift, and go to state 38
    ADD        shift, and go to state 39

    Assignable      go to state 159
    Expression      go to state 122
    Or              go to state 41
    And             go to state 42
    BitwiseOr       go to state 43
    BitwiseXor      go to state 44
    BitwiseAnd      go to state 45
    Equality        go to state 46
    Relational      go to state 47
    Shift           go to state 48
    Additive        go to state 49
    Multiplicative  go to state 50
    TypeCast        go to state 51
    Unary           go to state 52
    Post            go to state 53
    Primary         go to state 54
    FunctionCall    go to state 55


State 100

   67 Declarator: IDENT '[' • Expression ']'
   68           | IDENT '[' • Expression ']' '[' Expression ']'
   69           | IDENT '[' • Expression ']' VAL_ASSIGN '{' ArrayEles '}'

    IDENT      shift, and go to state 30
    BOOL_LIT   shift, and go to state 31
    INT_LIT    shift, and go to state 32
    FLOAT_LIT  shift, and go to state 33
    STR_LIT    shift, and go to state 34
    '('        shift, and go to state 35
    SUB        shift, and go to state 36
    NOT        shift, and go to state 37
    BNT        shift, and go to state 38
    ADD        shift, and go to state 39

    Expression      go to state 160
    Or              go to state 41
    And             go to state 42
    BitwiseOr       go to state 43
    BitwiseXor      go to state 44
    BitwiseAnd      go to state 45
    Equality        go to state 46
    Relational      go to state 47
    Shift           go to state 48
    Additive        go to state 49
    Multiplicative  go to state 50
    TypeCast        go to state 51
    Unary           go to state 52
    Post            go to state 53
    Primary         go to state 54
    FunctionCall    go to state 55


State 101

  136 FunctionDefStmt: VARIABLE_T IDENT $@15 • '(' $@16 FunctionParameterStmtList ')' $@17 '{' GlobalStmtList '}'

    '('  shift, and go to state 161


State 102

   62 DefineVariableStmt: VARIABLE_T DeclaratorList ';' •

    $default  reduce using rule 62 (DefineVariableStmt)


State 103

   64 DeclaratorList: DeclaratorList ',' • Declarator

    IDENT  shift, and go to state 162

    Declarator  go to state 163


State 104

  131 ArgumentListNonEmpty: Expression •

    $default  reduce using rule 131 (ArgumentListNonEmpty)


State 105

  129 FunctionCall: IDENT '(' ArgumentList • ')'

    ')'  shift, and go to state 164


State 106

  130 ArgumentList: ArgumentListNonEmpty •
  132 ArgumentListNonEmpty: ArgumentListNonEmpty • ',' Expression

    ','  shift, and go to state 165

    $default  reduce using rule 130 (ArgumentList)


State 107

   45 AssignBody: IDENT '[' Expression • ']' $@12 Assign
   47           | IDENT '[' Expression • ']' '[' Expression ']' $@13 Assign

    ']'  shift, and go to state 166


State 108

   49 Assign: VAL_ASSIGN • Assign

    VAL_ASSIGN  shift, and go to state 108
    ADD_ASSIGN  shift, and go to state 109
    SUB_ASSIGN  shift, and go to state 110
    MUL_ASSIGN  shift, and go to state 111
    DIV_ASSIGN  shift, and go to state 112
    REM_ASSIGN  shift, and go to state 113
    BAN_ASSIGN  shift, and go to state 114
    BOR_ASSIGN  shift, and go to state 115
    BXO_ASSIGN  shift, and go to state 116
    SHR_ASSIGN  shift, and go to state 117
    SHL_ASSIGN  shift, and go to state 118
    IDENT       shift, and go to state 30
    BOOL_LIT    shift, and go to state 31
    INT_LIT     shift, and go to state 32
    FLOAT_LIT   shift, and go to state 33
    STR_LIT     shift, and go to state 119
    '('         shift, and go to state 35
    SUB         shift, and go to state 36
    NOT         shift, and go to state 37
    BNT         shift, and go to state 38
    ADD         shift, and go to state 39

    Assign          go to state 167
    Assignable      go to state 121
    Expression      go to state 122
    Or              go to state 41
    And             go to state 42
    BitwiseOr       go to state 43
    BitwiseXor      go to state 44
    BitwiseAnd      go to state 45
    Equality        go to state 46
    Relational      go to state 47
    Shift           go to state 48
    Additive        go to state 49
    Multiplicative  go to state 50
    TypeCast        go to state 51
    Unary           go to state 52
    Post            go to state 53
    Primary         go to state 54
    FunctionCall    go to state 55


State 109

   50 Assign: ADD_ASSIGN • Assign

    VAL_ASSIGN  shift, and go to state 108
    ADD_ASSIGN  shift, and go to state 109
    SUB_ASSIGN  shift, and go to state 110
    MUL_ASSIGN  shift, and go to state 111
    DIV_ASSIGN  shift, and go to state 112
    REM_ASSIGN  shift, and go to state 113
    BAN_ASSIGN  shift, and go to state 114
    BOR_ASSIGN  shift, and go to state 115
    BXO_ASSIGN  shift, and go to state 116
    SHR_ASSIGN  shift, and go to state 117
    SHL_ASSIGN  shift, and go to state 118
    IDENT       shift, and go to state 30
    BOOL_LIT    shift, and go to state 31
    INT_LIT     shift, and go to state 32
    FLOAT_LIT   shift, and go to state 33
    STR_LIT     shift, and go to state 119
    '('         shift, and go to state 35
    SUB         shift, and go to state 36
    NOT         shift, and go to state 37
    BNT         shift, and go to state 38
    ADD         shift, and go to state 39

    Assign          go to state 168
    Assignable      go to state 121
    Expression      go to state 122
    Or              go to state 41
    And             go to state 42
    BitwiseOr       go to state 43
    BitwiseXor      go to state 44
    BitwiseAnd      go to state 45
    Equality        go to state 46
    Relational      go to state 47
    Shift           go to state 48
    Additive        go to state 49
    Multiplicative  go to state 50
    TypeCast        go to state 51
    Unary           go to state 52
    Post            go to state 53
    Primary         go to state 54
    FunctionCall    go to state 55


State 110

   51 Assign: SUB_ASSIGN • Assign

    VAL_ASSIGN  shift, and go to state 108
    ADD_ASSIGN  shift, and go to state 109
    SUB_ASSIGN  shift, and go to state 110
    MUL_ASSIGN  shift, and go to state 111
    DIV_ASSIGN  shift, and go to state 112
    REM_ASSIGN  shift, and go to state 113
    BAN_ASSIGN  shift, and go to state 114
    BOR_ASSIGN  shift, and go to state 115
    BXO_ASSIGN  shift, and go to state 116
    SHR_ASSIGN  shift, and go to state 117
    SHL_ASSIGN  shift, and go to state 118
    IDENT       shift, and go to state 30
    BOOL_LIT    shift, and go to state 31
    INT_LIT     shift, and go to state 32
    FLOAT_LIT   shift, and go to state 33
    STR_LIT     shift, and go to state 119
    '('         shift, and go to state 35
    SUB         shift, and go to state 36
    NOT         shift, and go to state 37
    BNT         shift, and go to state 38
    ADD         shift, and go to state 39

    Assign          go to state 169
    Assignable      go to state 121
    Expression      go to state 122
    Or              go to state 41
    And             go to state 42
    BitwiseOr       go to state 43
    BitwiseXor      go to state 44
    BitwiseAnd      go to state 45
    Equality        go to state 46
    Relational      go to state 47
    Shift           go to state 48
    Additive        go to state 49
    Multiplicative  go to state 50
    TypeCast        go to state 51
    Unary           go to state 52
    Post            go to state 53
    Primary         go to state 54
    FunctionCall    go to state 55


State 111

   52 Assign: MUL_ASSIGN • Assign

    VAL_ASSIGN  shift, and go to state 108
    ADD_ASSIGN  shift, and go to state 109
    SUB_ASSIGN  shift, and go to state 110
    MUL_ASSIGN  shift, and go to state 111
    DIV_ASSIGN  shift, and go to state 112
    REM_ASSIGN  shift, and go to state 113
    BAN_ASSIGN  shift, and go to state 114
    BOR_ASSIGN  shift, and go to state 115
    BXO_ASSIGN  shift, and go to state 116
    SHR_ASSIGN  shift, and go to state 117
    SHL_ASSIGN  shift, and go to state 118
    IDENT       shift, and go to state 30
    BOOL_LIT    shift, and go to state 31
    INT_LIT     shift, and go to state 32
    FLOAT_LIT   shift, and go to state 33
    STR_LIT     shift, and go to state 119
    '('         shift, and go to state 35
    SUB         shift, and go to state 36
    NOT         shift, and go to state 37
    BNT         shift, and go to state 38
    ADD         shift, and go to state 39

    Assign          go to state 170
    Assignable      go to state 121
    Expression      go to state 122
    Or              go to state 41
    And             go to state 42
    BitwiseOr       go to state 43
    BitwiseXor      go to state 44
    BitwiseAnd      go to state 45
    Equality        go to state 46
    Relational      go to state 47
    Shift           go to state 48
    Additive        go to state 49
    Multiplicative  go to state 50
    TypeCast        go to state 51
    Unary           go to state 52
    Post            go to state 53
    Primary         go to state 54
    FunctionCall    go to state 55


State 112

   53 Assign: DIV_ASSIGN • Assign

    VAL_ASSIGN  shift, and go to state 108
    ADD_ASSIGN  shift, and go to state 109
    SUB_ASSIGN  shift, and go to state 110
    MUL_ASSIGN  shift, and go to state 111
    DIV_ASSIGN  shift, and go to state 112
    REM_ASSIGN  shift, and go to state 113
    BAN_ASSIGN  shift, and go to state 114
    BOR_ASSIGN  shift, and go to state 115
    BXO_ASSIGN  shift, and go to state 116
    SHR_ASSIGN  shift, and go to state 117
    SHL_ASSIGN  shift, and go to state 118
    IDENT       shift, and go to state 30
    BOOL_LIT    shift, and go to state 31
    INT_LIT     shift, and go to state 32
    FLOAT_LIT   shift, and go to state 33
    STR_LIT     shift, and go to state 119
    '('         shift, and go to state 35
    SUB         shift, and go to state 36
    NOT         shift, and go to state 37
    BNT         shift, and go to state 38
    ADD         shift, and go to state 39

    Assign          go to state 171
    Assignable      go to state 121
    Expression      go to state 122
    Or              go to state 41
    And             go to state 42
    BitwiseOr       go to state 43
    BitwiseXor      go to state 44
    BitwiseAnd      go to state 45
    Equality        go to state 46
    Relational      go to state 47
    Shift           go to state 48
    Additive        go to state 49
    Multiplicative  go to state 50
    TypeCast        go to state 51
    Unary           go to state 52
    Post            go to state 53
    Primary         go to state 54
    FunctionCall    go to state 55


State 113

   54 Assign: REM_ASSIGN • Assign

    VAL_ASSIGN  shift, and go to state 108
    ADD_ASSIGN  shift, and go to state 109
    SUB_ASSIGN  shift, and go to state 110
    MUL_ASSIGN  shift, and go to state 111
    DIV_ASSIGN  shift, and go to state 112
    REM_ASSIGN  shift, and go to state 113
    BAN_ASSIGN  shift, and go to state 114
    BOR_ASSIGN  shift, and go to state 115
    BXO_ASSIGN  shift, and go to state 116
    SHR_ASSIGN  shift, and go to state 117
    SHL_ASSIGN  shift, and go to state 118
    IDENT       shift, and go to state 30
    BOOL_LIT    shift, and go to state 31
    INT_LIT     shift, and go to state 32
    FLOAT_LIT   shift, and go to state 33
    STR_LIT     shift, and go to state 119
    '('         shift, and go to state 35
    SUB         shift, and go to state 36
    NOT         shift, and go to state 37
    BNT         shift, and go to state 38
    ADD         shift, and go to state 39

    Assign          go to state 172
    Assignable      go to state 121
    Expression      go to state 122
    Or              go to state 41
    And             go to state 42
    BitwiseOr       go to state 43
    BitwiseXor      go to state 44
    BitwiseAnd      go to state 45
    Equality        go to state 46
    Relational      go to state 47
    Shift           go to state 48
    Additive        go to state 49
    Multiplicative  go to state 50
    TypeCast        go to state 51
    Unary           go to state 52
    Post            go to state 53
    Primary         go to state 54
    FunctionCall    go to state 55


State 114

   55 Assign: BAN_ASSIGN • Assign

    VAL_ASSIGN  shift, and go to state 108
    ADD_ASSIGN  shift, and go to state 109
    SUB_ASSIGN  shift, and go to state 110
    MUL_ASSIGN  shift, and go to state 111
    DIV_ASSIGN  shift, and go to state 112
    REM_ASSIGN  shift, and go to state 113
    BAN_ASSIGN  shift, and go to state 114
    BOR_ASSIGN  shift, and go to state 115
    BXO_ASSIGN  shift, and go to state 116
    SHR_ASSIGN  shift, and go to state 117
    SHL_ASSIGN  shift, and go to state 118
    IDENT       shift, and go to state 30
    BOOL_LIT    shift, and go to state 31
    INT_LIT     shift, and go to state 32
    FLOAT_LIT   shift, and go to state 33
    STR_LIT     shift, and go to state 119
    '('         shift, and go to state 35
    SUB         shift, and go to state 36
    NOT         shift, and go to state 37
    BNT         shift, and go to state 38
    ADD         shift, and go to state 39

    Assign          go to state 173
    Assignable      go to state 121
    Expression      go to state 122
    Or              go to state 41
    And             go to state 42
    BitwiseOr       go to state 43
    BitwiseXor      go to state 44
    BitwiseAnd      go to state 45
    Equality        go to state 46
    Relational      go to state 47
    Shift           go to state 48
    Additive        go to state 49
    Multiplicative  go to state 50
    TypeCast        go to state 51
    Unary           go to state 52
    Post            go to state 53
    Primary         go to state 54
    FunctionCall    go to state 55


State 115

   56 Assign: BOR_ASSIGN • Assign

    VAL_ASSIGN  shift, and go to state 108
    ADD_ASSIGN  shift, and go to state 109
    SUB_ASSIGN  shift, and go to state 110
    MUL_ASSIGN  shift, and go to state 111
    DIV_ASSIGN  shift, and go to state 112
    REM_ASSIGN  shift, and go to state 113
    BAN_ASSIGN  shift, and go to state 114
    BOR_ASSIGN  shift, and go to state 115
    BXO_ASSIGN  shift, and go to state 116
    SHR_ASSIGN  shift, and go to state 117
    SHL_ASSIGN  shift, and go to state 118
    IDENT       shift, and go to state 30
    BOOL_LIT    shift, and go to state 31
    INT_LIT     shift, and go to state 32
    FLOAT_LIT   shift, and go to state 33
    STR_LIT     shift, and go to state 119
    '('         shift, and go to state 35
    SUB         shift, and go to state 36
    NOT         shift, and go to state 37
    BNT         shift, and go to state 38
    ADD         shift, and go to state 39

    Assign          go to state 174
    Assignable      go to state 121
    Expression      go to state 122
    Or              go to state 41
    And             go to state 42
    BitwiseOr       go to state 43
    BitwiseXor      go to state 44
    BitwiseAnd      go to state 45
    Equality        go to state 46
    Relational      go to state 47
    Shift           go to state 48
    Additive        go to state 49
    Multiplicative  go to state 50
    TypeCast        go to state 51
    Unary           go to state 52
    Post            go to state 53
    Primary         go to state 54
    FunctionCall    go to state 55


State 116

   57 Assign: BXO_ASSIGN • Assign

    VAL_ASSIGN  shift, and go to state 108
    ADD_ASSIGN  shift, and go to state 109
    SUB_ASSIGN  shift, and go to state 110
    MUL_ASSIGN  shift, and go to state 111
    DIV_ASSIGN  shift, and go to state 112
    REM_ASSIGN  shift, and go to state 113
    BAN_ASSIGN  shift, and go to state 114
    BOR_ASSIGN  shift, and go to state 115
    BXO_ASSIGN  shift, and go to state 116
    SHR_ASSIGN  shift, and go to state 117
    SHL_ASSIGN  shift, and go to state 118
    IDENT       shift, and go to state 30
    BOOL_LIT    shift, and go to state 31
    INT_LIT     shift, and go to state 32
    FLOAT_LIT   shift, and go to state 33
    STR_LIT     shift, and go to state 119
    '('         shift, and go to state 35
    SUB         shift, and go to state 36
    NOT         shift, and go to state 37
    BNT         shift, and go to state 38
    ADD         shift, and go to state 39

    Assign          go to state 175
    Assignable      go to state 121
    Expression      go to state 122
    Or              go to state 41
    And             go to state 42
    BitwiseOr       go to state 43
    BitwiseXor      go to state 44
    BitwiseAnd      go to state 45
    Equality        go to state 46
    Relational      go to state 47
    Shift           go to state 48
    Additive        go to state 49
    Multiplicative  go to state 50
    TypeCast        go to state 51
    Unary           go to state 52
    Post            go to state 53
    Primary         go to state 54
    FunctionCall    go to state 55


State 117

   58 Assign: SHR_ASSIGN • Assign

    VAL_ASSIGN  shift, and go to state 108
    ADD_ASSIGN  shift, and go to state 109
    SUB_ASSIGN  shift, and go to state 110
    MUL_ASSIGN  shift, and go to state 111
    DIV_ASSIGN  shift, and go to state 112
    REM_ASSIGN  shift, and go to state 113
    BAN_ASSIGN  shift, and go to state 114
    BOR_ASSIGN  shift, and go to state 115
    BXO_ASSIGN  shift, and go to state 116
    SHR_ASSIGN  shift, and go to state 117
    SHL_ASSIGN  shift, and go to state 118
    IDENT       shift, and go to state 30
    BOOL_LIT    shift, and go to state 31
    INT_LIT     shift, and go to state 32
    FLOAT_LIT   shift, and go to state 33
    STR_LIT     shift, and go to state 119
    '('         shift, and go to state 35
    SUB         shift, and go to state 36
    NOT         shift, and go to state 37
    BNT         shift, and go to state 38
    ADD         shift, and go to state 39

    Assign          go to state 176
    Assignable      go to state 121
    Expression      go to state 122
    Or              go to state 41
    And             go to state 42
    BitwiseOr       go to state 43
    BitwiseXor      go to state 44
    BitwiseAnd      go to state 45
    Equality        go to state 46
    Relational      go to state 47
    Shift           go to state 48
    Additive        go to state 49
    Multiplicative  go to state 50
    TypeCast        go to state 51
    Unary           go to state 52
    Post            go to state 53
    Primary         go to state 54
    FunctionCall    go to state 55


State 118

   59 Assign: SHL_ASSIGN • Assign

    VAL_ASSIGN  shift, and go to state 108
    ADD_ASSIGN  shift, and go to state 109
    SUB_ASSIGN  shift, and go to state 110
    MUL_ASSIGN  shift, and go to state 111
    DIV_ASSIGN  shift, and go to state 112
    REM_ASSIGN  shift, and go to state 113
    BAN_ASSIGN  shift, and go to state 114
    BOR_ASSIGN  shift, and go to state 115
    BXO_ASSIGN  shift, and go to state 116
    SHR_ASSIGN  shift, and go to state 117
    SHL_ASSIGN  shift, and go to state 118
    IDENT       shift, and go to state 30
    BOOL_LIT    shift, and go to state 31
    INT_LIT     shift, and go to state 32
    FLOAT_LIT   shift, and go to state 33
    STR_LIT     shift, and go to state 119
    '('         shift, and go to state 35
    SUB         shift, and go to state 36
    NOT         shift, and go to state 37
    BNT         shift, and go to state 38
    ADD         shift, and go to state 39

    Assign          go to state 177
    Assignable      go to state 121
    Expression      go to state 122
    Or              go to state 41
    And             go to state 42
    BitwiseOr       go to state 43
    BitwiseXor      go to state 44
    BitwiseAnd      go to state 45
    Equality        go to state 46
    Relational      go to state 47
    Shift           go to state 48
    Additive        go to state 49
    Multiplicative  go to state 50
    TypeCast        go to state 51
    Unary           go to state 52
    Post            go to state 53
    Primary         go to state 54
    FunctionCall    go to state 55


State 119

   60 Assignable: STR_LIT •
   83 Expression: STR_LIT •

    ')'         reduce using rule 60 (Assignable)
    ')'         [reduce using rule 83 (Expression)]
    ';'         reduce using rule 60 (Assignable)
    ';'         [reduce using rule 83 (Expression)]
    '}'         reduce using rule 60 (Assignable)
    '}'         [reduce using rule 83 (Expression)]
    VARIABLE_T  reduce using rule 60 (Assignable)
    VARIABLE_T  [reduce using rule 83 (Expression)]
    IDENT       reduce using rule 60 (Assignable)
    IDENT       [reduce using rule 83 (Expression)]
    BOOL_LIT    reduce using rule 60 (Assignable)
    BOOL_LIT    [reduce using rule 83 (Expression)]
    INT_LIT     reduce using rule 60 (Assignable)
    INT_LIT     [reduce using rule 83 (Expression)]
    FLOAT_LIT   reduce using rule 60 (Assignable)
    FLOAT_LIT   [reduce using rule 83 (Expression)]
    STR_LIT     reduce using rule 60 (Assignable)
    STR_LIT     [reduce using rule 83 (Expression)]
    '('         reduce using rule 60 (Assignable)
    '('         [reduce using rule 83 (Expression)]
    SUB         reduce using rule 60 (Assignable)
    SUB         [reduce using rule 83 (Expression)]
    NOT         reduce using rule 60 (Assignable)
    NOT         [reduce using rule 83 (Expression)]
    BNT         reduce using rule 60 (Assignable)
    BNT         [reduce using rule 83 (Expression)]
    ADD         reduce using rule 60 (Assignable)
    ADD         [reduce using rule 83 (Expression)]
    ','         reduce using rule 60 (Assignable)
    ','         [reduce using rule 83 (Expression)]
    $default    reduce using rule 60 (Assignable)


State 120

   43 AssignBody: IDENT $@11 Assign •

    $default  reduce using rule 43 (AssignBody)


State 121

   48 Assign: Assignable •

    $default  reduce using rule 48 (Assign)


State 122

   61 Assignable: Expression •

    $default  reduce using rule 61 (Assignable)


State 123

   36 SelectionStmt: SelectionStmt ELSE $@8 • Selection

    COUT        shift, and go to state 4
    IF          shift, and go to state 5
    FOR         shift, and go to state 6
    WHILE       shift, and go to state 7
    RETURN      shift, and go to state 8
    BREAK       shift, and go to state 9
    '{'         shift, and go to state 178
    VARIABLE_T  shift, and go to state 10
    IDENT       shift, and go to state 11

    GlobalStmt          go to state 179
    FunctionCallStmt    go to state 14
    JumpStmt            go to state 15
    IterationStmt       go to state 16
    SelectionStmt       go to state 17
    Selection           go to state 180
    AssignStmt          go to state 18
    AssignBody          go to state 19
    DefineVariableStmt  go to state 20
    ReturnStmt          go to state 21
    CoutStmt            go to state 22
    FunctionCall        go to state 23
    FunctionDefStmt     go to state 24


State 124

   80 Printable: ENDL •

    $default  reduce using rule 80 (Printable)


State 125

   79 Printable: STR_LIT •
   83 Expression: STR_LIT •

    SHL       reduce using rule 79 (Printable)
    SHL       [reduce using rule 83 (Expression)]
    ';'       reduce using rule 79 (Printable)
    ';'       [reduce using rule 83 (Expression)]
    $default  reduce using rule 79 (Printable)


State 126

   76 CoutStmt: COUT $@14 SHL PrintableList • ';'
   78 PrintableList: PrintableList • SHL Printable

    SHL  shift, and go to state 181
    ';'  shift, and go to state 182


State 127

   77 PrintableList: Printable •

    $default  reduce using rule 77 (PrintableList)


State 128

   81 Printable: Expression •

    $default  reduce using rule 81 (Printable)


State 129

   34 SelectionStmt: IF '(' Expression ')' • $@7 Selection

    $default  reduce using rule 33 ($@7)

    $@7  go to state 183


State 130

   30 ExpressionStmt: ';' •

    $default  reduce using rule 30 (ExpressionStmt)


State 131

   25 ForCondition: VARIABLE_T • IDENT ':' IDENT
   62 DefineVariableStmt: VARIABLE_T • DeclaratorList ';'

    IDENT  shift, and go to state 184

    DeclaratorList  go to state 58
    Declarator      go to state 59


State 132

   43 AssignBody: IDENT • $@11 Assign
   45           | IDENT • '[' Expression ']' $@12 Assign
   47           | IDENT • '[' Expression ']' '[' Expression ']' $@13 Assign
  125 Primary: IDENT •
  127        | IDENT • '[' Expression ']'
  128        | IDENT • '[' Expression ']' '[' Expression ']'
  129 FunctionCall: IDENT • '(' ArgumentList ')'

    '('  shift, and go to state 60
    '['  shift, and go to state 185

    SHR         reduce using rule 125 (Primary)
    BAN         reduce using rule 125 (Primary)
    BOR         reduce using rule 125 (Primary)
    BXO         reduce using rule 125 (Primary)
    MUL         reduce using rule 125 (Primary)
    DIV         reduce using rule 125 (Primary)
    REM         reduce using rule 125 (Primary)
    GTR         reduce using rule 125 (Primary)
    LES         reduce using rule 125 (Primary)
    GEQ         reduce using rule 125 (Primary)
    LEQ         reduce using rule 125 (Primary)
    EQL         reduce using rule 125 (Primary)
    NEQ         reduce using rule 125 (Primary)
    LAN         reduce using rule 125 (Primary)
    LOR         reduce using rule 125 (Primary)
    INC_ASSIGN  reduce using rule 125 (Primary)
    DEC_ASSIGN  reduce using rule 125 (Primary)
    ')'         reduce using rule 125 (Primary)
    ';'         reduce using rule 125 (Primary)
    VARIABLE_T  reduce using rule 125 (Primary)
    IDENT       reduce using rule 42 ($@11)
    IDENT       [reduce using rule 125 (Primary)]
    BOOL_LIT    reduce using rule 42 ($@11)
    BOOL_LIT    [reduce using rule 125 (Primary)]
    INT_LIT     reduce using rule 42 ($@11)
    INT_LIT     [reduce using rule 125 (Primary)]
    FLOAT_LIT   reduce using rule 42 ($@11)
    FLOAT_LIT   [reduce using rule 125 (Primary)]
    STR_LIT     reduce using rule 42 ($@11)
    STR_LIT     [reduce using rule 125 (Primary)]
    '('         [reduce using rule 42 ($@11)]
    '('         [reduce using rule 125 (Primary)]
    SUB         reduce using rule 42 ($@11)
    SUB         [reduce using rule 125 (Primary)]
    NOT         reduce using rule 42 ($@11)
    NOT         [reduce using rule 125 (Primary)]
    BNT         reduce using rule 42 ($@11)
    BNT         [reduce using rule 125 (Primary)]
    ADD         reduce using rule 42 ($@11)
    ADD         [reduce using rule 125 (Primary)]
    $default    reduce using rule 42 ($@11)

    $@11  go to state 62


State 133

   21 IterationStmt: FOR $@4 '(' ForCondition • ')' CompoundStmt

    ')'  shift, and go to state 186


State 134

   24 ForCondition: ExpressionStmt • $@5 ExpressionStmt $@6 ExpressionStmt

    $default  reduce using rule 22 ($@5)

    $@5  go to state 187


State 135

   28 ExpressionStmt: AssignBody •

    $default  reduce using rule 28 (ExpressionStmt)


State 136

   27 ExpressionStmt: DefineVariableStmt •

    $default  reduce using rule 27 (ExpressionStmt)


State 137

   26 ExpressionStmt: Expression • ';'
   29               | Expression •

    ';'  shift, and go to state 188

    ';'       [reduce using rule 29 (ExpressionStmt)]
    $default  reduce using rule 29 (ExpressionStmt)


State 138

   19 IterationStmt: WHILE $@2 '(' Expression • ')' $@3 CompoundStmt

    ')'  shift, and go to state 189


State 139

  127 Primary: IDENT '[' Expression • ']'
  128        | IDENT '[' Expression • ']' '[' Expression ']'

    ']'  shift, and go to state 190


State 140

  112 TypeCast: '(' VARIABLE_T ')' • Unary

    IDENT      shift, and go to state 30
    BOOL_LIT   shift, and go to state 31
    INT_LIT    shift, and go to state 32
    FLOAT_LIT  shift, and go to state 33
    '('        shift, and go to state 74
    SUB        shift, and go to state 36
    NOT        shift, and go to state 37
    BNT        shift, and go to state 38
    ADD        shift, and go to state 39

    Unary         go to state 191
    Post          go to state 53
    Primary       go to state 54
    FunctionCall  go to state 55


State 141

  123 Primary: '(' Expression ')' •

    $default  reduce using rule 123 (Primary)


State 142

   85 Or: Or LOR And •
   87 And: And • LAN BitwiseOr

    LAN  shift, and go to state 81

    $default  reduce using rule 85 (Or)


State 143

   87 And: And LAN BitwiseOr •
   89 BitwiseOr: BitwiseOr • BOR BitwiseXor

    BOR  shift, and go to state 82

    $default  reduce using rule 87 (And)


State 144

   89 BitwiseOr: BitwiseOr BOR BitwiseXor •
   91 BitwiseXor: BitwiseXor • BXO BitwiseAnd

    BXO  shift, and go to state 83

    $default  reduce using rule 89 (BitwiseOr)


State 145

   91 BitwiseXor: BitwiseXor BXO BitwiseAnd •
   93 BitwiseAnd: BitwiseAnd • BAN Equality

    BAN  shift, and go to state 84

    $default  reduce using rule 91 (BitwiseXor)


State 146

   93 BitwiseAnd: BitwiseAnd BAN Equality •
   95 Equality: Equality • EQL Relational
   96         | Equality • NEQ Relational

    EQL  shift, and go to state 85
    NEQ  shift, and go to state 86

    $default  reduce using rule 93 (BitwiseAnd)


State 147

   95 Equality: Equality EQL Relational •
   98 Relational: Relational • LES Shift
   99           | Relational • GTR Shift
  100           | Relational • LEQ Shift
  101           | Relational • GEQ Shift

    GTR  shift, and go to state 87
    LES  shift, and go to state 88
    GEQ  shift, and go to state 89
    LEQ  shift, and go to state 90

    $default  reduce using rule 95 (Equality)


State 148

   96 Equality: Equality NEQ Relational •
   98 Relational: Relational • LES Shift
   99           | Relational • GTR Shift
  100           | Relational • LEQ Shift
  101           | Relational • GEQ Shift

    GTR  shift, and go to state 87
    LES  shift, and go to state 88
    GEQ  shift, and go to state 89
    LEQ  shift, and go to state 90

    $default  reduce using rule 96 (Equality)


State 149

   99 Relational: Relational GTR Shift •
  103 Shift: Shift • SHR Additive

    SHR  shift, and go to state 91

    $default  reduce using rule 99 (Relational)


State 150

   98 Relational: Relational LES Shift •
  103 Shift: Shift • SHR Additive

    SHR  shift, and go to state 91

    $default  reduce using rule 98 (Relational)


State 151

  101 Relational: Relational GEQ Shift •
  103 Shift: Shift • SHR Additive

    SHR  shift, and go to state 91

    $default  reduce using rule 101 (Relational)


State 152

  100 Relational: Relational LEQ Shift •
  103 Shift: Shift • SHR Additive

    SHR  shift, and go to state 91

    $default  reduce using rule 100 (Relational)


State 153

  103 Shift: Shift SHR Additive •
  105 Additive: Additive • ADD Multiplicative
  106         | Additive • SUB Multiplicative

    SUB  shift, and go to state 92
    ADD  shift, and go to state 93

    SUB       [reduce using rule 103 (Shift)]
    ADD       [reduce using rule 103 (Shift)]
    $default  reduce using rule 103 (Shift)


State 154

  106 Additive: Additive SUB Multiplicative •
  108 Multiplicative: Multiplicative • MUL TypeCast
  109               | Multiplicative • DIV TypeCast
  110               | Multiplicative • REM TypeCast

    MUL  shift, and go to state 94
    DIV  shift, and go to state 95
    REM  shift, and go to state 96

    $default  reduce using rule 106 (Additive)


State 155

  105 Additive: Additive ADD Multiplicative •
  108 Multiplicative: Multiplicative • MUL TypeCast
  109               | Multiplicative • DIV TypeCast
  110               | Multiplicative • REM TypeCast

    MUL  shift, and go to state 94
    DIV  shift, and go to state 95
    REM  shift, and go to state 96

    $default  reduce using rule 105 (Additive)


State 156

  108 Multiplicative: Multiplicative MUL TypeCast •

    $default  reduce using rule 108 (Multiplicative)


State 157

  109 Multiplicative: Multiplicative DIV TypeCast •

    $default  reduce using rule 109 (Multiplicative)


State 158

  110 Multiplicative: Multiplicative REM TypeCast •

    $default  reduce using rule 110 (Multiplicative)


State 159

   66 Declarator: IDENT VAL_ASSIGN Assignable •

    $default  reduce using rule 66 (Declarator)


State 160

   67 Declarator: IDENT '[' Expression • ']'
   68           | IDENT '[' Expression • ']' '[' Expression ']'
   69           | IDENT '[' Expression • ']' VAL_ASSIGN '{' ArrayEles '}'

    ']'  shift, and go to state 192


State 161

  136 FunctionDefStmt: VARIABLE_T IDENT $@15 '(' • $@16 FunctionParameterStmtList ')' $@17 '{' GlobalStmtList '}'

    $default  reduce using rule 134 ($@16)

    $@16  go to state 193


State 162

   65 Declarator: IDENT •
   66           | IDENT • VAL_ASSIGN Assignable
   67           | IDENT • '[' Expression ']'
   68           | IDENT • '[' Expression ']' '[' Expression ']'
   69           | IDENT • '[' Expression ']' VAL_ASSIGN '{' ArrayEles '}'

    VAL_ASSIGN  shift, and go to state 99
    '['         shift, and go to state 100

    $default  reduce using rule 65 (Declarator)


State 163

   64 DeclaratorList: DeclaratorList ',' Declarator •

    $default  reduce using rule 64 (DeclaratorList)


State 164

  129 FunctionCall: IDENT '(' ArgumentList ')' •

    $default  reduce using rule 129 (FunctionCall)


State 165

  132 ArgumentListNonEmpty: ArgumentListNonEmpty ',' • Expression

    IDENT      shift, and go to state 30
    BOOL_LIT   shift, and go to state 31
    INT_LIT    shift, and go to state 32
    FLOAT_LIT  shift, and go to state 33
    STR_LIT    shift, and go to state 34
    '('        shift, and go to state 35
    SUB        shift, and go to state 36
    NOT        shift, and go to state 37
    BNT        shift, and go to state 38
    ADD        shift, and go to state 39

    Expression      go to state 194
    Or              go to state 41
    And             go to state 42
    BitwiseOr       go to state 43
    BitwiseXor      go to state 44
    BitwiseAnd      go to state 45
    Equality        go to state 46
    Relational      go to state 47
    Shift           go to state 48
    Additive        go to state 49
    Multiplicative  go to state 50
    TypeCast        go to state 51
    Unary           go to state 52
    Post            go to state 53
    Primary         go to state 54
    FunctionCall    go to state 55


State 166

   45 AssignBody: IDENT '[' Expression ']' • $@12 Assign
   47           | IDENT '[' Expression ']' • '[' Expression ']' $@13 Assign

    '['  shift, and go to state 195

    $default  reduce using rule 44 ($@12)

    $@12  go to state 196


State 167

   49 Assign: VAL_ASSIGN Assign •

    $default  reduce using rule 49 (Assign)


State 168

   50 Assign: ADD_ASSIGN Assign •

    $default  reduce using rule 50 (Assign)


State 169

   51 Assign: SUB_ASSIGN Assign •

    $default  reduce using rule 51 (Assign)


State 170

   52 Assign: MUL_ASSIGN Assign •

    $default  reduce using rule 52 (Assign)


State 171

   53 Assign: DIV_ASSIGN Assign •

    $default  reduce using rule 53 (Assign)


State 172

   54 Assign: REM_ASSIGN Assign •

    $default  reduce using rule 54 (Assign)


State 173

   55 Assign: BAN_ASSIGN Assign •

    $default  reduce using rule 55 (Assign)


State 174

   56 Assign: BOR_ASSIGN Assign •

    $default  reduce using rule 56 (Assign)


State 175

   57 Assign: BXO_ASSIGN Assign •

    $default  reduce using rule 57 (Assign)


State 176

   58 Assign: SHR_ASSIGN Assign •

    $default  reduce using rule 58 (Assign)


State 177

   59 Assign: SHL_ASSIGN Assign •

    $default  reduce using rule 59 (Assign)


State 178

   40 Selection: '{' • $@9 GlobalStmtList $@10 '}'

    $default  reduce using rule 38 ($@9)

    $@9  go to state 197


State 179

   37 Selection: GlobalStmt •

    $default  reduce using rule 37 (Selection)


State 180

   36 SelectionStmt: SelectionStmt ELSE $@8 Selection •

    $default  reduce using rule 36 (SelectionStmt)


State 181

   78 PrintableList: PrintableList SHL • Printable

    ENDL       shift, and go to state 124
    IDENT      shift, and go to state 30
    BOOL_LIT   shift, and go to state 31
    INT_LIT    shift, and go to state 32
    FLOAT_LIT  shift, and go to state 33
    STR_LIT    shift, and go to state 125
    '('        shift, and go to state 35
    SUB        shift, and go to state 36
    NOT        shift, and go to state 37
    BNT        shift, and go to state 38
    ADD        shift, and go to state 39

    Printable       go to state 198
    Expression      go to state 128
    Or              go to state 41
    And             go to state 42
    BitwiseOr       go to state 43
    BitwiseXor      go to state 44
    BitwiseAnd      go to state 45
    Equality        go to state 46
    Relational      go to state 47
    Shift           go to state 48
    Additive        go to state 49
    Multiplicative  go to state 50
    TypeCast        go to state 51
    Unary           go to state 52
    Post            go to state 53
    Primary         go to state 54
    FunctionCall    go to state 55


State 182

   76 CoutStmt: COUT $@14 SHL PrintableList ';' •

    $default  reduce using rule 76 (CoutStmt)


State 183

   34 SelectionStmt: IF '(' Expression ')' $@7 • Selection

    COUT        shift, and go to state 4
    IF          shift, and go to state 5
    FOR         shift, and go to state 6
    WHILE       shift, and go to state 7
    RETURN      shift, and go to state 8
    BREAK       shift, and go to state 9
    '{'         shift, and go to state 178
    VARIABLE_T  shift, and go to state 10
    IDENT       shift, and go to state 11

    GlobalStmt          go to state 179
    FunctionCallStmt    go to state 14
    JumpStmt            go to state 15
    IterationStmt       go to state 16
    SelectionStmt       go to state 17
    Selection           go to state 199
    AssignStmt          go to state 18
    AssignBody          go to state 19
    DefineVariableStmt  go to state 20
    ReturnStmt          go to state 21
    CoutStmt            go to state 22
    FunctionCall        go to state 23
    FunctionDefStmt     go to state 24


State 184

   25 ForCondition: VARIABLE_T IDENT • ':' IDENT
   65 Declarator: IDENT •
   66           | IDENT • VAL_ASSIGN Assignable
   67           | IDENT • '[' Expression ']'
   68           | IDENT • '[' Expression ']' '[' Expression ']'
   69           | IDENT • '[' Expression ']' VAL_ASSIGN '{' ArrayEles '}'

    VAL_ASSIGN  shift, and go to state 99
    ':'         shift, and go to state 200
    '['         shift, and go to state 100

    $default  reduce using rule 65 (Declarator)


State 185

   45 AssignBody: IDENT '[' • Expression ']' $@12 Assign
   47           | IDENT '[' • Expression ']' '[' Expression ']' $@13 Assign
  127 Primary: IDENT '[' • Expression ']'
  128        | IDENT '[' • Expression ']' '[' Expression ']'

    IDENT      shift, and go to state 30
    BOOL_LIT   shift, and go to state 31
    INT_LIT    shift, and go to state 32
    FLOAT_LIT  shift, and go to state 33
    STR_LIT    shift, and go to state 34
    '('        shift, and go to state 35
    SUB        shift, and go to state 36
    NOT        shift, and go to state 37
    BNT        shift, and go to state 38
    ADD        shift, and go to state 39

    Expression      go to state 201
    Or              go to state 41
    And             go to state 42
    BitwiseOr       go to state 43
    BitwiseXor      go to state 44
    BitwiseAnd      go to state 45
    Equality        go to state 46
    Relational      go to state 47
    Shift           go to state 48
    Additive        go to state 49
    Multiplicative  go to state 50
    TypeCast        go to state 51
    Unary           go to state 52
    Post            go to state 53
    Primary         go to state 54
    FunctionCall    go to state 55


State 186

   21 IterationStmt: FOR $@4 '(' ForCondition ')' • CompoundStmt

    COUT        shift, and go to state 4
    IF          shift, and go to state 5
    FOR         shift, and go to state 6
    WHILE       shift, and go to state 7
    RETURN      shift, and go to state 8
    BREAK       shift, and go to state 9
    '{'         shift, and go to state 202
    VARIABLE_T  shift, and go to state 10
    IDENT       shift, and go to state 11

    GlobalStmtList      go to state 203
    GlobalStmt          go to state 13
    FunctionCallStmt    go to state 14
    JumpStmt            go to state 15
    IterationStmt       go to state 16
    CompoundStmt        go to state 204
    SelectionStmt       go to state 17
    AssignStmt          go to state 18
    AssignBody          go to state 19
    DefineVariableStmt  go to state 20
    ReturnStmt          go to state 21
    CoutStmt            go to state 22
    FunctionCall        go to state 23
    FunctionDefStmt     go to state 24


State 187

   24 ForCondition: ExpressionStmt $@5 • ExpressionStmt $@6 ExpressionStmt

    ';'         shift, and go to state 130
    VARIABLE_T  shift, and go to state 205
    IDENT       shift, and go to state 132
    BOOL_LIT    shift, and go to state 31
    INT_LIT     shift, and go to state 32
    FLOAT_LIT   shift, and go to state 33
    STR_LIT     shift, and go to state 34
    '('         shift, and go to state 35
    SUB         shift, and go to state 36
    NOT         shift, and go to state 37
    BNT         shift, and go to state 38
    ADD         shift, and go to state 39

    ExpressionStmt      go to state 206
    AssignBody          go to state 135
    DefineVariableStmt  go to state 136
    Expression          go to state 137
    Or                  go to state 41
    And                 go to state 42
    BitwiseOr           go to state 43
    BitwiseXor          go to state 44
    BitwiseAnd          go to state 45
    Equality            go to state 46
    Relational          go to state 47
    Shift               go to state 48
    Additive            go to state 49
    Multiplicative      go to state 50
    TypeCast            go to state 51
    Unary               go to state 52
    Post                go to state 53
    Primary             go to state 54
    FunctionCall        go to state 55


State 188

   26 ExpressionStmt: Expression ';' •

    $default  reduce using rule 26 (ExpressionStmt)


State 189

   19 IterationStmt: WHILE $@2 '(' Expression ')' • $@3 CompoundStmt

    $default  reduce using rule 18 ($@3)

    $@3  go to state 207


State 190

  127 Primary: IDENT '[' Expression ']' •
  128        | IDENT '[' Expression ']' • '[' Expression ']'

    '['  shift, and go to state 208

    $default  reduce using rule 127 (Primary)


State 191

  112 TypeCast: '(' VARIABLE_T ')' Unary •

    $default  reduce using rule 112 (TypeCast)


State 192

   67 Declarator: IDENT '[' Expression ']' •
   68           | IDENT '[' Expression ']' • '[' Expression ']'
   69           | IDENT '[' Expression ']' • VAL_ASSIGN '{' ArrayEles '}'

    VAL_ASSIGN  shift, and go to state 209
    '['         shift, and go to state 210

    $default  reduce using rule 67 (Declarator)


State 193

  136 FunctionDefStmt: VARIABLE_T IDENT $@15 '(' $@16 • FunctionParameterStmtList ')' $@17 '{' GlobalStmtList '}'

    VARIABLE_T  shift, and go to state 211

    $default  reduce using rule 139 (FunctionParameterStmtList)

    FunctionParameterStmtList  go to state 212
    FunctionParameterStmt      go to state 213


State 194

  132 ArgumentListNonEmpty: ArgumentListNonEmpty ',' Expression •

    $default  reduce using rule 132 (ArgumentListNonEmpty)


State 195

   47 AssignBody: IDENT '[' Expression ']' '[' • Expression ']' $@13 Assign

    IDENT      shift, and go to state 30
    BOOL_LIT   shift, and go to state 31
    INT_LIT    shift, and go to state 32
    FLOAT_LIT  shift, and go to state 33
    STR_LIT    shift, and go to state 34
    '('        shift, and go to state 35
    SUB        shift, and go to state 36
    NOT        shift, and go to state 37
    BNT        shift, and go to state 38
    ADD        shift, and go to state 39

    Expression      go to state 214
    Or              go to state 41
    And             go to state 42
    BitwiseOr       go to state 43
    BitwiseXor      go to state 44
    BitwiseAnd      go to state 45
    Equality        go to state 46
    Relational      go to state 47
    Shift           go to state 48
    Additive        go to state 49
    Multiplicative  go to state 50
    TypeCast        go to state 51
    Unary           go to state 52
    Post            go to state 53
    Primary         go to state 54
    FunctionCall    go to state 55


State 196

   45 AssignBody: IDENT '[' Expression ']' $@12 • Assign

    VAL_ASSIGN  shift, and go to state 108
    ADD_ASSIGN  shift, and go to state 109
    SUB_ASSIGN  shift, and go to state 110
    MUL_ASSIGN  shift, and go to state 111
    DIV_ASSIGN  shift, and go to state 112
    REM_ASSIGN  shift, and go to state 113
    BAN_ASSIGN  shift, and go to state 114
    BOR_ASSIGN  shift, and go to state 115
    BXO_ASSIGN  shift, and go to state 116
    SHR_ASSIGN  shift, and go to state 117
    SHL_ASSIGN  shift, and go to state 118
    IDENT       shift, and go to state 30
    BOOL_LIT    shift, and go to state 31
    INT_LIT     shift, and go to state 32
    FLOAT_LIT   shift, and go to state 33
    STR_LIT     shift, and go to state 119
    '('         shift, and go to state 35
    SUB         shift, and go to state 36
    NOT         shift, and go to state 37
    BNT         shift, and go to state 38
    ADD         shift, and go to state 39

    Assign          go to state 215
    Assignable      go to state 121
    Expression      go to state 122
    Or              go to state 41
    And             go to state 42
    BitwiseOr       go to state 43
    BitwiseXor      go to state 44
    BitwiseAnd      go to state 45
    Equality        go to state 46
    Relational      go to state 47
    Shift           go to state 48
    Additive        go to state 49
    Multiplicative  go to state 50
    TypeCast        go to state 51
    Unary           go to state 52
    Post            go to state 53
    Primary         go to state 54
    FunctionCall    go to state 55


State 197

   40 Selection: '{' $@9 • GlobalStmtList $@10 '}'

    COUT        shift, and go to state 4
    IF          shift, and go to state 5
    FOR         shift, and go to state 6
    WHILE       shift, and go to state 7
    RETURN      shift, and go to state 8
    BREAK       shift, and go to state 9
    VARIABLE_T  shift, and go to state 10
    IDENT       shift, and go to state 11

    GlobalStmtList      go to state 216
    GlobalStmt          go to state 13
    FunctionCallStmt    go to state 14
    JumpStmt            go to state 15
    IterationStmt       go to state 16
    SelectionStmt       go to state 17
    AssignStmt          go to state 18
    AssignBody          go to state 19
    DefineVariableStmt  go to state 20
    ReturnStmt          go to state 21
    CoutStmt            go to state 22
    FunctionCall        go to state 23
    FunctionDefStmt     go to state 24


State 198

   78 PrintableList: PrintableList SHL Printable •

    $default  reduce using rule 78 (PrintableList)


State 199

   34 SelectionStmt: IF '(' Expression ')' $@7 Selection •

    $default  reduce using rule 34 (SelectionStmt)


State 200

   25 ForCondition: VARIABLE_T IDENT ':' • IDENT

    IDENT  shift, and go to state 217


State 201

   45 AssignBody: IDENT '[' Expression • ']' $@12 Assign
   47           | IDENT '[' Expression • ']' '[' Expression ']' $@13 Assign
  127 Primary: IDENT '[' Expression • ']'
  128        | IDENT '[' Expression • ']' '[' Expression ']'

    ']'  shift, and go to state 218


State 202

   31 CompoundStmt: '{' • GlobalStmtList '}'

    COUT        shift, and go to state 4
    IF          shift, and go to state 5
    FOR         shift, and go to state 6
    WHILE       shift, and go to state 7
    RETURN      shift, and go to state 8
    BREAK       shift, and go to state 9
    VARIABLE_T  shift, and go to state 10
    IDENT       shift, and go to state 11

    GlobalStmtList      go to state 219
    GlobalStmt          go to state 13
    FunctionCallStmt    go to state 14
    JumpStmt            go to state 15
    IterationStmt       go to state 16
    SelectionStmt       go to state 17
    AssignStmt          go to state 18
    AssignBody          go to state 19
    DefineVariableStmt  go to state 20
    ReturnStmt          go to state 21
    CoutStmt            go to state 22
    FunctionCall        go to state 23
    FunctionDefStmt     go to state 24


State 203

    4 GlobalStmtList: GlobalStmtList • GlobalStmt
   32 CompoundStmt: GlobalStmtList •

    COUT        shift, and go to state 4
    IF          shift, and go to state 5
    FOR         shift, and go to state 6
    WHILE       shift, and go to state 7
    RETURN      shift, and go to state 8
    BREAK       shift, and go to state 9
    VARIABLE_T  shift, and go to state 10
    IDENT       shift, and go to state 11

    COUT        [reduce using rule 32 (CompoundStmt)]
    IF          [reduce using rule 32 (CompoundStmt)]
    FOR         [reduce using rule 32 (CompoundStmt)]
    WHILE       [reduce using rule 32 (CompoundStmt)]
    RETURN      [reduce using rule 32 (CompoundStmt)]
    BREAK       [reduce using rule 32 (CompoundStmt)]
    VARIABLE_T  [reduce using rule 32 (CompoundStmt)]
    IDENT       [reduce using rule 32 (CompoundStmt)]
    $default    reduce using rule 32 (CompoundStmt)

    GlobalStmt          go to state 63
    FunctionCallStmt    go to state 14
    JumpStmt            go to state 15
    IterationStmt       go to state 16
    SelectionStmt       go to state 17
    AssignStmt          go to state 18
    AssignBody          go to state 19
    DefineVariableStmt  go to state 20
    ReturnStmt          go to state 21
    CoutStmt            go to state 22
    FunctionCall        go to state 23
    FunctionDefStmt     go to state 24


State 204

   21 IterationStmt: FOR $@4 '(' ForCondition ')' CompoundStmt •

    $default  reduce using rule 21 (IterationStmt)


State 205

   62 DefineVariableStmt: VARIABLE_T • DeclaratorList ';'

    IDENT  shift, and go to state 162

    DeclaratorList  go to state 58
    Declarator      go to state 59


State 206

   24 ForCondition: ExpressionStmt $@5 ExpressionStmt • $@6 ExpressionStmt

    $default  reduce using rule 23 ($@6)

    $@6  go to state 220


State 207

   19 IterationStmt: WHILE $@2 '(' Expression ')' $@3 • CompoundStmt

    COUT        shift, and go to state 4
    IF          shift, and go to state 5
    FOR         shift, and go to state 6
    WHILE       shift, and go to state 7
    RETURN      shift, and go to state 8
    BREAK       shift, and go to state 9
    '{'         shift, and go to state 202
    VARIABLE_T  shift, and go to state 10
    IDENT       shift, and go to state 11

    GlobalStmtList      go to state 203
    GlobalStmt          go to state 13
    FunctionCallStmt    go to state 14
    JumpStmt            go to state 15
    IterationStmt       go to state 16
    CompoundStmt        go to state 221
    SelectionStmt       go to state 17
    AssignStmt          go to state 18
    AssignBody          go to state 19
    DefineVariableStmt  go to state 20
    ReturnStmt          go to state 21
    CoutStmt            go to state 22
    FunctionCall        go to state 23
    FunctionDefStmt     go to state 24


State 208

  128 Primary: IDENT '[' Expression ']' '[' • Expression ']'

    IDENT      shift, and go to state 30
    BOOL_LIT   shift, and go to state 31
    INT_LIT    shift, and go to state 32
    FLOAT_LIT  shift, and go to state 33
    STR_LIT    shift, and go to state 34
    '('        shift, and go to state 35
    SUB        shift, and go to state 36
    NOT        shift, and go to state 37
    BNT        shift, and go to state 38
    ADD        shift, and go to state 39

    Expression      go to state 222
    Or              go to state 41
    And             go to state 42
    BitwiseOr       go to state 43
    BitwiseXor      go to state 44
    BitwiseAnd      go to state 45
    Equality        go to state 46
    Relational      go to state 47
    Shift           go to state 48
    Additive        go to state 49
    Multiplicative  go to state 50
    TypeCast        go to state 51
    Unary           go to state 52
    Post            go to state 53
    Primary         go to state 54
    FunctionCall    go to state 55


State 209

   69 Declarator: IDENT '[' Expression ']' VAL_ASSIGN • '{' ArrayEles '}'

    '{'  shift, and go to state 223


State 210

   68 Declarator: IDENT '[' Expression ']' '[' • Expression ']'

    IDENT      shift, and go to state 30
    BOOL_LIT   shift, and go to state 31
    INT_LIT    shift, and go to state 32
    FLOAT_LIT  shift, and go to state 33
    STR_LIT    shift, and go to state 34
    '('        shift, and go to state 35
    SUB        shift, and go to state 36
    NOT        shift, and go to state 37
    BNT        shift, and go to state 38
    ADD        shift, and go to state 39

    Expression      go to state 224
    Or              go to state 41
    And             go to state 42
    BitwiseOr       go to state 43
    BitwiseXor      go to state 44
    BitwiseAnd      go to state 45
    Equality        go to state 46
    Relational      go to state 47
    Shift           go to state 48
    Additive        go to state 49
    Multiplicative  go to state 50
    TypeCast        go to state 51
    Unary           go to state 52
    Post            go to state 53
    Primary         go to state 54
    FunctionCall    go to state 55


State 211

  140 FunctionParameterStmt: VARIABLE_T • IDENT
  142                      | VARIABLE_T • IDENT $@18 '[' ']'

    IDENT  shift, and go to state 225


State 212

  136 FunctionDefStmt: VARIABLE_T IDENT $@15 '(' $@16 FunctionParameterStmtList • ')' $@17 '{' GlobalStmtList '}'
  137 FunctionParameterStmtList: FunctionParameterStmtList • ',' FunctionParameterStmt

    ')'  shift, and go to state 226
    ','  shift, and go to state 227


State 213

  138 FunctionParameterStmtList: FunctionParameterStmt •

    $default  reduce using rule 138 (FunctionParameterStmtList)


State 214

   47 AssignBody: IDENT '[' Expression ']' '[' Expression • ']' $@13 Assign

    ']'  shift, and go to state 228


State 215

   45 AssignBody: IDENT '[' Expression ']' $@12 Assign •

    $default  reduce using rule 45 (AssignBody)


State 216

    4 GlobalStmtList: GlobalStmtList • GlobalStmt
   40 Selection: '{' $@9 GlobalStmtList • $@10 '}'

    COUT        shift, and go to state 4
    IF          shift, and go to state 5
    FOR         shift, and go to state 6
    WHILE       shift, and go to state 7
    RETURN      shift, and go to state 8
    BREAK       shift, and go to state 9
    VARIABLE_T  shift, and go to state 10
    IDENT       shift, and go to state 11

    $default  reduce using rule 39 ($@10)

    GlobalStmt          go to state 63
    FunctionCallStmt    go to state 14
    JumpStmt            go to state 15
    IterationStmt       go to state 16
    SelectionStmt       go to state 17
    $@10                go to state 229
    AssignStmt          go to state 18
    AssignBody          go to state 19
    DefineVariableStmt  go to state 20
    ReturnStmt          go to state 21
    CoutStmt            go to state 22
    FunctionCall        go to state 23
    FunctionDefStmt     go to state 24


State 217

   25 ForCondition: VARIABLE_T IDENT ':' IDENT •

    $default  reduce using rule 25 (ForCondition)


State 218

   45 AssignBody: IDENT '[' Expression ']' • $@12 Assign
   47           | IDENT '[' Expression ']' • '[' Expression ']' $@13 Assign
  127 Primary: IDENT '[' Expression ']' •
  128        | IDENT '[' Expression ']' • '[' Expression ']'

    '['  shift, and go to state 230

    SHR         reduce using rule 127 (Primary)
    BAN         reduce using rule 127 (Primary)
    BOR         reduce using rule 127 (Primary)
    BXO         reduce using rule 127 (Primary)
    MUL         reduce using rule 127 (Primary)
    DIV         reduce using rule 127 (Primary)
    REM         reduce using rule 127 (Primary)
    GTR         reduce using rule 127 (Primary)
    LES         reduce using rule 127 (Primary)
    GEQ         reduce using rule 127 (Primary)
    LEQ         reduce using rule 127 (Primary)
    EQL         reduce using rule 127 (Primary)
    NEQ         reduce using rule 127 (Primary)
    LAN         reduce using rule 127 (Primary)
    LOR         reduce using rule 127 (Primary)
    INC_ASSIGN  reduce using rule 127 (Primary)
    DEC_ASSIGN  reduce using rule 127 (Primary)
    ')'         reduce using rule 127 (Primary)
    ';'         reduce using rule 127 (Primary)
    VARIABLE_T  reduce using rule 127 (Primary)
    IDENT       reduce using rule 44 ($@12)
    IDENT       [reduce using rule 127 (Primary)]
    BOOL_LIT    reduce using rule 44 ($@12)
    BOOL_LIT    [reduce using rule 127 (Primary)]
    INT_LIT     reduce using rule 44 ($@12)
    INT_LIT     [reduce using rule 127 (Primary)]
    FLOAT_LIT   reduce using rule 44 ($@12)
    FLOAT_LIT   [reduce using rule 127 (Primary)]
    STR_LIT     reduce using rule 44 ($@12)
    STR_LIT     [reduce using rule 127 (Primary)]
    '('         reduce using rule 44 ($@12)
    '('         [reduce using rule 127 (Primary)]
    SUB         reduce using rule 44 ($@12)
    SUB         [reduce using rule 127 (Primary)]
    NOT         reduce using rule 44 ($@12)
    NOT         [reduce using rule 127 (Primary)]
    BNT         reduce using rule 44 ($@12)
    BNT         [reduce using rule 127 (Primary)]
    ADD         reduce using rule 44 ($@12)
    ADD         [reduce using rule 127 (Primary)]
    $default    reduce using rule 44 ($@12)

    $@12  go to state 196


State 219

    4 GlobalStmtList: GlobalStmtList • GlobalStmt
   31 CompoundStmt: '{' GlobalStmtList • '}'

    COUT        shift, and go to state 4
    IF          shift, and go to state 5
    FOR         shift, and go to state 6
    WHILE       shift, and go to state 7
    RETURN      shift, and go to state 8
    BREAK       shift, and go to state 9
    '}'         shift, and go to state 231
    VARIABLE_T  shift, and go to state 10
    IDENT       shift, and go to state 11

    GlobalStmt          go to state 63
    FunctionCallStmt    go to state 14
    JumpStmt            go to state 15
    IterationStmt       go to state 16
    SelectionStmt       go to state 17
    AssignStmt          go to state 18
    AssignBody          go to state 19
    DefineVariableStmt  go to state 20
    ReturnStmt          go to state 21
    CoutStmt            go to state 22
    FunctionCall        go to state 23
    FunctionDefStmt     go to state 24


State 220

   24 ForCondition: ExpressionStmt $@5 ExpressionStmt $@6 • ExpressionStmt

    ';'         shift, and go to state 130
    VARIABLE_T  shift, and go to state 205
    IDENT       shift, and go to state 132
    BOOL_LIT    shift, and go to state 31
    INT_LIT     shift, and go to state 32
    FLOAT_LIT   shift, and go to state 33
    STR_LIT     shift, and go to state 34
    '('         shift, and go to state 35
    SUB         shift, and go to state 36
    NOT         shift, and go to state 37
    BNT         shift, and go to state 38
    ADD         shift, and go to state 39

    ExpressionStmt      go to state 232
    AssignBody          go to state 135
    DefineVariableStmt  go to state 136
    Expression          go to state 137
    Or                  go to state 41
    And                 go to state 42
    BitwiseOr           go to state 43
    BitwiseXor          go to state 44
    BitwiseAnd          go to state 45
    Equality            go to state 46
    Relational          go to state 47
    Shift               go to state 48
    Additive            go to state 49
    Multiplicative      go to state 50
    TypeCast            go to state 51
    Unary               go to state 52
    Post                go to state 53
    Primary             go to state 54
    FunctionCall        go to state 55


State 221

   19 IterationStmt: WHILE $@2 '(' Expression ')' $@3 CompoundStmt •

    $default  reduce using rule 19 (IterationStmt)


State 222

  128 Primary: IDENT '[' Expression ']' '[' Expression • ']'

    ']'  shift, and go to state 233


State 223

   69 Declarator: IDENT '[' Expression ']' VAL_ASSIGN '{' • ArrayEles '}'

    IDENT      shift, and go to state 30
    BOOL_LIT   shift, and go to state 31
    INT_LIT    shift, and go to state 32
    FLOAT_LIT  shift, and go to state 33
    STR_LIT    shift, and go to state 119
    '('        shift, and go to state 35
    SUB        shift, and go to state 36
    NOT        shift, and go to state 37
    BNT        shift, and go to state 38
    ADD        shift, and go to state 39

    $default  reduce using rule 72 (ArrayEles)

    Assignable      go to state 234
    ArrayEles       go to state 235
    Expression      go to state 122
    Or              go to state 41
    And             go to state 42
    BitwiseOr       go to state 43
    BitwiseXor      go to state 44
    BitwiseAnd      go to state 45
    Equality        go to state 46
    Relational      go to state 47
    Shift           go to state 48
    Additive        go to state 49
    Multiplicative  go to state 50
    TypeCast        go to state 51
    Unary           go to state 52
    Post            go to state 53
    Primary         go to state 54
    FunctionCall    go to state 55


State 224

   68 Declarator: IDENT '[' Expression ']' '[' Expression • ']'

    ']'  shift, and go to state 236


State 225

  140 FunctionParameterStmt: VARIABLE_T IDENT •
  142                      | VARIABLE_T IDENT • $@18 '[' ']'

    '['       reduce using rule 141 ($@18)
    $default  reduce using rule 140 (FunctionParameterStmt)

    $@18  go to state 237


State 226

  136 FunctionDefStmt: VARIABLE_T IDENT $@15 '(' $@16 FunctionParameterStmtList ')' • $@17 '{' GlobalStmtList '}'

    $default  reduce using rule 135 ($@17)

    $@17  go to state 238


State 227

  137 FunctionParameterStmtList: FunctionParameterStmtList ',' • FunctionParameterStmt

    VARIABLE_T  shift, and go to state 211

    FunctionParameterStmt  go to state 239


State 228

   47 AssignBody: IDENT '[' Expression ']' '[' Expression ']' • $@13 Assign

    $default  reduce using rule 46 ($@13)

    $@13  go to state 240


State 229

   40 Selection: '{' $@9 GlobalStmtList $@10 • '}'

    '}'  shift, and go to state 241


State 230

   47 AssignBody: IDENT '[' Expression ']' '[' • Expression ']' $@13 Assign
  128 Primary: IDENT '[' Expression ']' '[' • Expression ']'

    IDENT      shift, and go to state 30
    BOOL_LIT   shift, and go to state 31
    INT_LIT    shift, and go to state 32
    FLOAT_LIT  shift, and go to state 33
    STR_LIT    shift, and go to state 34
    '('        shift, and go to state 35
    SUB        shift, and go to state 36
    NOT        shift, and go to state 37
    BNT        shift, and go to state 38
    ADD        shift, and go to state 39

    Expression      go to state 242
    Or              go to state 41
    And             go to state 42
    BitwiseOr       go to state 43
    BitwiseXor      go to state 44
    BitwiseAnd      go to state 45
    Equality        go to state 46
    Relational      go to state 47
    Shift           go to state 48
    Additive        go to state 49
    Multiplicative  go to state 50
    TypeCast        go to state 51
    Unary           go to state 52
    Post            go to state 53
    Primary         go to state 54
    FunctionCall    go to state 55


State 231

   31 CompoundStmt: '{' GlobalStmtList '}' •

    $default  reduce using rule 31 (CompoundStmt)


State 232

   24 ForCondition: ExpressionStmt $@5 ExpressionStmt $@6 ExpressionStmt •

    $default  reduce using rule 24 (ForCondition)


State 233

  128 Primary: IDENT '[' Expression ']' '[' Expression ']' •

    $default  reduce using rule 128 (Primary)


State 234

   70 ArrayEles: Assignable •

    $default  reduce using rule 70 (ArrayEles)


State 235

   69 Declarator: IDENT '[' Expression ']' VAL_ASSIGN '{' ArrayEles • '}'
   71 ArrayEles: ArrayEles • ',' Assignable

    '}'  shift, and go to state 243
    ','  shift, and go to state 244


State 236

   68 Declarator: IDENT '[' Expression ']' '[' Expression ']' •

    $default  reduce using rule 68 (Declarator)


State 237

  142 FunctionParameterStmt: VARIABLE_T IDENT $@18 • '[' ']'

    '['  shift, and go to state 245


State 238

  136 FunctionDefStmt: VARIABLE_T IDENT $@15 '(' $@16 FunctionParameterStmtList ')' $@17 • '{' GlobalStmtList '}'

    '{'  shift, and go to state 246


State 239

  137 FunctionParameterStmtList: FunctionParameterStmtList ',' FunctionParameterStmt •

    $default  reduce using rule 137 (FunctionParameterStmtList)


State 240

   47 AssignBody: IDENT '[' Expression ']' '[' Expression ']' $@13 • Assign

    VAL_ASSIGN  shift, and go to state 108
    ADD_ASSIGN  shift, and go to state 109
    SUB_ASSIGN  shift, and go to state 110
    MUL_ASSIGN  shift, and go to state 111
    DIV_ASSIGN  shift, and go to state 112
    REM_ASSIGN  shift, and go to state 113
    BAN_ASSIGN  shift, and go to state 114
    BOR_ASSIGN  shift, and go to state 115
    BXO_ASSIGN  shift, and go to state 116
    SHR_ASSIGN  shift, and go to state 117
    SHL_ASSIGN  shift, and go to state 118
    IDENT       shift, and go to state 30
    BOOL_LIT    shift, and go to state 31
    INT_LIT     shift, and go to state 32
    FLOAT_LIT   shift, and go to state 33
    STR_LIT     shift, and go to state 119
    '('         shift, and go to state 35
    SUB         shift, and go to state 36
    NOT         shift, and go to state 37
    BNT         shift, and go to state 38
    ADD         shift, and go to state 39

    Assign          go to state 247
    Assignable      go to state 121
    Expression      go to state 122
    Or              go to state 41
    And             go to state 42
    BitwiseOr       go to state 43
    BitwiseXor      go to state 44
    BitwiseAnd      go to state 45
    Equality        go to state 46
    Relational      go to state 47
    Shift           go to state 48
    Additive        go to state 49
    Multiplicative  go to state 50
    TypeCast        go to state 51
    Unary           go to state 52
    Post            go to state 53
    Primary         go to state 54
    FunctionCall    go to state 55


State 241

   40 Selection: '{' $@9 GlobalStmtList $@10 '}' •

    $default  reduce using rule 40 (Selection)


State 242

   47 AssignBody: IDENT '[' Expression ']' '[' Expression • ']' $@13 Assign
  128 Primary: IDENT '[' Expression ']' '[' Expression • ']'

    ']'  shift, and go to state 248


State 243

   69 Declarator: IDENT '[' Expression ']' VAL_ASSIGN '{' ArrayEles '}' •

    $default  reduce using rule 69 (Declarator)


State 244

   71 ArrayEles: ArrayEles ',' • Assignable

    IDENT      shift, and go to state 30
    BOOL_LIT   shift, and go to state 31
    INT_LIT    shift, and go to state 32
    FLOAT_LIT  shift, and go to state 33
    STR_LIT    shift, and go to state 119
    '('        shift, and go to state 35
    SUB        shift, and go to state 36
    NOT        shift, and go to state 37
    BNT        shift, and go to state 38
    ADD        shift, and go to state 39

    Assignable      go to state 249
    Expression      go to state 122
    Or              go to state 41
    And             go to state 42
    BitwiseOr       go to state 43
    BitwiseXor      go to state 44
    BitwiseAnd      go to state 45
    Equality        go to state 46
    Relational      go to state 47
    Shift           go to state 48
    Additive        go to state 49
    Multiplicative  go to state 50
    TypeCast        go to state 51
    Unary           go to state 52
    Post            go to state 53
    Primary         go to state 54
    FunctionCall    go to state 55


State 245

  142 FunctionParameterStmt: VARIABLE_T IDENT $@18 '[' • ']'

    ']'  shift, and go to state 250


State 246

  136 FunctionDefStmt: VARIABLE_T IDENT $@15 '(' $@16 FunctionParameterStmtList ')' $@17 '{' • GlobalStmtList '}'

    COUT        shift, and go to state 4
    IF          shift, and go to state 5
    FOR         shift, and go to state 6
    WHILE       shift, and go to state 7
    RETURN      shift, and go to state 8
    BREAK       shift, and go to state 9
    VARIABLE_T  shift, and go to state 10
    IDENT       shift, and go to state 11

    GlobalStmtList      go to state 251
    GlobalStmt          go to state 13
    FunctionCallStmt    go to state 14
    JumpStmt            go to state 15
    IterationStmt       go to state 16
    SelectionStmt       go to state 17
    AssignStmt          go to state 18
    AssignBody          go to state 19
    DefineVariableStmt  go to state 20
    ReturnStmt          go to state 21
    CoutStmt            go to state 22
    FunctionCall        go to state 23
    FunctionDefStmt     go to state 24


State 247

   47 AssignBody: IDENT '[' Expression ']' '[' Expression ']' $@13 Assign •

    $default  reduce using rule 47 (AssignBody)


State 248

   47 AssignBody: IDENT '[' Expression ']' '[' Expression ']' • $@13 Assign
  128 Primary: IDENT '[' Expression ']' '[' Expression ']' •

    SHR         reduce using rule 128 (Primary)
    BAN         reduce using rule 128 (Primary)
    BOR         reduce using rule 128 (Primary)
    BXO         reduce using rule 128 (Primary)
    MUL         reduce using rule 128 (Primary)
    DIV         reduce using rule 128 (Primary)
    REM         reduce using rule 128 (Primary)
    GTR         reduce using rule 128 (Primary)
    LES         reduce using rule 128 (Primary)
    GEQ         reduce using rule 128 (Primary)
    LEQ         reduce using rule 128 (Primary)
    EQL         reduce using rule 128 (Primary)
    NEQ         reduce using rule 128 (Primary)
    LAN         reduce using rule 128 (Primary)
    LOR         reduce using rule 128 (Primary)
    INC_ASSIGN  reduce using rule 128 (Primary)
    DEC_ASSIGN  reduce using rule 128 (Primary)
    ')'         reduce using rule 128 (Primary)
    ';'         reduce using rule 128 (Primary)
    VARIABLE_T  reduce using rule 128 (Primary)
    IDENT       reduce using rule 46 ($@13)
    IDENT       [reduce using rule 128 (Primary)]
    BOOL_LIT    reduce using rule 46 ($@13)
    BOOL_LIT    [reduce using rule 128 (Primary)]
    INT_LIT     reduce using rule 46 ($@13)
    INT_LIT     [reduce using rule 128 (Primary)]
    FLOAT_LIT   reduce using rule 46 ($@13)
    FLOAT_LIT   [reduce using rule 128 (Primary)]
    STR_LIT     reduce using rule 46 ($@13)
    STR_LIT     [reduce using rule 128 (Primary)]
    '('         reduce using rule 46 ($@13)
    '('         [reduce using rule 128 (Primary)]
    SUB         reduce using rule 46 ($@13)
    SUB         [reduce using rule 128 (Primary)]
    NOT         reduce using rule 46 ($@13)
    NOT         [reduce using rule 128 (Primary)]
    BNT         reduce using rule 46 ($@13)
    BNT         [reduce using rule 128 (Primary)]
    ADD         reduce using rule 46 ($@13)
    ADD         [reduce using rule 128 (Primary)]
    $default    reduce using rule 46 ($@13)

    $@13  go to state 240


State 249

   71 ArrayEles: ArrayEles ',' Assignable •

    $default  reduce using rule 71 (ArrayEles)


State 250

  142 FunctionParameterStmt: VARIABLE_T IDENT $@18 '[' ']' •

    $default  reduce using rule 142 (FunctionParameterStmt)


State 251

    4 GlobalStmtList: GlobalStmtList • GlobalStmt
  136 FunctionDefStmt: VARIABLE_T IDENT $@15 '(' $@16 FunctionParameterStmtList ')' $@17 '{' GlobalStmtList • '}'

    COUT        shift, and go to state 4
    IF          shift, and go to state 5
    FOR         shift, and go to state 6
    WHILE       shift, and go to state 7
    RETURN      shift, and go to state 8
    BREAK       shift, and go to state 9
    '}'         shift, and go to state 252
    VARIABLE_T  shift, and go to state 10
    IDENT       shift, and go to state 11

    GlobalStmt          go to state 63
    FunctionCallStmt    go to state 14
    JumpStmt            go to state 15
    IterationStmt       go to state 16
    SelectionStmt       go to state 17
    AssignStmt          go to state 18
    AssignBody          go to state 19
    DefineVariableStmt  go to state 20
    ReturnStmt          go to state 21
    CoutStmt            go to state 22
    FunctionCall        go to state 23
    FunctionDefStmt     go to state 24


State 252

  136 FunctionDefStmt: VARIABLE_T IDENT $@15 '(' $@16 FunctionParameterStmtList ')' $@17 '{' GlobalStmtList '}' •

    $default  reduce using rule 136 (FunctionDefStmt)
